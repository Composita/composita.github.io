{"version":3,"sources":["../webpack/bootstrap","../../../src/builtin.ts","../../../src/enums.ts","../../../src/descriptor.ts","../../../src/instruction.ts","../../../src/opcode.ts","../../../src/syscall.ts","../../../src/il.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../../../src/values.ts","../../../src/evalstack.ts","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../../src/types.ts","../../../src/runtime.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/fast-deep-equal/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../src/scheduler.ts","../../../src/syscallhandler.ts","../../../src/interpreter.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/process/browser.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../src/tokens/tokens.ts","../../../../src/source-location/location.ts","../node_modules/vscode-languageserver-types/lib/esm/main.js","../../../../src/diagnosis/diagnosis.ts","../../../../src/lexer/lexer.ts","../../../../src/ast/declaration.ts","../../../../src/ast/node.ts","../../../../src/ast/attribute.ts","../../../../src/ast/cardinality.ts","../../../../src/ast/expression.ts","../../../../src/ast/component.ts","../../../../src/ast/constant.ts","../../../../src/ast/simple-expression.ts","../../../../src/ast/term.ts","../../../../src/ast/factor.ts","../../../../src/ast/operand.ts","../../../../src/ast/designator.ts","../../../../src/ast/interface-declaration.ts","../../../../src/ast/implementation.ts","../../../../src/ast/interface.ts","../../../../src/ast/protocol-factor.ts","../../../../src/ast/name.ts","../../../../src/ast/parameter.ts","../../../../src/ast/procedure.ts","../../../../src/ast/program.ts","../../../../src/ast/statement.ts","../../../../src/ast/type.ts","../../../../src/ast/statement-sequence.ts","../../../../src/parser/keywords.ts","../../../../src/ast/variable.ts","../../../../src/ast/visitor.ts","../../../../src/parser/parser.ts","../../../../src/symbols/scope-symbols.ts","../../../../src/symbols/type-symbols.ts","../../../../src/generator/il-assembler.ts","../../../../src/symbols/generic-symbols.ts","../../../../src/symbols/symboltable.ts","../../../../src/symbols/variable-symbols.ts","../../../../src/checker/fix-type-node.ts","../../../../src/checker/fix-expression-node.ts","../../../../src/checker/static-helpers.ts","../../../../src/checker/register-component.ts","../../../../src/checker/register-interface.ts","../../../../src/checker/register-messages.ts","../../../../src/checker/register-procedure.ts","../../../../src/checker/register-implementation.ts","../../../../src/checker/register-constant-list.ts","../../../../src/checker/register-variable-list.ts","../../../../src/checker/register-types.ts","../../../../src/checker/symbol-construction.ts","../../../../src/checker/fix-statement-node.ts","../../../../src/checker/symbol-fix.ts","../../../../src/checker/checker.ts","../../../../src/generator/code-generator.ts","../../../../src/generator/metadata.ts","../../../../src/generator/generator.ts","../../../src/compiler.ts","workers/system.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","initialValue","this","arguments","Array","ProtocolType","OperationCode","SystemCallOperation","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","stack","Error","pop","undefined","activeCode","ActiveCode","lastActiveCode","_inherits","subClass","superClass","constructor","_typeof","obj","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","apply","Class","_cache","Map","fn","Function","toString","indexOf","has","set","Wrapper","setPrototypeOf","_construct","Parent","args","a","push","equal","b","keys","isArray","RegExp","source","flags","valueOf","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","err","_setPrototypeOf","__proto__","_getPrototypeOf","_isNativeReflectConstruct","sham","Proxy","Boolean","e","active","SyscallInterpreter","toValue","activeValue","evalStack","right","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_arrayLikeToArray","arr","arr2","_toConsumableArray","from","minLen","test","other","SourcePosition","line","character","startACompare","start","compareTo","endACompare","end","Tag","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","MIN_VALUE","MAX_VALUE","Number","is","candidate","Is","objectLiteral","one","two","three","four","uri","range","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","location","message","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","code","relatedInformation","_a","number","codeDescription","command","_i","replace","newText","insert","position","del","needsConfirmation","description","boolean","annotation","annotationId","textDocument","edits","OptionalVersionedTextDocumentIdentifier","options","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","changeAnnotations","edit","id","assertChangeAnnotations","manage","delete","add","all","clear","splice","ChangeAnnotations","annotations","_annotations","_counter","_size","idOrAnnotation","nextId","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","_changeAnnotations","textEditChange","initDocumentChanges","size","getTextEditChange","textDocumentEdit","initChanges","createFile","optionsOrAnnotation","operation","renameFile","deleteFile","languageId","text","PlainText","Markdown","Text","Method","Field","Variable","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Key","Null","containerName","detail","selectionRange","children","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","kindOrCommandOrEdit","checkKind","isPreferred","data","tabSize","insertSpaces","parent","TextDocument","mergeSort","compare","left","leftIdx","rightIdx","ret","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","startOffset","endOffset","substring","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","check","SpecialCharacter","currentCharacter","getCurrentCharacter","visitor","visitProcedure","what","expression","node","IdentifierKeywords","tryConsumeFixToken","expectConsumeFixToken","loop","BlockScopeSymbolTag","BuiltInTypeSymbolTag","GenericComponentSymbolTag","scope","genericType","identifier","required","GenericSymbol","validate","filter","findInComponent","types","symbolTable","findType","getIdentifier","typeToSymbol","accept","getName","attributes","getAttributes","componentSymbol","interfaceSymbols","offered","symbol","interfaceSymbol","map","getImplementation","assembler","createLabel","symbols","ctx","isRunning","capture","msgs","msg","postMessage","output","running","updater","compiler","Compiler","initRuntime","Runtime","changeOutput","isRunningUpdate","onmessage","il","compile","console","log","halt"],"mappings":"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","file":"static/js/system.worker.32ba1df7.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","var IntegerDescriptorTag;\n(function (IntegerDescriptorTag) {\n    IntegerDescriptorTag[IntegerDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerDescriptorTag || (IntegerDescriptorTag = {}));\nexport class IntegerDescriptor {\n    constructor(initialValue = 0) {\n        this._integerDescriptorTag = IntegerDescriptorTag.Tag;\n        this.initialValue = Math.trunc(initialValue);\n    }\n}\nvar FloatDescriptorTag;\n(function (FloatDescriptorTag) {\n    FloatDescriptorTag[FloatDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatDescriptorTag || (FloatDescriptorTag = {}));\nexport class FloatDescriptor {\n    constructor(initialValue = 0) {\n        this._floatDescriptorTag = FloatDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\nvar TextDescriptorTag;\n(function (TextDescriptorTag) {\n    TextDescriptorTag[TextDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(TextDescriptorTag || (TextDescriptorTag = {}));\nexport class TextDescriptor {\n    constructor(initialValue = '') {\n        this._TextDescriptorTag = TextDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\nvar CharacterDescriptorTag;\n(function (CharacterDescriptorTag) {\n    CharacterDescriptorTag[CharacterDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(CharacterDescriptorTag || (CharacterDescriptorTag = {}));\nexport class CharacterDescriptor {\n    constructor(initialValue = '') {\n        this._characterDescriptorTag = CharacterDescriptorTag.Tag;\n        if (initialValue.length > 1) {\n            throw new Error('CharacterDescriptor initialValue lenght > 1');\n        }\n        this.initialValue = initialValue;\n    }\n}\nvar BooleanDescriptorTag;\n(function (BooleanDescriptorTag) {\n    BooleanDescriptorTag[BooleanDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(BooleanDescriptorTag || (BooleanDescriptorTag = {}));\nexport class BooleanDescriptor {\n    constructor(initialValue = false) {\n        this._booleanDescriptorTag = BooleanDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\n//# sourceMappingURL=builtin.js.map","export var ProtocolType;\n(function (ProtocolType) {\n    ProtocolType[ProtocolType[\"Once\"] = 0] = \"Once\";\n    ProtocolType[ProtocolType[\"Optional\"] = 1] = \"Optional\";\n    ProtocolType[ProtocolType[\"Repeating\"] = 2] = \"Repeating\";\n})(ProtocolType || (ProtocolType = {}));\n//# sourceMappingURL=enums.js.map","export class DeclarationDescriptor {\n    constructor() {\n        this.init = new CodeBlockDescriptor();\n        this.variables = new Array();\n        this.procedures = new Array();\n        this.components = new Array();\n    }\n}\nexport class ComponentDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.offers = new Array();\n        this.requires = new Array();\n        this.declarations = new DeclarationDescriptor();\n        this.implementations = new Array();\n        this.begin = new CodeBlockDescriptor();\n        this.activity = new CodeBlockDescriptor();\n        this.finally = new CodeBlockDescriptor();\n    }\n}\nexport class ProcedureDescriptor {\n    constructor(identifier, returnType) {\n        this.identifier = identifier;\n        this.returnType = returnType;\n        this.parameters = new Array();\n        this.declarations = new DeclarationDescriptor();\n        this.begin = new CodeBlockDescriptor();\n    }\n}\nexport class ImplementationDescriptor {\n    constructor(reference) {\n        this.reference = reference;\n        this.declarations = new DeclarationDescriptor();\n        this.begin = new CodeBlockDescriptor();\n    }\n}\nexport class VariableDescriptor {\n    constructor(identifier, type, mutable) {\n        this.identifier = identifier;\n        this.type = type;\n        this.mutable = mutable;\n        this.indexTypes = new Array();\n    }\n}\nexport class CodeBlockDescriptor {\n    constructor() {\n        this.instructions = new Array();\n    }\n}\nexport class InterfaceDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.protocols = new Array();\n    }\n}\nexport class ProtocolDescriptor {\n    constructor(type) {\n        this.type = type;\n        this.messages = new Array();\n    }\n}\nexport class MessageDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.data = new Array();\n    }\n}\nexport class JumpDescriptor {\n    constructor(offset) {\n        this.offset = offset;\n    }\n}\nexport class SystemCallDescriptor {\n    constructor(systemCall, ...args) {\n        this.systemCall = systemCall;\n        this.arguments = new Array(...args);\n    }\n}\n//# sourceMappingURL=descriptor.js.map","export class Instruction {\n    constructor(code, ...args) {\n        this.code = code;\n        this.arguments = new Array(...args);\n    }\n}\n//# sourceMappingURL=instruction.js.map","export var OperationCode;\n(function (OperationCode) {\n    // math binary\n    OperationCode[OperationCode[\"Add\"] = 0] = \"Add\";\n    OperationCode[OperationCode[\"Subtract\"] = 1] = \"Subtract\";\n    OperationCode[OperationCode[\"Multiply\"] = 2] = \"Multiply\";\n    OperationCode[OperationCode[\"Divide\"] = 3] = \"Divide\";\n    OperationCode[OperationCode[\"Negate\"] = 4] = \"Negate\";\n    OperationCode[OperationCode[\"Modulo\"] = 5] = \"Modulo\";\n    // compare\n    OperationCode[OperationCode[\"Equal\"] = 6] = \"Equal\";\n    OperationCode[OperationCode[\"Less\"] = 7] = \"Less\";\n    OperationCode[OperationCode[\"LessEqual\"] = 8] = \"LessEqual\";\n    OperationCode[OperationCode[\"Greater\"] = 9] = \"Greater\";\n    OperationCode[OperationCode[\"GreaterEqual\"] = 10] = \"GreaterEqual\";\n    OperationCode[OperationCode[\"NotEqual\"] = 11] = \"NotEqual\";\n    // unary invert\n    OperationCode[OperationCode[\"Not\"] = 12] = \"Not\";\n    // logic binary ops\n    OperationCode[OperationCode[\"LogicOr\"] = 13] = \"LogicOr\";\n    OperationCode[OperationCode[\"LogicAnd\"] = 14] = \"LogicAnd\";\n    // new component\n    OperationCode[OperationCode[\"New\"] = 15] = \"New\";\n    OperationCode[OperationCode[\"Delete\"] = 16] = \"Delete\";\n    OperationCode[OperationCode[\"Send\"] = 17] = \"Send\";\n    OperationCode[OperationCode[\"Receive\"] = 18] = \"Receive\";\n    OperationCode[OperationCode[\"Connect\"] = 19] = \"Connect\";\n    OperationCode[OperationCode[\"Disconnect\"] = 20] = \"Disconnect\";\n    OperationCode[OperationCode[\"ReceiveTest\"] = 21] = \"ReceiveTest\";\n    OperationCode[OperationCode[\"InputTest\"] = 22] = \"InputTest\";\n    OperationCode[OperationCode[\"SystemCall\"] = 23] = \"SystemCall\";\n    OperationCode[OperationCode[\"ProcedureCall\"] = 24] = \"ProcedureCall\";\n    OperationCode[OperationCode[\"Return\"] = 25] = \"Return\";\n    // load constants\n    OperationCode[OperationCode[\"LoadConstantBoolean\"] = 26] = \"LoadConstantBoolean\";\n    OperationCode[OperationCode[\"LoadConstantText\"] = 27] = \"LoadConstantText\";\n    OperationCode[OperationCode[\"LoadConstantCharacter\"] = 28] = \"LoadConstantCharacter\";\n    OperationCode[OperationCode[\"LoadConstantFloat\"] = 29] = \"LoadConstantFloat\";\n    OperationCode[OperationCode[\"LoadConstantInteger\"] = 30] = \"LoadConstantInteger\";\n    // move components around\n    OperationCode[OperationCode[\"Move\"] = 31] = \"Move\";\n    // variables\n    OperationCode[OperationCode[\"StoreVariable\"] = 32] = \"StoreVariable\";\n    OperationCode[OperationCode[\"LoadVariable\"] = 33] = \"LoadVariable\";\n    OperationCode[OperationCode[\"LoadArrayVariable\"] = 34] = \"LoadArrayVariable\";\n    OperationCode[OperationCode[\"LoadArrayVariableElement\"] = 35] = \"LoadArrayVariableElement\";\n    OperationCode[OperationCode[\"LoadService\"] = 36] = \"LoadService\";\n    OperationCode[OperationCode[\"LoadThis\"] = 37] = \"LoadThis\";\n    // concurrency\n    OperationCode[OperationCode[\"AcquireShared\"] = 38] = \"AcquireShared\";\n    OperationCode[OperationCode[\"ReleaseShared\"] = 39] = \"ReleaseShared\";\n    OperationCode[OperationCode[\"AcquireExclusive\"] = 40] = \"AcquireExclusive\";\n    OperationCode[OperationCode[\"ReleaseExclusive\"] = 41] = \"ReleaseExclusive\";\n    OperationCode[OperationCode[\"Branch\"] = 42] = \"Branch\";\n    OperationCode[OperationCode[\"BranchTrue\"] = 43] = \"BranchTrue\";\n    OperationCode[OperationCode[\"BranchFalse\"] = 44] = \"BranchFalse\";\n    OperationCode[OperationCode[\"IsType\"] = 45] = \"IsType\";\n    OperationCode[OperationCode[\"ExistsTest\"] = 46] = \"ExistsTest\";\n    // foreach\n    OperationCode[OperationCode[\"BeginForEach\"] = 47] = \"BeginForEach\";\n    OperationCode[OperationCode[\"EndForEach\"] = 48] = \"EndForEach\";\n    OperationCode[OperationCode[\"AssignArrayIndex\"] = 49] = \"AssignArrayIndex\";\n})(OperationCode || (OperationCode = {}));\n//# sourceMappingURL=opcode.js.map","export var SystemCallOperation;\n(function (SystemCallOperation) {\n    SystemCallOperation[SystemCallOperation[\"Write\"] = 0] = \"Write\";\n    SystemCallOperation[SystemCallOperation[\"WriteLine\"] = 1] = \"WriteLine\";\n    SystemCallOperation[SystemCallOperation[\"WriteHex\"] = 2] = \"WriteHex\";\n    SystemCallOperation[SystemCallOperation[\"Assert\"] = 3] = \"Assert\";\n    SystemCallOperation[SystemCallOperation[\"Halt\"] = 4] = \"Halt\";\n    SystemCallOperation[SystemCallOperation[\"Inc\"] = 5] = \"Inc\";\n    SystemCallOperation[SystemCallOperation[\"Dec\"] = 6] = \"Dec\";\n    SystemCallOperation[SystemCallOperation[\"Passivate\"] = 7] = \"Passivate\";\n    SystemCallOperation[SystemCallOperation[\"Count\"] = 8] = \"Count\";\n    SystemCallOperation[SystemCallOperation[\"Length\"] = 9] = \"Length\";\n    SystemCallOperation[SystemCallOperation[\"Sqrt\"] = 10] = \"Sqrt\";\n    SystemCallOperation[SystemCallOperation[\"Sin\"] = 11] = \"Sin\";\n    SystemCallOperation[SystemCallOperation[\"Cos\"] = 12] = \"Cos\";\n    SystemCallOperation[SystemCallOperation[\"Tan\"] = 13] = \"Tan\";\n    SystemCallOperation[SystemCallOperation[\"ArcSin\"] = 14] = \"ArcSin\";\n    SystemCallOperation[SystemCallOperation[\"ArcCos\"] = 15] = \"ArcCos\";\n    SystemCallOperation[SystemCallOperation[\"ArcTan\"] = 16] = \"ArcTan\";\n    SystemCallOperation[SystemCallOperation[\"Random\"] = 17] = \"Random\";\n    SystemCallOperation[SystemCallOperation[\"Min\"] = 18] = \"Min\";\n    SystemCallOperation[SystemCallOperation[\"Max\"] = 19] = \"Max\";\n    SystemCallOperation[SystemCallOperation[\"ToCharacter\"] = 20] = \"ToCharacter\";\n    SystemCallOperation[SystemCallOperation[\"ToInteger\"] = 21] = \"ToInteger\";\n    SystemCallOperation[SystemCallOperation[\"ToReal\"] = 22] = \"ToReal\";\n    SystemCallOperation[SystemCallOperation[\"ToText\"] = 23] = \"ToText\";\n})(SystemCallOperation || (SystemCallOperation = {}));\n//# sourceMappingURL=syscall.js.map","export class IL {\n    constructor() {\n        this.entryPoints = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n    }\n}\nexport * from './builtin';\nexport * from './descriptor';\nexport * from './enums';\nexport * from './instruction';\nexport * from './opcode';\nexport * from './syscall';\n//# sourceMappingURL=il.js.map","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import { EvaluationStack } from './evalstack';\nexport var ActiveCode;\n(function (ActiveCode) {\n    ActiveCode[ActiveCode[\"Init\"] = 0] = \"Init\";\n    ActiveCode[ActiveCode[\"Begin\"] = 1] = \"Begin\";\n    ActiveCode[ActiveCode[\"Activity\"] = 2] = \"Activity\";\n    ActiveCode[ActiveCode[\"Finally\"] = 3] = \"Finally\";\n    ActiveCode[ActiveCode[\"Procedure\"] = 4] = \"Procedure\";\n})(ActiveCode || (ActiveCode = {}));\nvar ComponentPointerTag;\n(function (ComponentPointerTag) {\n    ComponentPointerTag[ComponentPointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ComponentPointerTag || (ComponentPointerTag = {}));\nexport class ComponentPointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._componentPointerTag = ComponentPointerTag.Tag;\n    }\n}\nvar ServicePointerTag;\n(function (ServicePointerTag) {\n    ServicePointerTag[ServicePointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ServicePointerTag || (ServicePointerTag = {}));\nexport class ServicePointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._servicePointerTag = ServicePointerTag.Tag;\n    }\n}\nvar ProcedurePointerTag;\n(function (ProcedurePointerTag) {\n    ProcedurePointerTag[ProcedurePointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ProcedurePointerTag || (ProcedurePointerTag = {}));\nexport class ProcedurePointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._procedurePointerTag = ProcedurePointerTag.Tag;\n    }\n}\nvar RootPointerTag;\n(function (RootPointerTag) {\n    RootPointerTag[RootPointerTag[\"Tag\"] = 0] = \"Tag\";\n})(RootPointerTag || (RootPointerTag = {}));\nexport class RootPointer {\n    constructor() {\n        this._rootPointerTag = RootPointerTag.Tag;\n    }\n}\nexport class ActiveValue {\n    constructor(declarations, parent, evalStack) {\n        this.declarations = declarations;\n        this.parent = parent;\n        this.evalStack = evalStack;\n        this.variables = new Array();\n        this.procedures = new Array();\n        this.onHold = () => false;\n        this.exclusiveLock = undefined;\n        this.done = false;\n        this.activeCode = ActiveCode.Init;\n        this.lastActiveCode = ActiveCode.Init;\n        this.instructionPointer = new Map([\n            [ActiveCode.Init, 0],\n            [ActiveCode.Begin, 0],\n            [ActiveCode.Activity, 0],\n            [ActiveCode.Finally, 0],\n            [ActiveCode.Procedure, 0],\n        ]);\n    }\n    fetch() {\n        this.updateActiveSection();\n        if (this.isDone() || this.onHold()) {\n            return undefined;\n        }\n        this.onHold = () => false;\n        switch (this.activeCode) {\n            case ActiveCode.Init:\n                return this.declarations.init.instructions[this.loadAndAdvanceIP()];\n            case ActiveCode.Procedure:\n                return this.procedures[this.loadIP()]?.fetch();\n            default:\n                return this.fetchNext();\n        }\n    }\n    wait(fn) {\n        this.onHold = fn;\n    }\n    jump(descriptor) {\n        if (this.isDone()) {\n            return;\n        }\n        const currentIP = this.instructionPointer.get(this.activeCode);\n        const newIP = currentIP + descriptor.offset;\n        if (newIP < 0) {\n            throw new Error('Invalid jump.');\n        }\n        // TODO check max range is still valid.\n        this.instructionPointer.set(this.activeCode, newIP);\n    }\n    call(descriptor, args) {\n        if (args.length !== descriptor.parameters.length) {\n            throw new Error('Procedurecall: Number of parameters do not match.');\n        }\n        if (this.activeCode === ActiveCode.Procedure) {\n            this.procedures[this.activeCode]?.call(descriptor, args);\n            return false;\n        }\n        this.lastActiveCode = this.activeCode;\n        this.activeCode = ActiveCode.Procedure;\n        const procedureIdx = this.procedures.findIndex((prod) => prod.descriptor === descriptor);\n        if (procedureIdx === -1) {\n            throw new Error('Unkonwn procedure, hierarchical calls are not yet supported.');\n        }\n        this.instructionPointer.set(this.activeCode, procedureIdx);\n        args.forEach((arg, index) => {\n            if (arg !== undefined) {\n                const paramDescriptor = descriptor.parameters[index];\n                const param = new VariableValue(paramDescriptor, arg);\n                param.fixAccessModifier();\n                this.procedures[procedureIdx].parameters.push(param);\n            }\n        });\n        return true;\n    }\n    procedureReturned() {\n        if (this.activeCode !== ActiveCode.Procedure) {\n            throw new Error('Return is only supported in a procedure.');\n        }\n        this.procedures[this.loadIP()]?.markReturned();\n    }\n    currentState() {\n        return this.activeCode;\n    }\n    finalize() {\n        if (this.lastActiveCode === ActiveCode.Finally && this.activeCode === ActiveCode.Procedure) {\n            return;\n        }\n        this.lastActiveCode = this.activeCode;\n        this.activeCode = ActiveCode.Finally;\n    }\n    isDone() {\n        return this.done;\n    }\n    loadIP() {\n        return this.instructionPointer.get(this.activeCode);\n    }\n    loadAndAdvanceIP() {\n        const rip = this.loadIP();\n        if (this.activeCode !== ActiveCode.Procedure) {\n            this.instructionPointer.set(this.activeCode, rip + 1);\n        }\n        return rip;\n    }\n    updateActiveSection() {\n        if (this.isDone() || !this.activeDone() || !this.isReady()) {\n            return;\n        }\n        // Done with current code section\n        if (this.activeCode === ActiveCode.Init) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Begin;\n            this.variables.forEach((variable) => {\n                if (variable instanceof VariableValue) {\n                    variable.fixAccessModifier();\n                }\n            });\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Begin) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Activity;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Activity) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Finally;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Procedure) {\n            this.activeCode = this.lastActiveCode;\n            this.lastActiveCode = ActiveCode.Procedure;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Finally) {\n            this.lastActiveCode = this.activeCode;\n            this.done = true;\n            return;\n        }\n    }\n    activeDone() {\n        const activeIP = this.loadIP();\n        if (this.initActive()) {\n            return activeIP >= this.declarations.init.instructions.length;\n        }\n        if (this.procedureActive()) {\n            return this.procedures[activeIP] === undefined || this.procedures[activeIP].isDone();\n        }\n        return this.activeCodeDone();\n    }\n    initActive() {\n        return this.activeCode === ActiveCode.Init;\n    }\n    procedureActive() {\n        return this.activeCode === ActiveCode.Procedure;\n    }\n    resetActive() {\n        this.done = false;\n        this.activeCode = ActiveCode.Init;\n        this.lastActiveCode = ActiveCode.Init;\n        this.instructionPointer = new Map([\n            [ActiveCode.Init, 0],\n            [ActiveCode.Begin, 0],\n            [ActiveCode.Activity, 0],\n            [ActiveCode.Finally, 0],\n            [ActiveCode.Procedure, 0],\n        ]);\n    }\n}\nexport class ComponentValue extends ActiveValue {\n    constructor(descriptor, parent) {\n        super(descriptor.declarations, parent, new EvaluationStack());\n        this.descriptor = descriptor;\n        this.offerConnections = new Map();\n        this.requiredConnections = new Map();\n        descriptor.offers.forEach((offer) => this.offerConnections.set(offer, []));\n        descriptor.requires.forEach((require) => this.requiredConnections.set(require, []));\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.loadIP() < this.descriptor.begin.instructions.length\n                    ? this.descriptor.begin.instructions[this.loadAndAdvanceIP()]\n                    : undefined;\n            case ActiveCode.Activity:\n                return this.loadIP() < this.descriptor.activity.instructions.length\n                    ? this.descriptor.activity.instructions[this.loadAndAdvanceIP()]\n                    : undefined;\n            case ActiveCode.Finally:\n                return this.descriptor.finally.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    isReady() {\n        let result = true;\n        this.requiredConnections.forEach((value) => {\n            result = result && value.length > 0;\n        });\n        return result;\n    }\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return /* this.requiredConnected() && */ activeIP >= this.descriptor.begin.instructions.length;\n            case ActiveCode.Activity:\n                return /* !this.offeredConnected() && */ activeIP >= this.descriptor.activity.instructions.length;\n            case ActiveCode.Finally:\n                // TODO\n                //{\n                //    if (activeIP >= this.descriptor.finally.instructions.length) {\n                //        this.disconnectAll();\n                //    }\n                //}\n                return activeIP >= this.descriptor.finally.instructions.length;\n            default:\n                return true;\n        }\n    }\n}\nexport class ServiceValue extends ActiveValue {\n    constructor(descriptor, parent) {\n        super(descriptor.declarations, parent, new EvaluationStack());\n        this.descriptor = descriptor;\n        this.messageQueue = new Array();\n    }\n    isReady() {\n        return true;\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions.length <= activeIP;\n            default:\n                return true;\n        }\n    }\n}\nexport class ProcedureValue extends ActiveValue {\n    constructor(descriptor, parent, evalStack) {\n        super(descriptor.declarations, parent, evalStack);\n        this.descriptor = descriptor;\n        this.hasReturned = false;\n        this.parameters = new Array();\n    }\n    isReady() {\n        return true;\n    }\n    findConnectedService() {\n        return undefined;\n    }\n    markReturned() {\n        if (this.activeCode === ActiveCode.Procedure) {\n            if (this.procedures[this.loadIP()]?.markReturned()) {\n                this.activeCode = this.lastActiveCode;\n                this.lastActiveCode = ActiveCode.Procedure;\n            }\n            return false;\n        }\n        this.resetActive();\n        this.parameters = new Array();\n        return true;\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return !this.hasReturned && this.descriptor.begin.instructions.length <= activeIP;\n            default:\n                return true;\n        }\n    }\n}\nexport class MessageValue {\n    constructor(descriptor) {\n        this.descriptor = descriptor;\n        this.fields = new Array();\n    }\n}\nexport class VariableValue {\n    constructor(descriptor, value) {\n        this.descriptor = descriptor;\n        this.value = value;\n        this.mutable = true;\n    }\n    isMutabled() {\n        return this.mutable;\n    }\n    fixAccessModifier() {\n        this.mutable = this.descriptor.mutable;\n    }\n}\nvar ArrayVariableValueTag;\n(function (ArrayVariableValueTag) {\n    ArrayVariableValueTag[ArrayVariableValueTag[\"Tag\"] = 0] = \"Tag\";\n})(ArrayVariableValueTag || (ArrayVariableValueTag = {}));\nexport class ArrayVariableValue {\n    constructor(descriptor, value) {\n        this.descriptor = descriptor;\n        this.value = value;\n        this._arrayVariableTag = ArrayVariableValueTag.Tag;\n    }\n}\nvar UndefinedValueTag;\n(function (UndefinedValueTag) {\n    UndefinedValueTag[UndefinedValueTag[\"Tag\"] = 0] = \"Tag\";\n})(UndefinedValueTag || (UndefinedValueTag = {}));\nexport class UndefinedValue {\n    constructor(type) {\n        this.type = type;\n        this._integerTag = UndefinedValueTag.Tag;\n    }\n}\nvar IntegerValueTag;\n(function (IntegerValueTag) {\n    IntegerValueTag[IntegerValueTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerValueTag || (IntegerValueTag = {}));\nexport class IntegerValue {\n    constructor(value = 0) {\n        this.value = value;\n        this._integerTag = IntegerValueTag.Tag;\n    }\n}\nvar FloatValueTag;\n(function (FloatValueTag) {\n    FloatValueTag[FloatValueTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatValueTag || (FloatValueTag = {}));\nexport class FloatValue {\n    constructor(value = 0) {\n        this.value = value;\n        this._floatTag = FloatValueTag.Tag;\n    }\n}\nvar TextValueTag;\n(function (TextValueTag) {\n    TextValueTag[TextValueTag[\"Tag\"] = 0] = \"Tag\";\n})(TextValueTag || (TextValueTag = {}));\nexport class TextValue {\n    constructor(value = '') {\n        this.value = value;\n        this._textTag = TextValueTag.Tag;\n    }\n}\nvar CharacterValueTag;\n(function (CharacterValueTag) {\n    CharacterValueTag[CharacterValueTag[\"Tag\"] = 0] = \"Tag\";\n})(CharacterValueTag || (CharacterValueTag = {}));\nexport class CharacterValue {\n    constructor(value = '\\0') {\n        this.value = value;\n        this._characterTag = CharacterValueTag.Tag;\n    }\n}\nvar BooleanValueTag;\n(function (BooleanValueTag) {\n    BooleanValueTag[BooleanValueTag[\"Tag\"] = 0] = \"Tag\";\n})(BooleanValueTag || (BooleanValueTag = {}));\nexport class BooleanValue {\n    constructor(value = false) {\n        this.value = value;\n        this._booleanTag = BooleanValueTag.Tag;\n    }\n}\nvar ArrayIndexValueTag;\n(function (ArrayIndexValueTag) {\n    ArrayIndexValueTag[ArrayIndexValueTag[\"Tag\"] = 0] = \"Tag\";\n})(ArrayIndexValueTag || (ArrayIndexValueTag = {}));\nexport class ArrayIndexValue {\n    constructor(value = 0) {\n        this.value = value;\n        this._arrayIndexTag = ArrayIndexValueTag.Tag;\n    }\n}\n//# sourceMappingURL=values.js.map","import { VariableValue } from './values';\nexport class EvaluationStack {\n    constructor() {\n        this.stack = new Array();\n    }\n    pop() {\n        if (this.stack.length === 0) {\n            throw new Error('Pop called on empty evaluation stack.');\n        }\n        const value = this.stack.pop();\n        if (value === undefined) {\n            throw new Error('Undefined value on stack.');\n        }\n        return value;\n    }\n    popVariable() {\n        const value = this.pop();\n        return value instanceof VariableValue ? value.value : value;\n    }\n    push(data) {\n        this.stack.push(data);\n    }\n}\n//# sourceMappingURL=evalstack.js.map","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export class Sleep {\n    static async forMilliseconds(ms) {\n        await new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    static async forSeconds(s) {\n        await this.forMilliseconds(s * 1000);\n    }\n}\nexport function getOrThrow(value) {\n    if (value === undefined) {\n        throw new Error('Optional value not defined.');\n    }\n    return value;\n}\nexport function getFirstOrThrow(array) {\n    if (array.length < 1) {\n        throw Error('Array contained no element.');\n    }\n    if (array.length > 1) {\n        throw Error('Array contained more than one element.');\n    }\n    return array[0];\n}\nvar NonEmptyArrayTag;\n(function (NonEmptyArrayTag) {\n    NonEmptyArrayTag[NonEmptyArrayTag[\"Tag\"] = 0] = \"Tag\";\n})(NonEmptyArrayTag || (NonEmptyArrayTag = {}));\n/**\n * Simple Array extension requiring at least one element.\n */\nexport class NonEmptyArray extends Array {\n    constructor(firstItem, ...items) {\n        super(firstItem, ...items);\n        this._tag = NonEmptyArrayTag.Tag;\n    }\n    static fromArray(array) {\n        if (array.length < 1) {\n            return undefined;\n        }\n        const firstItem = array.shift();\n        if (firstItem === undefined) {\n            return undefined;\n        }\n        const result = new NonEmptyArray(firstItem);\n        array.forEach((item) => {\n            result.push(item);\n        });\n        return result;\n    }\n}\nexport var CompareValue;\n(function (CompareValue) {\n    CompareValue[CompareValue[\"LT\"] = -1] = \"LT\";\n    CompareValue[CompareValue[\"EQ\"] = 0] = \"EQ\";\n    CompareValue[CompareValue[\"GT\"] = 1] = \"GT\";\n})(CompareValue || (CompareValue = {}));\n//# sourceMappingURL=types.js.map","import { Scheduler } from './scheduler';\nimport { BooleanDescriptor, CharacterDescriptor, FloatDescriptor, IntegerDescriptor, MessageDescriptor, TextDescriptor, } from '@composita/il';\nimport { getOrThrow } from '@composita/ts-utility-types';\nimport { ArrayVariableValue, BooleanValue, CharacterValue, ComponentPointer, ComponentValue, FloatValue, IntegerValue, MessageValue, ProcedurePointer, ProcedureValue, RootPointer, ServicePointer, ServiceValue, TextValue, UndefinedValue, VariableValue, } from './values';\nimport { Interpreter } from './interpreter';\nimport { default as equal } from 'fast-deep-equal';\nexport class Runtime {\n    constructor() {\n        this.scheduler = new Scheduler();\n        this.interpreter = new Interpreter();\n        this.nextAddress = 0;\n        this.stop = false;\n        this.memory = new Map();\n        this.addressToPointer = new Map();\n        this.objectDependency = new Map(); // key: child, value: parent\n        this.out = (...msgs) => msgs.forEach((msg) => process.stdout.write(msg));\n        this.isRunning = () => {\n            /* */\n        };\n        this.exclusiveLock = undefined;\n        this.interfaceToService = new Map();\n        this.serviceToComponent = new Map();\n        this.clientToServer = new Map();\n        /* private for singleton use */\n    }\n    static instance() {\n        return Runtime.runtime;\n    }\n    reset() {\n        Runtime.runtime = new Runtime();\n    }\n    halt() {\n        this.stop = true;\n    }\n    changeOutput(out) {\n        this.out = out;\n    }\n    isRunningUpdate(fn) {\n        this.isRunning = fn;\n    }\n    async run(il) {\n        this.stop = false;\n        this.isRunning(true);\n        il.entryPoints.forEach((descriptor) => {\n            this.createComponent(descriptor, new RootPointer());\n        });\n        let next = this.scheduler.getNext();\n        while (next !== undefined && !this.stop) {\n            await this.interpreter.process(next);\n            next = this.scheduler.getNext();\n        }\n        this.isRunning(false);\n    }\n    acquireExclusive(oldId) {\n        if (this.exclusiveLock === oldId && oldId !== undefined) {\n            return oldId;\n        }\n        if (this.exclusiveLock !== undefined) {\n            return undefined;\n        }\n        this.exclusiveLock = Runtime.holderId;\n        Runtime.holderId++;\n        return this.exclusiveLock;\n    }\n    releaseExclusive(id) {\n        if (this.exclusiveLock !== undefined && id === undefined) {\n            return false;\n        }\n        if (this.exclusiveLock !== id) {\n            return false;\n        }\n        this.exclusiveLock = undefined;\n        return true;\n    }\n    print(...msgs) {\n        this.out(...msgs);\n    }\n    time() {\n        return new Date().getMilliseconds();\n    }\n    load(pointer) {\n        const value = this.tryLoad(pointer);\n        if (value === undefined) {\n            throw new Error('Failed to load value.');\n        }\n        return value;\n    }\n    getPointerFromAddress(address) {\n        const pointer = this.addressToPointer.get(address);\n        if (pointer === undefined) {\n            throw new Error('Unknown address.');\n        }\n        return pointer;\n    }\n    tryLoad(pointer) {\n        return this.memory.get(pointer);\n    }\n    getDefaultVariableValue(type) {\n        if (type instanceof IntegerDescriptor) {\n            return new IntegerValue();\n        }\n        if (type instanceof FloatDescriptor) {\n            return new FloatValue();\n        }\n        if (type instanceof TextDescriptor) {\n            return new TextValue();\n        }\n        if (type instanceof CharacterDescriptor) {\n            return new CharacterValue();\n        }\n        if (type instanceof BooleanDescriptor) {\n            return new BooleanValue();\n        }\n        return new UndefinedValue(type);\n    }\n    createComponent(type, container) {\n        const pointer = new ComponentPointer(this.nextAddress++, type);\n        const component = new ComponentValue(type, container);\n        this.objectDependency.set(pointer, container);\n        this.memory.set(pointer, component);\n        this.addressToPointer.set(pointer.address, pointer);\n        this.scheduler.enqueue(pointer);\n        this.prepareDeclarations(type.declarations, component, pointer);\n        type.offers.forEach((offer) => {\n            if (!this.interfaceToService.has(offer)) {\n                this.interfaceToService.set(offer, new Map());\n            }\n        });\n        type.requires.forEach((require) => {\n            if (!this.interfaceToService.has(require)) {\n                this.interfaceToService.set(require, new Map());\n            }\n        });\n        return pointer;\n    }\n    // loads or create a service if it does not yet exist.\n    getService(type, container) {\n        const mapping = this.interfaceToService.get(type);\n        if (mapping === undefined) {\n            throw new Error('Interface not defined for service.');\n        }\n        const component = this.memory.get(container);\n        if (!(component instanceof ComponentValue)) {\n            throw new Error('Component not in memory.');\n        }\n        if (mapping.has(container)) {\n            return mapping.get(container);\n        }\n        const servicePointer = new ServicePointer(this.nextAddress++, type);\n        this.serviceToComponent.set(servicePointer, container);\n        this.addressToPointer.set(servicePointer.address, servicePointer);\n        mapping.set(container, servicePointer);\n        return servicePointer;\n    }\n    send(to, message) {\n        const service = this.memory.get(to);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        service.messageQueue.push(message);\n    }\n    receive(target, type) {\n        const service = this.memory.get(target);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        const queue = service.messageQueue;\n        if (queue === undefined || queue.length === 0) {\n            return undefined;\n        }\n        const messageDesc = queue[0].descriptor;\n        if (equal(messageDesc, type) || equal(type, Runtime.anyMessage) || equal(messageDesc, Runtime.finishMessage)) {\n            return queue.shift();\n        }\n        return undefined;\n    }\n    receiveTest(target) {\n        const service = this.memory.get(target);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        const queue = service.messageQueue;\n        if (queue === undefined || queue.length === 0) {\n            return undefined;\n        }\n        return queue[0];\n    }\n    connect(toPtr, service) {\n        const toValue = this.memory.get(toPtr);\n        const fromPtr = this.serviceToComponent.get(service);\n        if (!(fromPtr instanceof ComponentPointer)) {\n            throw new Error('From does not point to valid component.');\n        }\n        const fromValue = this.memory.get(fromPtr);\n        if (!(fromValue instanceof ComponentValue)) {\n            throw new Error('connect: \"From\" must be a component value.');\n        }\n        if (!(toValue instanceof ComponentValue)) {\n            throw new Error('connect: \"To\" must be a component value.');\n        }\n        const toImpl = toValue.descriptor.implementations.find((desc) => equal(desc.reference, service.type));\n        const fromImpl = fromValue.descriptor.implementations.find((desc) => equal(desc.reference, service.type));\n        const implementation = toImpl === undefined ? fromImpl : toImpl;\n        if (this.memory.has(service)) {\n            // just ignore it for now and return\n            throw new Error('Service already connected.');\n        }\n        if (implementation === undefined) {\n            throw new Error('Implementation undefined.');\n        }\n        const mapping = this.interfaceToService.get(service.type);\n        if (mapping === undefined) {\n            throw new Error('Interface not defined for service.');\n        }\n        let parent = undefined;\n        if (toImpl !== undefined) {\n            toValue.offerConnections.get(service.type)?.push(service);\n            fromValue.requiredConnections.get(service.type)?.push(service);\n            parent = toPtr;\n        }\n        if (fromImpl !== undefined) {\n            fromValue.offerConnections.get(service.type)?.push(service);\n            toValue.requiredConnections.get(service.type)?.push(service);\n            parent = fromPtr;\n        }\n        if (parent === undefined) {\n            throw new Error('Unknown service parent!');\n        }\n        const serviceValue = new ServiceValue(implementation, parent);\n        this.prepareDeclarations(implementation.declarations, serviceValue, service);\n        this.memory.set(service, serviceValue);\n        mapping.set(toPtr, service);\n        mapping.set(fromPtr, service);\n        this.scheduler.enqueue(service);\n    }\n    createProcedure(type, pointer) {\n        const value = getOrThrow(this.memory.get(pointer));\n        const procedure = new ProcedureValue(type, pointer, value.evalStack);\n        this.prepareDeclarations(type.declarations, procedure, pointer);\n        return procedure;\n    }\n    prepareDeclarations(type, value, pointer) {\n        type.variables.forEach((descriptor) => {\n            // TODO this is just a hack for now to keep TextDescriptor behavior and needs to be properly handled.\n            if (descriptor.indexTypes.length > 0 && !(descriptor.type instanceof TextDescriptor)) {\n                value.variables.push(new ArrayVariableValue(descriptor, new Map()));\n            }\n            else {\n                value.variables.push(new VariableValue(descriptor, this.getDefaultVariableValue(descriptor.type)));\n            }\n        });\n        type.procedures.forEach((descriptor) => {\n            const procedurePointer = new ProcedurePointer(this.nextAddress++, descriptor);\n            const procedure = this.createProcedure(descriptor, pointer);\n            this.memory.set(procedurePointer, procedure);\n            this.addressToPointer.set(procedurePointer.address, pointer);\n            this.objectDependency.set(procedurePointer, pointer);\n            value.procedures.push(procedure);\n        });\n    }\n    disconnect(from, service) {\n        const target = this.clientToServer.get(from)?.filter((srv) => !equal(srv, service));\n        if (target === undefined) {\n            return;\n        }\n        this.clientToServer.set(from, target);\n    }\n}\n// hack for now\nRuntime.finishMessage = new MessageValue(new MessageDescriptor('FINISH'));\nRuntime.anyMessage = new MessageValue(new MessageDescriptor('ANY'));\nRuntime.runtime = new Runtime();\nRuntime.holderId = 0;\n//# sourceMappingURL=runtime.js.map","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","module.exports = require(\"regenerator-runtime\");\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { Runtime } from './runtime';\nexport class Scheduler {\n    constructor() {\n        this.active = undefined;\n        this.ready = new Array();\n    }\n    enqueue(work) {\n        this.ready.push(work);\n    }\n    getNext() {\n        // simple scheduling, just loop through all the tasks.\n        this.scheduleNext();\n        return this.active;\n    }\n    getActive() {\n        return this.active;\n    }\n    scheduleNext() {\n        if (this.active !== undefined && !Runtime.instance().load(this.active).isDone()) {\n            this.ready.push(this.active);\n        }\n        this.active = this.ready.shift();\n    }\n}\n//# sourceMappingURL=scheduler.js.map","import { IntegerDescriptor, SystemCallOperation } from '@composita/il';\nimport { Runtime } from './runtime';\nimport { TextValue, CharacterValue, FloatValue, BooleanValue, VariableValue, IntegerValue, } from './values';\nexport class SyscallInterpreter {\n    constructor() {\n        this.activeValue = undefined;\n    }\n    static toValue(value) {\n        return value instanceof VariableValue ? value.value : value;\n    }\n    handleNoArg(op) {\n        switch (op) {\n            case SystemCallOperation.WriteLine:\n                Runtime.instance().print('\\n');\n                return;\n        }\n        throw new Error(`Failed system call '${SystemCallOperation[op]}' and zero argumentss. Operation not supported.`);\n    }\n    handleSingleArg(op, value) {\n        switch (op) {\n            case SystemCallOperation.Write:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof TextValue ||\n                    value instanceof CharacterValue ||\n                    value instanceof FloatValue ||\n                    value instanceof IntegerValue) {\n                    Runtime.instance().print(value.value.toString());\n                    return;\n                }\n                break;\n            case SystemCallOperation.WriteHex:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    Runtime.instance().print(value.value.toString(16));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Assert:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof BooleanValue) {\n                    if (!value.value) {\n                        throw new Error('Assertion failed.');\n                    }\n                    return;\n                }\n                break;\n            case SystemCallOperation.Halt:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    throw new Error(`Halt called. Id: ${value.value}`);\n                }\n                break;\n            case SystemCallOperation.Inc:\n                if (value instanceof VariableValue) {\n                    const currentValue = value.value;\n                    if (currentValue instanceof IntegerValue) {\n                        value.value = new IntegerValue(currentValue.value + 1);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperation.Dec:\n                if (value instanceof VariableValue) {\n                    const currentValue = value.value;\n                    if (currentValue instanceof IntegerValue) {\n                        value.value = new IntegerValue(currentValue.value - 1);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperation.Passivate:\n                // TODO\n                console.warn('PASSIVATE syscall not supported');\n                return;\n            case SystemCallOperation.Count:\n                // TODO: not supported yet, defaulting to 1\n                console.warn('COUNT syscall not supported');\n                return;\n            case SystemCallOperation.Length:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof TextValue) {\n                    this.activeValue?.evalStack.push(new IntegerValue(value.value.length));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Sqrt:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.sqrt(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Sin:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.sin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Cos:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.cos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Tan:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.tan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ArcSin:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.asin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ArcCos:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.acos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ArcTan:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(Math.atan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.Min:\n                // TODO\n                console.warn('MIN call currently only supported for float');\n                this.activeValue?.evalStack.push(new FloatValue(Number.MIN_VALUE));\n                return;\n            case SystemCallOperation.Max:\n                // TODO\n                console.warn('MAX call currently only supported for float');\n                this.activeValue?.evalStack.push(new FloatValue(Number.MAX_VALUE));\n                return;\n            case SystemCallOperation.ToCharacter:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    this.activeValue?.evalStack.push(new CharacterValue(String.fromCharCode(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ToText:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof CharacterValue) {\n                    this.activeValue?.evalStack.push(new TextValue(value.value));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ToInteger:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.activeValue?.evalStack.push(new IntegerValue(Math.trunc(value.value)));\n                    return;\n                }\n                if (value instanceof CharacterValue) {\n                    this.activeValue?.evalStack.push(new IntegerValue(Number.parseInt(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperation.ToReal:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    this.activeValue?.evalStack.push(new FloatValue(value.value));\n                    return;\n                }\n                break;\n        }\n        throw new Error(`Failed system call '${SystemCallOperation[op]}' and one argument. Operation not supported.`);\n    }\n    handleDoubleArg(op, value, value2) {\n        switch (op) {\n            case SystemCallOperation.Assert:\n                value = SyscallInterpreter.toValue(value);\n                value2 = SyscallInterpreter.toValue(value2);\n                if (value2 instanceof BooleanValue && value instanceof IntegerValue) {\n                    if (!value2.value) {\n                        // ignore param n\n                        throw new Error(`Assertion failed. Code ${value}.`);\n                        //Runtime.instance().haltProcessWithCode(this.processId, value.value);\n                        //return;\n                    }\n                }\n                break;\n            case SystemCallOperation.Inc:\n                value = SyscallInterpreter.toValue(value);\n                if (value2 instanceof VariableValue) {\n                    const currentValue = value2.value;\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.value = new IntegerValue(currentValue.value + value.value);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperation.Dec:\n                value = SyscallInterpreter.toValue(value);\n                if (value2 instanceof VariableValue) {\n                    const currentValue = value2.value;\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.value = new IntegerValue(currentValue.value - value.value);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperation.Random:\n                value = SyscallInterpreter.toValue(value);\n                value2 = SyscallInterpreter.toValue(value2);\n                if (value2 instanceof IntegerValue && value instanceof IntegerValue) {\n                    this.activeValue?.evalStack.push(new IntegerValue(Math.trunc(Math.random() * value.value) + value2.value));\n                }\n                break;\n        }\n        throw new Error(`Failed system call '${SystemCallOperation[op]}' and two arguments. Operation not supported.`);\n    }\n    handle(value, call) {\n        if (call.arguments.length !== 1) {\n            throw new Error('SystemCall requires the number of arguments to be passed. Something must have failed during code gen.');\n        }\n        if (!(call.arguments[0] instanceof IntegerDescriptor)) {\n            throw new Error('SystemCall expects to be passed an IntegerDescriptor argument. Something must have failed during code gen.');\n        }\n        this.activeValue = value;\n        const op = call.systemCall;\n        const args = new Array();\n        for (let i = 0; i < call.arguments[0].initialValue; ++i) {\n            args.push(this.activeValue.evalStack.pop());\n        }\n        switch (args.length) {\n            case 0:\n                this.handleNoArg(op);\n                break;\n            case 1:\n                this.handleSingleArg(op, args[0]);\n                break;\n            case 2:\n                this.handleDoubleArg(op, args[0], args[1]);\n                break;\n            default:\n                throw new Error(`Failed system call '${op}' with ${args.length} arguments. Operation not supported.`);\n        }\n        this.activeValue = undefined;\n    }\n}\n//# sourceMappingURL=syscallhandler.js.map","import { BooleanDescriptor, CharacterDescriptor, ComponentDescriptor, FloatDescriptor, IntegerDescriptor, InterfaceDescriptor, JumpDescriptor, MessageDescriptor, OperationCode, ProcedureDescriptor, SystemCallDescriptor, TextDescriptor, VariableDescriptor, } from '@composita/il';\nimport { getOrThrow } from '@composita/ts-utility-types';\nimport { Runtime } from './runtime';\nimport { SyscallInterpreter } from './syscallhandler';\nimport { ArrayIndexValue, ArrayVariableValue, BooleanValue, CharacterValue, ComponentPointer, ComponentValue, FloatValue, IntegerValue, MessageValue, ServicePointer, TextValue, UndefinedValue, VariableValue, } from './values';\nimport { default as equal } from 'fast-deep-equal';\nexport class Interpreter {\n    constructor() {\n        this.systemCallHandler = new SyscallInterpreter();\n        this.activeValue = undefined;\n    }\n    loadValue(pointer) {\n        this.activeValue = Runtime.instance().load(pointer);\n    }\n    unloadValue() {\n        this.activeValue = undefined;\n    }\n    loadParentValue(current) {\n        return Runtime.instance().tryLoad(current.parent);\n    }\n    static isBuiltInTypeDescriptor(descriptor) {\n        return (descriptor instanceof IntegerDescriptor ||\n            descriptor instanceof FloatDescriptor ||\n            descriptor instanceof TextDescriptor ||\n            descriptor instanceof CharacterDescriptor ||\n            descriptor instanceof BooleanDescriptor);\n    }\n    static isBuiltInValue(value) {\n        return (value instanceof IntegerValue ||\n            value instanceof FloatValue ||\n            value instanceof TextValue ||\n            value instanceof CharacterValue ||\n            value instanceof BooleanValue);\n    }\n    static descriptorMatchBuiltIn(descriptor, value) {\n        return ((descriptor instanceof IntegerDescriptor && value instanceof IntegerValue) ||\n            (descriptor instanceof FloatDescriptor && value instanceof FloatValue) ||\n            (descriptor instanceof CharacterDescriptor && value instanceof CharacterValue) ||\n            (descriptor instanceof TextDescriptor && value instanceof TextValue) ||\n            (descriptor instanceof BooleanDescriptor && value instanceof BooleanValue));\n    }\n    add() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof TextValue && left instanceof TextValue) {\n            getOrThrow(this.activeValue).evalStack.push(new TextValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(Math.trunc(left.value + right.value)));\n            return;\n        }\n        throw new Error(`Add operation failed.`);\n    }\n    sub() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(left.value - right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(Math.trunc(left.value - right.value)));\n            return;\n        }\n        throw new Error(`Sub operation failed.`);\n    }\n    mul() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(left.value * right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(Math.trunc(left.value * right.value)));\n            return;\n        }\n        throw new Error(`Mul operation failed.`);\n    }\n    div() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(left.value / right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(Math.trunc(left.value / right.value)));\n            return;\n        }\n        throw new Error(`Div operation failed.`);\n    }\n    negate() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(-right.value));\n            return;\n        }\n        if (right instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(-right.value));\n            return;\n        }\n        throw new Error(`Negate operation failed.`);\n    }\n    mod() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(left.value % right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(Math.trunc(left.value % right.value)));\n            return;\n        }\n        throw new Error(`Mod operation failed.`);\n    }\n    handleComparable(left, right, fn) {\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported less/greater comparison.`);\n    }\n    handleEquatable(left, right, fn) {\n        if (left instanceof BooleanValue && right instanceof BooleanValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported equality comparison.`);\n    }\n    handleCompareOp(op) {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right === undefined) {\n            throw new Error(`Unknown right compare argument.`);\n        }\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (left === undefined) {\n            throw new Error(`Unknown left compare argument.`);\n        }\n        switch (op) {\n            case OperationCode.Equal:\n                this.handleEquatable(left, right, (l, r) => l === r);\n                return;\n            case OperationCode.NotEqual:\n                this.handleEquatable(left, right, (l, r) => l !== r);\n                return;\n            case OperationCode.Less:\n                this.handleComparable(left, right, (l, r) => l < r);\n                return;\n            case OperationCode.LessEqual:\n                this.handleComparable(left, right, (l, r) => l <= r);\n                return;\n            case OperationCode.Greater:\n                this.handleComparable(left, right, (l, r) => l > r);\n                return;\n            case OperationCode.GreaterEqual:\n                this.handleComparable(left, right, (l, r) => l >= r);\n                return;\n        }\n        throw new Error(`Unsupprted compare op.`);\n    }\n    not() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof BooleanValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(!right.value));\n            return;\n        }\n        throw new Error(`Not operation failed.`);\n    }\n    or() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(left.value || right.value));\n            return;\n        }\n        throw new Error(`Or operation failed.`);\n    }\n    and() {\n        const right = getOrThrow(this.activeValue).evalStack.popVariable();\n        const left = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(left.value && right.value));\n            return;\n        }\n        throw new Error(`And operation failed.`);\n    }\n    handleNewVariable(pointer, target, type) {\n        if (!target.isMutabled()) {\n            throw new Error('Cannot NEW instanciate a constant value.');\n        }\n        if (type instanceof ComponentDescriptor) {\n            if (target.value instanceof ComponentValue) {\n                target.value.finalize();\n            }\n            const component = Runtime.instance().createComponent(type, pointer);\n            target.value = component;\n            return;\n        }\n        if (type instanceof TextDescriptor) {\n            target.value = new TextValue('');\n            return;\n        }\n        console.warn('Composite Runtime: NEW call ignored for built-in variable type.');\n    }\n    handleNew(pointer, operands) {\n        if (operands.length !== 2) {\n            throw new Error('Unsupported NEW call, check your code generator.');\n        }\n        const type = operands[0];\n        const nArgs = operands[1];\n        if (!(type instanceof ComponentDescriptor || Interpreter.isBuiltInTypeDescriptor(type))) {\n            throw new Error('NEW Component or built-in type expected.');\n        }\n        if (!(nArgs instanceof IntegerDescriptor)) {\n            throw new Error('Expected number of args as second argument.');\n        }\n        const target = getOrThrow(this.activeValue).evalStack.pop();\n        for (let i = 0; i < nArgs.initialValue; ++i) {\n            // ignore for now:\n            getOrThrow(this.activeValue).evalStack.pop();\n        }\n        if (target instanceof VariableValue) {\n            this.handleNewVariable(pointer, target, type);\n            return;\n        }\n        throw new Error('Unsupported NEW. NEW target must be a variable.');\n    }\n    loadVariableIndex(descriptor) {\n        const index = new Array();\n        descriptor.indexTypes.forEach(() => {\n            const stackValue = getOrThrow(this.activeValue).evalStack.popVariable();\n            if (stackValue instanceof UndefinedValue) {\n                throw new Error('Load index value undefined!');\n            }\n            if (Interpreter.isBuiltInValue(stackValue)) {\n                index.push(stackValue.value);\n                return;\n            }\n            if (stackValue instanceof ComponentPointer) {\n                index.push(stackValue.address);\n                return;\n            }\n            throw new Error('Illegal Variable Index.');\n        });\n        return index.join(Interpreter.indexJoiner);\n    }\n    handleDelete() {\n        const target = getOrThrow(this.activeValue).evalStack.pop();\n        if (!(target instanceof VariableValue || target instanceof ArrayVariableValue)) {\n            throw new Error('Only variables can be deleted.');\n        }\n        if (target instanceof VariableValue) {\n            if (target.value instanceof ComponentValue) {\n                target.value.finalize();\n                return;\n            }\n            target.value = new UndefinedValue(target.descriptor.type);\n            return;\n        }\n        const index = this.loadVariableIndex(target.descriptor);\n        const toDelete = target.value.get(index);\n        if (toDelete instanceof ComponentValue) {\n            toDelete.finalize();\n            return;\n        }\n        target.value.delete(index);\n    }\n    loadMessage(descriptor) {\n        const message = new MessageValue(descriptor);\n        descriptor.data.forEach((type) => {\n            const value = getOrThrow(this.activeValue).evalStack.popVariable();\n            if (!Interpreter.isBuiltInValue(value)) {\n                throw new Error('Message can only contain built in values: TEXT, CHARACTER INTEGER, REAL, BOOLEAN');\n            }\n            if (!Interpreter.descriptorMatchBuiltIn(type, value)) {\n                throw new Error('Message param does not match stack value');\n            }\n            message.fields.push(value);\n        });\n        return message;\n    }\n    handleSend(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for sending.');\n        }\n        const service = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Expected target service to send to.');\n        }\n        const message = this.loadMessage(operands[0]);\n        Runtime.instance().send(service, message);\n    }\n    handleReceive(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a service.');\n        }\n        const wait = () => {\n            const message = Runtime.instance().receive(target, descriptor);\n            if (message === Runtime.finishMessage) {\n                return false;\n            }\n            if (message !== undefined) {\n                message.fields.forEach((element) => {\n                    getOrThrow(this.activeValue).evalStack.push(element);\n                    this.storeVariable();\n                });\n                return false;\n            }\n            return true;\n        };\n        if (wait()) {\n            getOrThrow(this.activeValue).wait(wait.bind(this));\n        }\n    }\n    handleConnect() {\n        const to = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(to instanceof ComponentPointer)) {\n            // TODO: check if service pointer is possible here as well. Keeping it to components for now.\n            throw new Error('Connect target needs to be either a component.');\n        }\n        const service = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Service required for from.');\n        }\n        //const from = getOrThrow(this.activeValue).evalStack.popVariable();\n        //if (!(from instanceof ComponentPointer)) {\n        //    throw new Error('Connect requires a component.');\n        //}\n        Runtime.instance().connect(to, service);\n    }\n    handleDisconnect() {\n        const target = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(target instanceof ComponentPointer)) {\n            throw new Error('Need to know from component.');\n        }\n        const service = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Service required for disconnecting.');\n        }\n        Runtime.instance().disconnect(target, service);\n        // TODO\n    }\n    handleReceiveCheck(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a component or service.');\n        }\n        const wait = () => {\n            const message = Runtime.instance().receiveTest(target);\n            if (message === undefined) {\n                return true;\n            }\n            if (equal(message.descriptor, descriptor)) {\n                getOrThrow(this.activeValue).evalStack.push(new BooleanValue(true));\n                return false;\n            }\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(false));\n            return false;\n        };\n        if (wait()) {\n            getOrThrow(this.activeValue).wait(wait.bind(this));\n        }\n    }\n    handleInputCheck(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a component or service.');\n        }\n        const message = Runtime.instance().receiveTest(target);\n        if (message !== undefined && equal(message.descriptor, descriptor)) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(true));\n            return;\n        }\n        getOrThrow(this.activeValue).evalStack.push(new BooleanValue(false));\n    }\n    handleSystemCall(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof SystemCallDescriptor)) {\n            throw new Error('Invalid system call.');\n        }\n        this.systemCallHandler.handle(getOrThrow(this.activeValue), operands[0]);\n    }\n    handleProcedurecall(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof ProcedureDescriptor)) {\n            throw new Error('Invalid procedure call.');\n        }\n        // TODO should we support out variables?\n        const args = new Array();\n        operands[0].parameters.forEach(() => {\n            const value = getOrThrow(this.activeValue).evalStack.popVariable();\n            if (value instanceof ComponentPointer || Interpreter.isBuiltInValue(value)) {\n                args.push(value);\n                return;\n            }\n            throw new Error('Failed to pass value to procedure.');\n        });\n        getOrThrow(this.activeValue).call(operands[0], args);\n    }\n    handleReturn() {\n        getOrThrow(this.activeValue).procedureReturned();\n    }\n    loadBoolean(operands) {\n        if (operands.length > 0 && operands[0] instanceof BooleanDescriptor) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Boolean load operation failed.`);\n    }\n    loadText(operands) {\n        if (operands.length >= 1 && operands[0] instanceof TextDescriptor) {\n            getOrThrow(this.activeValue).evalStack.push(new TextValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Text load operation failed.`);\n    }\n    loadCharacter(operands) {\n        if (operands.length >= 1 && operands[0] instanceof CharacterDescriptor) {\n            getOrThrow(this.activeValue).evalStack.push(new CharacterValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Character load operation failed.`);\n    }\n    loadFloat(operands) {\n        if (operands.length > 0 && operands[0] instanceof FloatDescriptor) {\n            getOrThrow(this.activeValue).evalStack.push(new FloatValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Float load operation failed.`);\n    }\n    loadInteger(operands) {\n        if (operands.length > 0 && operands[0] instanceof IntegerDescriptor) {\n            getOrThrow(this.activeValue).evalStack.push(new IntegerValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Integer load operation failed.`);\n    }\n    storeVariable() {\n        const value = getOrThrow(this.activeValue).evalStack.popVariable();\n        const variable = getOrThrow(this.activeValue).evalStack.pop();\n        if (variable instanceof VariableValue) {\n            if (!variable.isMutabled()) {\n                throw new Error('Cannot assign value to a constant.');\n            }\n            const varValue = variable.value;\n            if (varValue instanceof UndefinedValue &&\n                (Interpreter.isBuiltInValue(value) || value instanceof ComponentPointer)) {\n                variable.value = value;\n                return;\n            }\n            if ((value instanceof IntegerValue && varValue instanceof IntegerValue) ||\n                (value instanceof FloatValue && varValue instanceof FloatValue) ||\n                (value instanceof BooleanValue && varValue instanceof BooleanValue) ||\n                (value instanceof CharacterValue && varValue instanceof CharacterValue) ||\n                (value instanceof TextValue && varValue instanceof TextValue) ||\n                (value instanceof ComponentPointer && varValue instanceof ComponentPointer)) {\n                variable.value = value;\n                return;\n            }\n        }\n        if (variable instanceof ArrayVariableValue) {\n            variable.value.set(this.loadVariableIndex(variable.descriptor), value);\n            return;\n        }\n        throw new Error(`Unsupported Variable Store.`);\n    }\n    findVariable(operands) {\n        if (operands.length !== 1) {\n            throw new Error('Expected single argument for variable load only.');\n        }\n        if (operands[0] instanceof VariableDescriptor) {\n            let current = getOrThrow(this.activeValue);\n            let parent = this.loadParentValue(current);\n            let variable = current.variables.find((variable) => variable.descriptor === operands[0]);\n            while (variable === undefined && parent !== undefined) {\n                current = parent;\n                parent = this.loadParentValue(current);\n                variable = current.variables.find((variable) => equal(variable.descriptor, operands[0]));\n            }\n            if (variable !== undefined) {\n                return variable;\n            }\n        }\n        throw new Error('Failed to find variable.');\n    }\n    loadVariable(operands) {\n        const variable = this.findVariable(operands);\n        if (variable instanceof VariableValue) {\n            getOrThrow(this.activeValue).evalStack.push(variable);\n            return;\n        }\n        throw new Error(`Unsupported Variable Load.`);\n    }\n    loadArrayVariable(operands) {\n        const variable = this.findVariable(operands);\n        if (variable instanceof ArrayVariableValue ||\n            (variable instanceof VariableValue && variable.descriptor.type instanceof TextDescriptor)) {\n            getOrThrow(this.activeValue).evalStack.push(variable);\n            return;\n        }\n        console.log(variable);\n        throw new Error(`Unsupported Array Variable Load.`);\n    }\n    loadArrayVariableElement(operands) {\n        const variable = this.findVariable(operands);\n        if (variable instanceof ArrayVariableValue) {\n            const index = this.loadVariableIndex(variable.descriptor);\n            if (!variable.value.has(index)) {\n                variable.value.set(index, new VariableValue(variable.descriptor, new UndefinedValue(variable.descriptor.type)));\n            }\n            getOrThrow(this.activeValue).evalStack.push(getOrThrow(variable.value.get(index)));\n            return;\n        }\n        throw new Error(`Unsupported Array Variable Element Load.`);\n    }\n    loadService(operands) {\n        if (operands.length === 1 && operands[0] instanceof InterfaceDescriptor) {\n            const pointer = getOrThrow(this.activeValue).evalStack.popVariable();\n            if (pointer instanceof ComponentPointer) {\n                const service = Runtime.instance().getService(operands[0], pointer);\n                getOrThrow(this.activeValue).evalStack.push(service);\n                return;\n            }\n        }\n        throw new Error(`Unsupported Service Load.`);\n    }\n    loadThis(pointer) {\n        if (pointer instanceof ServicePointer || pointer instanceof ComponentPointer) {\n            getOrThrow(this.activeValue).evalStack.push(pointer);\n            return;\n        }\n        throw new Error('Load this only for services supported.');\n    }\n    handleAcquireExclusive() {\n        const wait = () => {\n            const newLock = Runtime.instance().acquireExclusive(getOrThrow(this.activeValue).exclusiveLock);\n            if (newLock === undefined) {\n                return true;\n            }\n            getOrThrow(this.activeValue).exclusiveLock = newLock;\n            return false;\n        };\n        if (wait()) {\n            getOrThrow(this.activeValue).wait(wait.bind(this));\n        }\n    }\n    handleReleaseExclusive() {\n        const wait = () => {\n            const success = Runtime.instance().releaseExclusive(getOrThrow(this.activeValue).exclusiveLock);\n            if (success) {\n                getOrThrow(this.activeValue).exclusiveLock = undefined;\n            }\n            return !success;\n        };\n        if (wait()) {\n            getOrThrow(this.activeValue).wait(wait.bind(this));\n        }\n    }\n    branch(operands) {\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions must have one operand.`);\n        }\n        const operand = operands[0];\n        if (operand instanceof JumpDescriptor) {\n            getOrThrow(this.activeValue).jump(operand);\n            return;\n        }\n        throw new Error(`Failed jump.`);\n    }\n    branchConditionally(branch, operands) {\n        const condition = getOrThrow(this.activeValue).evalStack.popVariable();\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions only have one operand.`);\n        }\n        if (condition instanceof BooleanValue && operands[0] instanceof JumpDescriptor) {\n            if (condition.value === branch) {\n                this.branch(operands);\n                return;\n            }\n            return;\n        }\n        console.log(condition);\n        console.log(this.activeValue?.evalStack);\n        throw new Error(`Conditional jump failed.`);\n    }\n    handleIsType(operands) {\n        const variable = getOrThrow(this.activeValue).evalStack.pop();\n        if (operands.length !== 1) {\n            throw new Error(`IsType check must have one operand.`);\n        }\n        const operand = operands[0];\n        if (variable instanceof VariableValue) {\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(equal(variable.descriptor.type, operand)));\n            return;\n        }\n        throw new Error('IsType check failed.');\n    }\n    handleExists() {\n        const variable = getOrThrow(this.activeValue).evalStack.popVariable();\n        getOrThrow(this.activeValue).evalStack.push(new BooleanValue(!(variable instanceof UndefinedValue)));\n    }\n    handleForEachBegin() {\n        getOrThrow(this.activeValue).evalStack.push(new ArrayIndexValue());\n    }\n    handleForEachEnd() {\n        const endIndex = getOrThrow(this.activeValue).evalStack.pop();\n        if (endIndex instanceof ArrayIndexValue) {\n            return;\n        }\n        throw new Error('ForEach Stack Issue.');\n    }\n    handleAssignArrayIndex() {\n        const variable = getOrThrow(this.activeValue).evalStack.pop();\n        if (!(variable instanceof ArrayVariableValue)) {\n            console.log(variable);\n            throw new Error('Expected array variable in foreach.');\n        }\n        const indexVars = new Array();\n        variable.descriptor.indexTypes.forEach(() => {\n            const stackValue = getOrThrow(this.activeValue).evalStack.pop();\n            if (!(stackValue instanceof VariableValue)) {\n                throw new Error('Variable required to assign to.');\n            }\n            indexVars.push(stackValue);\n        });\n        const indexToLoad = getOrThrow(this.activeValue).evalStack.pop();\n        if (!(indexToLoad instanceof ArrayIndexValue)) {\n            throw new Error('Array index value expected.');\n        }\n        const keys = Array.from(variable.value.keys());\n        if (variable.value.size === 0 || indexToLoad.value >= keys.length) {\n            getOrThrow(this.activeValue).evalStack.push(indexToLoad);\n            getOrThrow(this.activeValue).evalStack.push(new BooleanValue(false));\n            return;\n        }\n        const indexes = keys[indexToLoad.value].split(Interpreter.indexJoiner);\n        if (indexes.length !== indexVars.length) {\n            throw new Error('Index assignment number of indexes mismatch');\n        }\n        indexVars.forEach((value, i) => {\n            const stringIndex = indexes[i];\n            if (value.descriptor.type instanceof ComponentDescriptor) {\n                const address = Number.parseInt(stringIndex);\n                const pointer = Runtime.instance().getPointerFromAddress(address);\n                if (!(pointer instanceof ComponentPointer)) {\n                    throw new Error('Index type mismatch.');\n                }\n                value.value = pointer;\n                return;\n            }\n            if (value.descriptor.type instanceof IntegerDescriptor) {\n                const indexValue = Number.parseInt(stringIndex);\n                value.value = new IntegerValue(indexValue);\n                return;\n            }\n            if (value.descriptor.type instanceof FloatDescriptor) {\n                const indexValue = Number.parseFloat(stringIndex);\n                value.value = new FloatValue(indexValue);\n                return;\n            }\n            if (value.descriptor.type instanceof TextDescriptor) {\n                value.value = new TextValue(stringIndex);\n                return;\n            }\n            if (value.descriptor.type instanceof CharacterDescriptor) {\n                value.value = new CharacterValue(stringIndex);\n                return;\n            }\n            if (value.descriptor.type instanceof BooleanDescriptor) {\n                if (stringIndex === 'true') {\n                    value.value = new BooleanValue(true);\n                    return;\n                }\n                if (stringIndex === 'false') {\n                    value.value = new BooleanValue(false);\n                    return;\n                }\n            }\n            throw new Error('Failed index type conversion.');\n        });\n        getOrThrow(this.activeValue).evalStack.push(new ArrayIndexValue(indexToLoad.value + 1));\n        getOrThrow(this.activeValue).evalStack.push(new BooleanValue(true));\n    }\n    async process(pointer) {\n        this.loadValue(pointer);\n        if (getOrThrow(this.activeValue).isDone()) {\n            this.unloadValue();\n            return;\n        }\n        const nextInstruction = getOrThrow(this.activeValue).fetch();\n        if (nextInstruction === undefined) {\n            this.unloadValue();\n            return;\n        }\n        switch (nextInstruction.code) {\n            case OperationCode.Add:\n                this.add();\n                break;\n            case OperationCode.Subtract:\n                this.sub();\n                break;\n            case OperationCode.Multiply:\n                this.mul();\n                break;\n            case OperationCode.Divide:\n                this.div();\n                break;\n            case OperationCode.Negate:\n                this.negate();\n                break;\n            case OperationCode.Modulo:\n                this.mod();\n                break;\n            case OperationCode.Equal:\n            case OperationCode.Less:\n            case OperationCode.LessEqual:\n            case OperationCode.Greater:\n            case OperationCode.GreaterEqual:\n            case OperationCode.NotEqual:\n                this.handleCompareOp(nextInstruction.code);\n                break;\n            case OperationCode.Not:\n                this.not();\n                break;\n            case OperationCode.LogicOr:\n                this.or();\n                break;\n            case OperationCode.LogicAnd:\n                this.and();\n                break;\n            case OperationCode.New:\n                this.handleNew(pointer, nextInstruction.arguments);\n                break;\n            case OperationCode.Delete:\n                this.handleDelete();\n                break;\n            case OperationCode.Send:\n                this.handleSend(nextInstruction.arguments);\n                break;\n            case OperationCode.Receive:\n                this.handleReceive(nextInstruction.arguments);\n                break;\n            case OperationCode.Connect:\n                this.handleConnect();\n                break;\n            case OperationCode.Disconnect:\n                this.handleDisconnect();\n                break;\n            case OperationCode.ReceiveTest:\n                this.handleReceiveCheck(nextInstruction.arguments);\n                break;\n            case OperationCode.InputTest:\n                this.handleInputCheck(nextInstruction.arguments);\n                break;\n            case OperationCode.SystemCall:\n                this.handleSystemCall(nextInstruction.arguments);\n                break;\n            case OperationCode.ProcedureCall:\n                this.handleProcedurecall(nextInstruction.arguments);\n                break;\n            case OperationCode.Return:\n                this.handleReturn();\n                break;\n            case OperationCode.LoadConstantBoolean:\n                this.loadBoolean(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadConstantText:\n                this.loadText(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadConstantCharacter:\n                this.loadCharacter(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadConstantFloat:\n                this.loadFloat(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadConstantInteger:\n                this.loadInteger(nextInstruction.arguments);\n                break;\n            case OperationCode.Move:\n                throw new Error('MOVE is not yet supported.');\n            case OperationCode.StoreVariable:\n                this.storeVariable();\n                break;\n            case OperationCode.LoadVariable:\n                this.loadVariable(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadArrayVariable:\n                this.loadArrayVariable(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadArrayVariableElement:\n                this.loadArrayVariableElement(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadService:\n                this.loadService(nextInstruction.arguments);\n                break;\n            case OperationCode.LoadThis:\n                this.loadThis(pointer);\n                break;\n            case OperationCode.AcquireShared:\n                // TODO: Can be ignored for now\n                console.warn('Composite Runtime: Acquire SHARED ignored.');\n                break;\n            case OperationCode.ReleaseShared:\n                // TODO: Can be ignored for now\n                console.warn('Composite Runtime: Release SHARED ignored.');\n                break;\n            case OperationCode.AcquireExclusive:\n                this.handleAcquireExclusive();\n                break;\n            case OperationCode.ReleaseExclusive:\n                this.handleReleaseExclusive();\n                break;\n            case OperationCode.Branch:\n                this.branch(nextInstruction.arguments);\n                break;\n            case OperationCode.BranchTrue:\n                this.branchConditionally(true, nextInstruction.arguments);\n                break;\n            case OperationCode.BranchFalse:\n                this.branchConditionally(false, nextInstruction.arguments);\n                break;\n            case OperationCode.IsType:\n                this.handleIsType(nextInstruction.arguments);\n                break;\n            case OperationCode.ExistsTest:\n                this.handleExists();\n                break;\n            case OperationCode.BeginForEach:\n                this.handleForEachBegin();\n                break;\n            case OperationCode.EndForEach:\n                this.handleForEachEnd();\n                break;\n            case OperationCode.AssignArrayIndex:\n                this.handleAssignArrayIndex();\n                break;\n        }\n        this.unloadValue();\n    }\n}\nInterpreter.indexJoiner = '@___@:::@___@';\n//# sourceMappingURL=interpreter.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export var Tag;\n(function (Tag) {\n    Tag[\"EOT\"] = \"EOT\";\n    Tag[\"Begin\"] = \"BEGIN\";\n    Tag[\"Activity\"] = \"ACTIVITY\";\n    Tag[\"Finally\"] = \"FINALLY\";\n    Tag[\"End\"] = \"END\";\n    Tag[\"Constant\"] = \"CONSTANT\";\n    Tag[\"Variable\"] = \"VARIABLE\";\n    Tag[\"In\"] = \"IN\";\n    Tag[\"Out\"] = \"OUT\";\n    Tag[\"Is\"] = \"IS\";\n    Tag[\"Type\"] = \"TYPE\";\n    Tag[\"Any\"] = \"ANY\";\n    Tag[\"Finish\"] = \"FINISH\";\n    Tag[\"Component\"] = \"COMPONENT\";\n    Tag[\"Interface\"] = \"INTERFACE\";\n    Tag[\"Procedure\"] = \"PROCEDURE\";\n    Tag[\"Implementation\"] = \"IMPLEMENTATION\";\n    Tag[\"Offers\"] = \"OFFERS\";\n    Tag[\"Requires\"] = \"REQUIRES\";\n    Tag[\"OpenBrace\"] = \"{\";\n    Tag[\"CloseBrace\"] = \"}\";\n    Tag[\"OpenSquareBracket\"] = \"[\";\n    Tag[\"CloseSquareBracket\"] = \"]\";\n    Tag[\"OpenParentheses\"] = \"(\";\n    Tag[\"CloseParentheses\"] = \")\";\n    Tag[\"Semicolon\"] = \";\";\n    Tag[\"Colon\"] = \":\";\n    Tag[\"Comma\"] = \",\";\n    Tag[\"Asterisk\"] = \"*\";\n    Tag[\"Pipe\"] = \"|\";\n    Tag[\"For\"] = \"FOR\";\n    Tag[\"To\"] = \"TO\";\n    Tag[\"By\"] = \"BY\";\n    Tag[\"Do\"] = \"DO\";\n    Tag[\"Foreach\"] = \"FOREACH\";\n    Tag[\"Of\"] = \"OF\";\n    Tag[\"While\"] = \"WHILE\";\n    Tag[\"Repeat\"] = \"REPEAT\";\n    Tag[\"Until\"] = \"UNTIL\";\n    Tag[\"If\"] = \"IF\";\n    Tag[\"Then\"] = \"THEN\";\n    Tag[\"Elsif\"] = \"ELSIF\";\n    Tag[\"Else\"] = \"ELSE\";\n    Tag[\"Return\"] = \"RETURN\";\n    Tag[\"NumberSign\"] = \"#\";\n    Tag[\"Equal\"] = \"=\";\n    Tag[\"Less\"] = \"<\";\n    Tag[\"LessEqual\"] = \"<=\";\n    Tag[\"Greater\"] = \">\";\n    Tag[\"GreaterEqual\"] = \">=\";\n    Tag[\"ColonEqual\"] = \":=\";\n    Tag[\"Ellipsis\"] = \"..\";\n    Tag[\"Plus\"] = \"+\";\n    Tag[\"Minus\"] = \"-\";\n    Tag[\"Tilde\"] = \"~\";\n    Tag[\"Slash\"] = \"/\";\n    Tag[\"Div\"] = \"DIV\";\n    Tag[\"Mod\"] = \"MOD\";\n    Tag[\"And\"] = \"AND\";\n    Tag[\"Or\"] = \"OR\";\n    Tag[\"ExclamationMark\"] = \"!\";\n    Tag[\"QuestionMark\"] = \"?\";\n})(Tag || (Tag = {}));\nexport function tagFromString(identifier) {\n    switch (identifier) {\n        case Tag.Begin:\n            return Tag.Begin;\n        case Tag.Activity:\n            return Tag.Activity;\n        case Tag.Finally:\n            return Tag.Finally;\n        case Tag.End:\n            return Tag.End;\n        case Tag.Constant:\n            return Tag.Constant;\n        case Tag.Variable:\n            return Tag.Variable;\n        case Tag.In:\n            return Tag.In;\n        case Tag.Out:\n            return Tag.Out;\n        case Tag.Is:\n            return Tag.Is;\n        case Tag.Type:\n            return Tag.Type;\n        case Tag.Any:\n            return Tag.Any;\n        case Tag.Finish:\n            return Tag.Finish;\n        case Tag.Component:\n            return Tag.Component;\n        case Tag.Interface:\n            return Tag.Interface;\n        case Tag.Procedure:\n            return Tag.Procedure;\n        case Tag.Implementation:\n            return Tag.Implementation;\n        case Tag.Offers:\n            return Tag.Offers;\n        case Tag.Requires:\n            return Tag.Requires;\n        case Tag.OpenBrace:\n            return Tag.OpenBrace;\n        case Tag.CloseBrace:\n            return Tag.CloseBrace;\n        case Tag.OpenSquareBracket:\n            return Tag.OpenSquareBracket;\n        case Tag.CloseSquareBracket:\n            return Tag.CloseSquareBracket;\n        case Tag.OpenParentheses:\n            return Tag.OpenParentheses;\n        case Tag.CloseParentheses:\n            return Tag.CloseParentheses;\n        case Tag.Semicolon:\n            return Tag.Semicolon;\n        case Tag.Colon:\n            return Tag.Colon;\n        case Tag.Comma:\n            return Tag.Comma;\n        case Tag.Asterisk:\n            return Tag.Asterisk;\n        case Tag.Pipe:\n            return Tag.Pipe;\n        case Tag.For:\n            return Tag.For;\n        case Tag.To:\n            return Tag.To;\n        case Tag.By:\n            return Tag.By;\n        case Tag.Do:\n            return Tag.Do;\n        case Tag.Foreach:\n            return Tag.Foreach;\n        case Tag.Of:\n            return Tag.Of;\n        case Tag.While:\n            return Tag.While;\n        case Tag.Repeat:\n            return Tag.Repeat;\n        case Tag.Until:\n            return Tag.Until;\n        case Tag.If:\n            return Tag.If;\n        case Tag.Then:\n            return Tag.Then;\n        case Tag.Elsif:\n            return Tag.Elsif;\n        case Tag.Else:\n            return Tag.Else;\n        case Tag.Return:\n            return Tag.Return;\n        case Tag.NumberSign:\n            return Tag.NumberSign;\n        case Tag.Equal:\n            return Tag.Equal;\n        case Tag.Less:\n            return Tag.Less;\n        case Tag.LessEqual:\n            return Tag.LessEqual;\n        case Tag.Greater:\n            return Tag.Greater;\n        case Tag.GreaterEqual:\n            return Tag.GreaterEqual;\n        case Tag.ColonEqual:\n            return Tag.ColonEqual;\n        case Tag.Ellipsis:\n            return Tag.Ellipsis;\n        case Tag.Plus:\n            return Tag.Plus;\n        case Tag.Minus:\n            return Tag.Minus;\n        case Tag.Tilde:\n            return Tag.Tilde;\n        case Tag.Slash:\n            return Tag.Slash;\n        case Tag.Div:\n            return Tag.Div;\n        case Tag.Mod:\n            return Tag.Mod;\n        case Tag.And:\n            return Tag.And;\n        case Tag.Or:\n            return Tag.Or;\n        case Tag.ExclamationMark:\n            return Tag.ExclamationMark;\n        case Tag.QuestionMark:\n            return Tag.QuestionMark;\n        default:\n            return undefined;\n    }\n}\nexport class Token {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\nexport class UnknownCharacterToken extends Token {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n}\nvar ErrorTokenTag;\n(function (ErrorTokenTag) {\n    ErrorTokenTag[ErrorTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(ErrorTokenTag || (ErrorTokenTag = {}));\nexport class ErrorToken extends Token {\n    constructor(location) {\n        super(location);\n        this._errorTag = ErrorTokenTag.Tag;\n    }\n}\nexport class FixToken extends Token {\n    constructor(location, tag) {\n        super(location);\n        this.tag = tag;\n    }\n    getTag() {\n        return this.tag;\n    }\n}\nexport class IdentifierToken extends Token {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n}\nexport class NumberToken extends Token {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getNumber() {\n        return this.value;\n    }\n}\nvar HexNumberTokenTag;\n(function (HexNumberTokenTag) {\n    HexNumberTokenTag[HexNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(HexNumberTokenTag || (HexNumberTokenTag = {}));\nexport class HexNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = HexNumberTokenTag.Tag;\n    }\n}\nvar IntegerNumberTokenTag;\n(function (IntegerNumberTokenTag) {\n    IntegerNumberTokenTag[IntegerNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTokenTag || (IntegerNumberTokenTag = {}));\nexport class IntegerNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = IntegerNumberTokenTag.Tag;\n    }\n}\nvar FloatNumberTokenTag;\n(function (FloatNumberTokenTag) {\n    FloatNumberTokenTag[FloatNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatNumberTokenTag || (FloatNumberTokenTag = {}));\nexport class FloatNumberToken extends NumberToken {\n    constructor(location, mantissa, exponent) {\n        super(location, mantissa * 10 ** exponent);\n        this.mantissa = mantissa;\n        this.exponent = exponent;\n        this._tag = FloatNumberTokenTag.Tag;\n    }\n    getMantissa() {\n        return this.mantissa;\n    }\n    getExponent() {\n        return this.exponent;\n    }\n}\nexport class TextToken extends Token {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n}\n//# sourceMappingURL=tokens.js.map","import { CompareValue } from '@composita/ts-utility-types';\nexport class SourcePosition {\n    constructor(line, character) {\n        this.line = line;\n        this.character = character;\n    }\n    static from(other) {\n        return other instanceof SourcePosition ? other : new SourcePosition(other.line, other.character);\n    }\n    compareTo(other) {\n        if (this.line < other.line || (this.line === other.line && this.character < other.character)) {\n            return CompareValue.LT;\n        }\n        if (this.line > other.line || (this.line === other.line && this.character > other.character)) {\n            return CompareValue.GT;\n        }\n        return CompareValue.EQ;\n    }\n}\nexport class SourceRange {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    static merge(a, b) {\n        const startACompare = SourcePosition.from(a.start).compareTo(b.start);\n        const endACompare = SourcePosition.from(a.end).compareTo(b.end);\n        const startRange = startACompare === CompareValue.LT ? a.start : startACompare === CompareValue.GT ? b.start : a.start;\n        const endRange = endACompare === CompareValue.LT ? b.end : endACompare === CompareValue.GT ? a.end : b.end;\n        return new SourceRange(startRange, endRange);\n    }\n}\nexport class SourceLocation {\n    constructor(uri, range) {\n        this.uri = uri;\n        this.range = range;\n    }\n    static merge(a, b) {\n        if (a.uri !== b.uri) {\n            throw Error('Source location URI missmatch.');\n        }\n        return new SourceLocation(a.uri, SourceRange.merge(a.range, b.range));\n    }\n}\n//# sourceMappingURL=location.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","import { DiagnosticSeverity, } from 'vscode-languageserver-types';\nexport class CompilerDiagnostic {\n    constructor(range, severity, message, code, source, tags, relatedInformation) {\n        this.range = range;\n        this.severity = severity;\n        this.message = message;\n        this.code = code;\n        this.source = source;\n        this.tags = tags;\n        this.relatedInformation = relatedInformation;\n    }\n}\nclass DiagnosisState {\n    constructor() {\n        this.diagnostics = new Array();\n        this.warning = false;\n        this.error = false;\n    }\n    copy() {\n        const state = new DiagnosisState();\n        state.diagnostics = new Array(...this.diagnostics);\n        state.warning = this.warning;\n        state.error = this.error;\n        return state;\n    }\n}\nexport class CompilerDiagnosis {\n    constructor() {\n        this.state = new DiagnosisState();\n        this.stateStack = new Array();\n    }\n    log(diagnostic) {\n        this.state.diagnostics.push(diagnostic);\n        if (diagnostic.severity === DiagnosticSeverity.Warning) {\n            this.state.warning = true;\n        }\n        if (diagnostic.severity === DiagnosticSeverity.Error) {\n            this.state.error = true;\n        }\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    restoreState() {\n        const oldState = this.stateStack.pop();\n        if (oldState === undefined) {\n            // TODO maybe do something different here...\n            console.warn('Failed to restore diagnosis state, no state saved.');\n            return;\n        }\n        this.state = oldState;\n    }\n    hasErrors() {\n        return this.state.error;\n    }\n    hasWarnings() {\n        return this.state.warning;\n    }\n    getDiagnostics() {\n        return this.state.diagnostics;\n    }\n    print(out) {\n        this.state.diagnostics.forEach((value) => {\n            out(`[${value.range.start.line}:${value.range.start.character}]: ${this.toString(value.severity)}: ${value.message}.`);\n        });\n    }\n    toString(severity) {\n        switch (severity) {\n            case DiagnosticSeverity.Error:\n                return 'Error';\n            case DiagnosticSeverity.Warning:\n                return 'Warning';\n            case DiagnosticSeverity.Information:\n                return 'Information';\n            case DiagnosticSeverity.Hint:\n                return 'Hint';\n            default:\n                return 'undefined';\n        }\n    }\n}\n//# sourceMappingURL=diagnosis.js.map","import { SourceLocation, SourceRange, SourcePosition } from '../source-location/location';\nimport { IdentifierToken, TextToken, FixToken, ErrorToken, HexNumberToken, IntegerNumberToken, FloatNumberToken, Tag, tagFromString, } from '../tokens/tokens';\nimport { CompilerDiagnostic } from '../diagnosis/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nvar SpecialCharacter;\n(function (SpecialCharacter) {\n    SpecialCharacter[\"Null\"] = \"\\0\";\n    SpecialCharacter[\"Backspace\"] = \"\\b\";\n    SpecialCharacter[\"Space\"] = \" \";\n    SpecialCharacter[\"HorizontalTab\"] = \"\\t\";\n    SpecialCharacter[\"VerticalTab\"] = \"\\v\";\n    SpecialCharacter[\"FormFeed\"] = \"\\f\";\n    SpecialCharacter[\"CarriageReturn\"] = \"\\r\";\n    SpecialCharacter[\"LineFeed\"] = \"\\n\";\n    SpecialCharacter[\"Backslash\"] = \"\\\\\";\n    SpecialCharacter[\"SingleQuote\"] = \"'\";\n    SpecialCharacter[\"DoubleQuote\"] = \"\\\"\";\n})(SpecialCharacter || (SpecialCharacter = {}));\nfunction toSpecialCharacter(character) {\n    switch (character) {\n        case '0':\n            return SpecialCharacter.Null;\n        case 'b':\n            return SpecialCharacter.Backspace;\n        case 't':\n            return SpecialCharacter.HorizontalTab;\n        case 'v':\n            return SpecialCharacter.VerticalTab;\n        case 'f':\n            return SpecialCharacter.FormFeed;\n        case 'r':\n            return SpecialCharacter.CarriageReturn;\n        case 'n':\n            return SpecialCharacter.LineFeed;\n        case '\\\\':\n            return SpecialCharacter.Backslash;\n        case \"'\":\n            return SpecialCharacter.SingleQuote;\n        case '\"':\n            return SpecialCharacter.DoubleQuote;\n        default:\n            return undefined;\n    }\n}\nclass LexerState {\n    constructor() {\n        this.tokenCache = new Array();\n        this.currentPosition = 0;\n        this.currentLinePosition = 0;\n        this.currentLine = 0;\n    }\n    copy() {\n        const newState = new LexerState();\n        newState.tokenCache = new Array(...this.tokenCache);\n        newState.currentPosition = this.currentPosition;\n        newState.currentLinePosition = this.currentLinePosition;\n        newState.currentLine = this.currentLine;\n        return newState;\n    }\n}\nexport class Lexer {\n    constructor(diagnosis, uri, code) {\n        this.diagnosis = diagnosis;\n        this.uri = uri;\n        this.code = Array.from(code);\n        this.state = new LexerState();\n        this.stateStack = new Array();\n    }\n    advance(n = 1) {\n        while (n > 0 && !this.isEOT()) {\n            if (this.isLineFeed()) {\n                this.state.currentLine = this.state.currentLine + 1;\n                this.state.currentLinePosition = 0;\n            }\n            else {\n                this.state.currentLinePosition = this.state.currentLinePosition + 1;\n            }\n            this.state.currentPosition = this.state.currentPosition + 1;\n            n = n - 1;\n        }\n    }\n    getCurrentCharacter() {\n        return !this.isEOT() ? this.code[this.state.currentPosition] : undefined;\n    }\n    createSourceLocation(range) {\n        return new SourceLocation(this.uri, range);\n    }\n    createSourcePosition() {\n        return new SourcePosition(this.state.currentLine, this.state.currentLinePosition);\n    }\n    createEOTToken() {\n        const endPosition = this.createSourcePosition();\n        return new FixToken(this.createSourceLocation(new SourceRange(endPosition, endPosition)), Tag.EOT);\n    }\n    isSpace() {\n        return this.getCurrentCharacter() === SpecialCharacter.Space;\n    }\n    isTab() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter === SpecialCharacter.HorizontalTab || currentCharacter === SpecialCharacter.VerticalTab;\n    }\n    isFormFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.FormFeed;\n    }\n    isLineFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.LineFeed;\n    }\n    isCarriageReturn() {\n        return this.getCurrentCharacter() === SpecialCharacter.CarriageReturn;\n    }\n    isBackslash() {\n        return this.getCurrentCharacter() === SpecialCharacter.Backslash;\n    }\n    isLetter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'z') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'Z')));\n    }\n    isDot() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter === '.';\n    }\n    isEllipsis() {\n        return (this.isDot() &&\n            this.state.currentPosition + 1 < this.code.length &&\n            this.code[this.state.currentPosition + 1] === '.');\n    }\n    isNumber() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter >= '0' && currentCharacter <= '9';\n    }\n    isHexCharacter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'f') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'F')));\n    }\n    isDoubleQuote() {\n        return this.getCurrentCharacter() === SpecialCharacter.DoubleQuote;\n    }\n    isWhitespace() {\n        return this.isSpace() || this.isTab() || this.isLineFeed() || this.isCarriageReturn() || this.isFormFeed();\n    }\n    isEOT() {\n        return this.state.currentPosition >= this.code.length;\n    }\n    isCommentStart() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.OpenParentheses &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.Asterisk);\n    }\n    isCommentEnd() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.Asterisk &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.CloseParentheses);\n    }\n    skipWhitespace() {\n        let hasSkipped = false;\n        while (this.isWhitespace()) {\n            hasSkipped = true;\n            this.advance();\n        }\n        return hasSkipped;\n    }\n    skipComment() {\n        let hasSkipped = false;\n        if (this.isCommentStart()) {\n            hasSkipped = true;\n            this.advance(2);\n            while (!this.isEOT() && !this.isCommentEnd()) {\n                this.advance();\n            }\n            if (!this.isEOT()) {\n                this.advance(2);\n            }\n        }\n        return hasSkipped;\n    }\n    skipUntilWhitespace() {\n        while (!this.isWhitespace() && !this.isEOT()) {\n            this.advance();\n        }\n    }\n    readCharacter() {\n        const character = this.getCurrentCharacter();\n        if (this.isBackslash()) {\n            this.advance();\n            const specialCharacter = toSpecialCharacter(this.getCurrentCharacter());\n            if (specialCharacter !== undefined) {\n                this.advance();\n                return specialCharacter;\n            }\n        }\n        this.advance();\n        return character;\n    }\n    readText() {\n        let text = '';\n        const start = this.createSourcePosition();\n        this.advance();\n        while (!this.isDoubleQuote()) {\n            const character = this.readCharacter();\n            if (character === undefined) {\n                return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n            }\n            text = text + character;\n        }\n        if (this.isDoubleQuote()) {\n            this.advance();\n            const end = this.createSourcePosition();\n            return new TextToken(this.createSourceLocation(new SourceRange(start, end)), text);\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readIdentifier() {\n        let identifier = '';\n        const start = this.createSourcePosition();\n        while (!this.isEOT() && (this.isLetter() || this.isNumber())) {\n            identifier = identifier + this.getCurrentCharacter();\n            this.advance();\n        }\n        const location = this.createSourceLocation(new SourceRange(start, this.createSourcePosition()));\n        const tag = tagFromString(identifier);\n        return tag !== undefined ? new FixToken(location, tag) : new IdentifierToken(location, identifier);\n    }\n    readFixToken() {\n        const start = this.createSourcePosition();\n        const currentCharacter = this.getCurrentCharacter();\n        if (currentCharacter !== undefined) {\n            const tag = tagFromString(currentCharacter);\n            this.advance();\n            if (tag !== undefined) {\n                const nextCharacter = this.getCurrentCharacter();\n                if (nextCharacter !== undefined) {\n                    const nextTag = tagFromString(nextCharacter);\n                    if (nextTag === Tag.Equal) {\n                        switch (tag) {\n                            case Tag.Less:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.LessEqual);\n                            case Tag.Greater:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.GreaterEqual);\n                            case Tag.Colon:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.ColonEqual);\n                        }\n                    }\n                }\n                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), tag);\n            }\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readScaleFactor() {\n        let scaleFactor = 0;\n        if (!this.isNumber()) {\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(this.createSourcePosition(), this.createSourcePosition()), DiagnosticSeverity.Error, 'Scale factor must be at least one digit long.'));\n        }\n        while (this.isNumber()) {\n            const current = this.getCurrentCharacter();\n            if (current !== undefined) {\n                scaleFactor = scaleFactor * 10 + Number.parseInt(current);\n                this.advance();\n            }\n        }\n        return scaleFactor;\n    }\n    readNumber() {\n        const start = this.createSourcePosition();\n        let mantissa = undefined;\n        let isHex = false;\n        let isFloat = false;\n        let exponent = 0;\n        while (this.isNumber() || this.isHexCharacter()) {\n            if (this.isHexCharacter()) {\n                isHex = true;\n            }\n            mantissa = mantissa === undefined ? this.getCurrentCharacter() : mantissa + this.getCurrentCharacter();\n            this.advance();\n            if (isFloat && isHex) {\n                this.skipUntilWhitespace();\n                this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Floating point hex numbers are not supported.'));\n                break;\n            }\n            if (isFloat) {\n                exponent = exponent - 1;\n            }\n            if (this.isEllipsis()) {\n                break;\n            }\n            if (this.isDot()) {\n                this.advance();\n                isFloat = true;\n            }\n            if (isFloat && this.getCurrentCharacter() === 'E') {\n                this.advance();\n                const current = this.getCurrentCharacter();\n                let prefix = 1;\n                if (current === '-' || current === '+') {\n                    prefix = current === '-' ? -1 : 1;\n                    this.advance();\n                }\n                exponent = prefix * this.readScaleFactor();\n                break;\n            }\n        }\n        if (mantissa === undefined) {\n            return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), 0);\n        }\n        const hexModifier = this.getCurrentCharacter() === 'H' || this.getCurrentCharacter() === 'X';\n        if (hexModifier) {\n            this.advance();\n        }\n        if (isHex && !hexModifier) {\n            this.skipUntilWhitespace();\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Missing \"H\" or \"X\" after hex number'));\n        }\n        if (isHex || hexModifier) {\n            return new HexNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt('0x' + mantissa));\n        }\n        if (isFloat) {\n            return new FloatNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa), exponent);\n        }\n        return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa));\n    }\n    readEllipsis() {\n        const start = this.createSourcePosition();\n        this.advance();\n        this.advance();\n        return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.Ellipsis);\n    }\n    read() {\n        while (!this.isEOT() && (this.skipWhitespace() || this.skipComment())) {\n            /* do nothing, just skip */\n        }\n        if (this.isEOT()) {\n            return this.createEOTToken();\n        }\n        if (this.isDoubleQuote()) {\n            return this.readText();\n        }\n        if (this.isLetter()) {\n            return this.readIdentifier();\n        }\n        if (this.isNumber()) {\n            return this.readNumber();\n        }\n        if (this.isEllipsis()) {\n            return this.readEllipsis();\n        }\n        return this.readFixToken();\n    }\n    getUri() {\n        return this.uri;\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    popSaveState() {\n        this.stateStack.pop();\n    }\n    restoreState() {\n        const lastState = this.stateStack.pop();\n        if (lastState === undefined) {\n            console.warn('No lexer state to restore.');\n            return;\n        }\n        this.state = lastState;\n    }\n    peek(n) {\n        if (n < 1) {\n            // TODO: replace with something cleverer\n            throw RangeError('peek range must be greater than 0.');\n        }\n        let cacheSize = this.state.tokenCache.length;\n        if (n <= cacheSize) {\n            return this.state.tokenCache[n - 1];\n        }\n        do {\n            if (cacheSize > 0) {\n                const lastToken = this.state.tokenCache[cacheSize - 1];\n                if (lastToken instanceof FixToken && lastToken.getTag() === Tag.EOT) {\n                    return lastToken;\n                }\n            }\n            cacheSize = this.state.tokenCache.push(this.read());\n        } while (n > cacheSize);\n        return this.state.tokenCache[n - 1];\n    }\n    next() {\n        const nextToken = this.peek(1);\n        this.state.tokenCache.shift();\n        return nextToken;\n    }\n}\n//# sourceMappingURL=lexer.js.map","import { Node } from './node';\nvar DeclarationNodeTag;\n(function (DeclarationNodeTag) {\n    DeclarationNodeTag[DeclarationNodeTag[\"Tag\"] = 0] = \"Tag\";\n})(DeclarationNodeTag || (DeclarationNodeTag = {}));\nexport class DeclarationNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = DeclarationNodeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitDeclaration(this);\n    }\n}\n//# sourceMappingURL=declaration.js.map","export class Node {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\n//# sourceMappingURL=node.js.map","import { Node } from './node';\nexport class AttributeNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitAttribute(this);\n    }\n}\n//# sourceMappingURL=attribute.js.map","import { Node } from './node';\nexport class CardinalityNode extends Node {\n    constructor(location, min, max) {\n        super(location);\n        this.min = min;\n        this.max = max;\n    }\n    getMin() {\n        return this.min;\n    }\n    getMax() {\n        return this.max;\n    }\n    accept(visitor) {\n        visitor.visitCardinality(this);\n    }\n}\n//# sourceMappingURL=cardinality.js.map","import { Node } from './node';\nvar ExpressionTag;\n(function (ExpressionTag) {\n    ExpressionTag[ExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ExpressionTag || (ExpressionTag = {}));\nexport class ExpressionNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._expressionTag = ExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitExpression(this);\n    }\n}\nvar AttributedExpressionTag;\n(function (AttributedExpressionTag) {\n    AttributedExpressionTag[AttributedExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(AttributedExpressionTag || (AttributedExpressionTag = {}));\nexport class AttributedExpressionNode extends ExpressionNode {\n    constructor(location, attributes) {\n        super(location);\n        this.attributes = attributes;\n        this._attributedExpressionTag = AttributedExpressionTag.Tag;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitAttributedExpression(this);\n    }\n}\nexport class UnaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, expression) {\n        super(location, attributes);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitUnaryExpression(this);\n    }\n}\nexport var LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[LogicalOperator[\"Equal\"] = 0] = \"Equal\";\n    LogicalOperator[LogicalOperator[\"NotEqual\"] = 1] = \"NotEqual\";\n    LogicalOperator[LogicalOperator[\"Less\"] = 2] = \"Less\";\n    LogicalOperator[LogicalOperator[\"LessEqual\"] = 3] = \"LessEqual\";\n    LogicalOperator[LogicalOperator[\"More\"] = 4] = \"More\";\n    LogicalOperator[LogicalOperator[\"MoreEqual\"] = 5] = \"MoreEqual\";\n})(LogicalOperator || (LogicalOperator = {}));\nexport class BinaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, left, op, right) {\n        super(location, attributes);\n        this.left = left;\n        this.op = op;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitBinaryExpression(this);\n    }\n}\nexport var OffersRequiresOperator;\n(function (OffersRequiresOperator) {\n    OffersRequiresOperator[OffersRequiresOperator[\"Offers\"] = 0] = \"Offers\";\n    OffersRequiresOperator[OffersRequiresOperator[\"Requires\"] = 1] = \"Requires\";\n})(OffersRequiresOperator || (OffersRequiresOperator = {}));\nexport class OffersRequiresExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, designator, op, interfaces) {\n        super(location, attributes);\n        this.designator = designator;\n        this.op = op;\n        this.interfaces = interfaces;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getOp() {\n        return this.op;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitOffersRequiresExpression(this);\n    }\n}\nexport class TypeCheckExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, designator, type) {\n        super(location, attributes);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitTypeCheck(this);\n    }\n}\n//# sourceMappingURL=expression.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ComponentNode extends DeclarationNode {\n    constructor(location, name, attributes, offers, requires, body) {\n        super(location);\n        this.name = name;\n        this.attributes = attributes;\n        this.offers = offers;\n        this.requires = requires;\n        this.body = body;\n    }\n    getName() {\n        return this.name;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getOffers() {\n        return this.offers;\n    }\n    getRequires() {\n        return this.requires;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitComponent(this);\n    }\n}\nexport class ComponentBodyNode extends Node {\n    constructor(location, declarations, implementations, beginBlock, activityBlock, finallyBlock) {\n        super(location);\n        this.declarations = declarations;\n        this.implementations = implementations;\n        this.beginBlock = beginBlock;\n        this.activityBlock = activityBlock;\n        this.finallyBlock = finallyBlock;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getImplementations() {\n        return this.implementations;\n    }\n    getBeginBlock() {\n        return this.beginBlock;\n    }\n    getActivityBlock() {\n        return this.activityBlock;\n    }\n    getFinallyBlock() {\n        return this.finallyBlock;\n    }\n    accept(visitor) {\n        visitor.visitComponentBody(this);\n    }\n}\n//# sourceMappingURL=component.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ConstantNode extends Node {\n    constructor(location, name, expression) {\n        super(location);\n        this.name = name;\n        this.expression = expression;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstant(this);\n    }\n}\nexport class ConstantExpressionNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstantExpression(this);\n    }\n}\nexport class ConstantListNode extends DeclarationNode {\n    constructor(location, constants) {\n        super(location);\n        this.constants = constants;\n    }\n    getConstants() {\n        return this.constants;\n    }\n    accept(visitor) {\n        visitor.visitConstantList(this);\n    }\n}\n//# sourceMappingURL=constant.js.map","import { Node } from './node';\nimport { ExpressionNode } from './expression';\nvar SimpleExpressionTag;\n(function (SimpleExpressionTag) {\n    SimpleExpressionTag[SimpleExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(SimpleExpressionTag || (SimpleExpressionTag = {}));\nexport class SimpleExpressionNode extends ExpressionNode {\n    constructor(location) {\n        super(location);\n        this._simpleExpressionTag = SimpleExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitSimpleExpression(this);\n    }\n}\nexport var PrefixOperator;\n(function (PrefixOperator) {\n    PrefixOperator[PrefixOperator[\"Plus\"] = 0] = \"Plus\";\n    PrefixOperator[PrefixOperator[\"Minus\"] = 1] = \"Minus\";\n})(PrefixOperator || (PrefixOperator = {}));\nexport class UnaryTermNode extends SimpleExpressionNode {\n    constructor(location, op, term) {\n        super(location);\n        this.op = op;\n        this.term = term;\n    }\n    getOp() {\n        return this.op;\n    }\n    getTerm() {\n        return this.term;\n    }\n    accept(visitor) {\n        visitor.visitUnaryTermNode(this);\n    }\n}\nexport var InfixTermOperator;\n(function (InfixTermOperator) {\n    InfixTermOperator[InfixTermOperator[\"Plus\"] = 0] = \"Plus\";\n    InfixTermOperator[InfixTermOperator[\"Minus\"] = 1] = \"Minus\";\n    InfixTermOperator[InfixTermOperator[\"Or\"] = 2] = \"Or\";\n})(InfixTermOperator || (InfixTermOperator = {}));\nexport class TermChainNode extends SimpleExpressionNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitTermChain(this);\n    }\n}\nexport class RightTermNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightTerm(this);\n    }\n}\n//# sourceMappingURL=simple-expression.js.map","import { Node } from './node';\nimport { SimpleExpressionNode } from './simple-expression';\nvar TermTag;\n(function (TermTag) {\n    TermTag[TermTag[\"Tag\"] = 0] = \"Tag\";\n})(TermTag || (TermTag = {}));\nexport class TermNode extends SimpleExpressionNode {\n    constructor(location) {\n        super(location);\n        this._termTag = TermTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitTerm(this);\n    }\n}\nexport class FactorChainNode extends TermNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitFactorChain(this);\n    }\n}\nexport var InfixFactorOperator;\n(function (InfixFactorOperator) {\n    InfixFactorOperator[InfixFactorOperator[\"Times\"] = 0] = \"Times\";\n    InfixFactorOperator[InfixFactorOperator[\"Div\"] = 1] = \"Div\";\n    InfixFactorOperator[InfixFactorOperator[\"DivText\"] = 2] = \"DivText\";\n    InfixFactorOperator[InfixFactorOperator[\"ModText\"] = 3] = \"ModText\";\n    InfixFactorOperator[InfixFactorOperator[\"AndText\"] = 4] = \"AndText\";\n})(InfixFactorOperator || (InfixFactorOperator = {}));\nexport class RightFactorNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightFactor(this);\n    }\n}\n//# sourceMappingURL=term.js.map","import { TermNode } from './term';\nvar FactorTag;\n(function (FactorTag) {\n    FactorTag[FactorTag[\"Tag\"] = 0] = \"Tag\";\n})(FactorTag || (FactorTag = {}));\nexport class FactorNode extends TermNode {\n    constructor(location) {\n        super(location);\n        this._factorTag = FactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitFactor(this);\n    }\n}\nexport var FactorPrefix;\n(function (FactorPrefix) {\n    FactorPrefix[FactorPrefix[\"Not\"] = 0] = \"Not\";\n})(FactorPrefix || (FactorPrefix = {}));\nexport class UnaryFactorNode extends FactorNode {\n    constructor(location, prefix, factor) {\n        super(location);\n        this.prefix = prefix;\n        this.factor = factor;\n    }\n    getPrefix() {\n        return this.prefix;\n    }\n    getFactor() {\n        return this.factor;\n    }\n    accept(visitor) {\n        visitor.visitUnaryFactor(this);\n    }\n}\nexport class ExpressionFactorNode extends FactorNode {\n    constructor(location, expresion) {\n        super(location);\n        this.expresion = expresion;\n    }\n    getExpression() {\n        return this.expresion;\n    }\n    accept(visitor) {\n        visitor.visitExpressionFactor(this);\n    }\n}\n//# sourceMappingURL=factor.js.map","import { FactorNode } from './factor';\nexport class OperandNode extends FactorNode {\n    constructor(location) {\n        super(location);\n    }\n    accept(visitor) {\n        visitor.visitOperand(this);\n    }\n}\nexport class NumberNode extends OperandNode {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getValue() {\n        return this.value;\n    }\n    accept(visitor) {\n        visitor.visitNumber(this);\n    }\n}\nvar IntegerNumberTag;\n(function (IntegerNumberTag) {\n    IntegerNumberTag[IntegerNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTag || (IntegerNumberTag = {}));\nexport class IntegerNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._integerNumberTag = IntegerNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitIntegerNumber(this);\n    }\n}\nvar RealNumberTag;\n(function (RealNumberTag) {\n    RealNumberTag[RealNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(RealNumberTag || (RealNumberTag = {}));\nexport class RealNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._realNumberTag = RealNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRealNumber(this);\n    }\n}\nexport class ConstantCharacterNode extends OperandNode {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n    accept(visitor) {\n        visitor.visitConstantCharacter(this);\n    }\n}\nexport class TextNode extends OperandNode {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n    accept(visitor) {\n        visitor.visitText(this);\n    }\n}\nexport var FixedMessagePattern;\n(function (FixedMessagePattern) {\n    FixedMessagePattern[FixedMessagePattern[\"Any\"] = 0] = \"Any\";\n    FixedMessagePattern[FixedMessagePattern[\"Finish\"] = 1] = \"Finish\";\n})(FixedMessagePattern || (FixedMessagePattern = {}));\nexport class InputReceiveTestNode extends OperandNode {\n    constructor(location, designator, pattern) {\n        super(location);\n        this.designator = designator;\n        this.pattern = pattern;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getPattern() {\n        return this.pattern;\n    }\n}\nvar ReceiveTestTag;\n(function (ReceiveTestTag) {\n    ReceiveTestTag[ReceiveTestTag[\"Tag\"] = 0] = \"Tag\";\n})(ReceiveTestTag || (ReceiveTestTag = {}));\nexport class ReceiveTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = ReceiveTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitReceiveTest(this);\n    }\n}\nvar InputTestTag;\n(function (InputTestTag) {\n    InputTestTag[InputTestTag[\"Tag\"] = 0] = \"Tag\";\n})(InputTestTag || (InputTestTag = {}));\nexport class InputTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = InputTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitInputTest(this);\n    }\n}\nexport class ExistsTestNode extends OperandNode {\n    constructor(location, designator) {\n        super(location);\n        this.designator = designator;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    accept(visitor) {\n        visitor.visitExistsTest(this);\n    }\n}\nexport class FunctionCallNode extends OperandNode {\n    constructor(location, name, args) {\n        super(location);\n        this.name = name;\n        this.args = args;\n    }\n    getName() {\n        return this.name;\n    }\n    getArguments() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitFunctionCall(this);\n    }\n}\n//# sourceMappingURL=operand.js.map","import { OperandNode } from './operand';\nvar DesignatorTag;\n(function (DesignatorTag) {\n    DesignatorTag[DesignatorTag[\"Tag\"] = 0] = \"Tag\";\n})(DesignatorTag || (DesignatorTag = {}));\nexport class DesignatorNode extends OperandNode {\n    constructor() {\n        super(...arguments);\n        this._tag = DesignatorTag.Tag;\n    }\n}\nexport class BasicDesignatorNode extends DesignatorNode {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitBasicDesignator(this);\n    }\n}\nexport class BasicExpressionDesignatorNode extends DesignatorNode {\n    constructor(location, name, expressions) {\n        super(location);\n        this.name = name;\n        this.expressions = expressions;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpressions() {\n        return this.expressions;\n    }\n    accept(visitor) {\n        visitor.visitBasicExpressionDesignator(this);\n    }\n}\nexport class BaseTargetDesignatorNode extends DesignatorNode {\n    constructor(location, base, target) {\n        super(location);\n        this.base = base;\n        this.target = target;\n    }\n    getBase() {\n        return this.base;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitBaseTargetDesignator(this);\n    }\n}\nexport class DesignatorTypeNode extends DesignatorNode {\n    constructor(location, designator, type) {\n        super(location);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitDesignatorType(this);\n    }\n}\n//# sourceMappingURL=designator.js.map","import { Node } from './node';\nexport class InterfaceDeclarationNode extends Node {\n    constructor(location, name, cardinality) {\n        super(location);\n        this.name = name;\n        this.cardinality = cardinality;\n    }\n    getName() {\n        return this.name;\n    }\n    getCardinality() {\n        return this.cardinality;\n    }\n    accept(visitor) {\n        visitor.visitInterfaceDeclaration(this);\n    }\n}\nvar OfferedInterfaceTag;\n(function (OfferedInterfaceTag) {\n    OfferedInterfaceTag[OfferedInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(OfferedInterfaceTag || (OfferedInterfaceTag = {}));\nexport class OfferedInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OfferedInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOfferedInterface(this);\n    }\n}\nvar RequiredInterfaceTag;\n(function (RequiredInterfaceTag) {\n    RequiredInterfaceTag[RequiredInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(RequiredInterfaceTag || (RequiredInterfaceTag = {}));\nexport class RequiredInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RequiredInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRequiredInterfface(this);\n    }\n}\n//# sourceMappingURL=interface-declaration.js.map","import { Node } from './node';\nexport class ImplementationNode extends Node {\n    constructor(location, name, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitImplementation(this);\n    }\n}\n//# sourceMappingURL=implementation.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class InterfaceNode extends DeclarationNode {\n    constructor(location, name, protocol) {\n        super(location);\n        this.name = name;\n        this.protocol = protocol;\n    }\n    getName() {\n        return this.name;\n    }\n    getProtocol() {\n        return this.protocol;\n    }\n    accept(visitor) {\n        visitor.visitInterface(this);\n    }\n}\nexport class ProtocolNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocol(this);\n    }\n}\nexport class ProtocolExpressionNode extends Node {\n    constructor(location, terms) {\n        super(location);\n        this.terms = terms;\n    }\n    getTerms() {\n        return this.terms;\n    }\n    accept(visitor) {\n        visitor.visitProtocolExpression(this);\n    }\n}\nexport class ProtocolTermNode extends Node {\n    constructor(location, factors) {\n        super(location);\n        this.factors = factors;\n    }\n    getFactors() {\n        return this.factors;\n    }\n    accept(visitor) {\n        visitor.visitProtocolTerm(this);\n    }\n}\n//# sourceMappingURL=interface.js.map","import { Node } from './node';\nvar ProtocolFactorTag;\n(function (ProtocolFactorTag) {\n    ProtocolFactorTag[ProtocolFactorTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorTag || (ProtocolFactorTag = {}));\nexport class ProtocolFactorNode extends Node {\n    constructor(location) {\n        super(location);\n        this._protocolFactorTag = ProtocolFactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactor(this);\n    }\n}\nexport var MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[MessageDirection[\"IN\"] = 0] = \"IN\";\n    MessageDirection[MessageDirection[\"OUT\"] = 1] = \"OUT\";\n})(MessageDirection || (MessageDirection = {}));\nexport class MessageDeclarationNode extends ProtocolFactorNode {\n    constructor(location, direction, name, params) {\n        super(location);\n        this.direction = direction;\n        this.name = name;\n        this.params = params;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitMessageDeclaration(this);\n    }\n}\nvar ProtocolFactorExpressionTag;\n(function (ProtocolFactorExpressionTag) {\n    ProtocolFactorExpressionTag[ProtocolFactorExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorExpressionTag || (ProtocolFactorExpressionTag = {}));\nexport class ProtocolFactorExpressionNode extends ProtocolFactorNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n        this._protocolFactorExpressionTag = ProtocolFactorExpressionTag.Tag;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactorExpression(this);\n    }\n}\nvar OptionalProtocolExpressionTag;\n(function (OptionalProtocolExpressionTag) {\n    OptionalProtocolExpressionTag[OptionalProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(OptionalProtocolExpressionTag || (OptionalProtocolExpressionTag = {}));\nexport class OptionalProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OptionalProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOptionalProtocolFactorExpression(this);\n    }\n}\nvar RepeatingProtocolExpressionTag;\n(function (RepeatingProtocolExpressionTag) {\n    RepeatingProtocolExpressionTag[RepeatingProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(RepeatingProtocolExpressionTag || (RepeatingProtocolExpressionTag = {}));\nexport class RepeatingProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RepeatingProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRepeatingProtocolFactorExpression(this);\n    }\n}\nvar GroupProtocolExpressionTag;\n(function (GroupProtocolExpressionTag) {\n    GroupProtocolExpressionTag[GroupProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(GroupProtocolExpressionTag || (GroupProtocolExpressionTag = {}));\nexport class GroupProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = GroupProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitGroupProtocolFactorExpression(this);\n    }\n}\n//# sourceMappingURL=protocol-factor.js.map","import { Node } from './node';\nexport class NameNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitName(this);\n    }\n}\nexport class IndexedNameNode extends Node {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitIndexedName(this);\n    }\n}\n//# sourceMappingURL=name.js.map","import { Node } from './node';\nexport class ParameterNode extends Node {\n    constructor(location, names, type) {\n        super(location);\n        this.names = names;\n        this.type = type;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitParameter(this);\n    }\n}\n//# sourceMappingURL=parameter.js.map","import { DeclarationNode } from './declaration';\nimport { Node } from './node';\nexport class ProcedureNode extends DeclarationNode {\n    constructor(location, name, params, type, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.params = params;\n        this.type = type;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    getType() {\n        return this.type;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitProcedure(this);\n    }\n}\nexport class ProcedureParameterNode extends Node {\n    constructor(location, mutable, parameter) {\n        super(location);\n        this.mutable = mutable;\n        this.parameter = parameter;\n    }\n    isMutable() {\n        return this.mutable;\n    }\n    getParameter() {\n        return this.parameter;\n    }\n    accept(visitor) {\n        visitor.visitProcedureParameter(this);\n    }\n}\n//# sourceMappingURL=procedure.js.map","import { Node } from './node';\nexport class ProgramNode extends Node {\n    constructor(location, components, interfaces) {\n        super(location);\n        this.components = components;\n        this.interfaces = interfaces;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitProgram(this);\n    }\n}\n//# sourceMappingURL=program.js.map","import { Node } from './node';\nvar StatementTag;\n(function (StatementTag) {\n    StatementTag[StatementTag[\"Tag\"] = 0] = \"Tag\";\n})(StatementTag || (StatementTag = {}));\nexport class StatementNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._statementTag = StatementTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitStatement(this);\n    }\n}\nexport class ProcedureCallNode extends StatementNode {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitProcedureCall(this);\n    }\n}\nexport class AssignmentNode extends StatementNode {\n    constructor(location, designator, expression) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAssignment(this);\n    }\n}\nexport class NewNode extends StatementNode {\n    constructor(location, designator, args) {\n        super(location);\n        this.designator = designator;\n        this.args = args;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitNew(this);\n    }\n}\nexport class ConnectNode extends StatementNode {\n    constructor(location, what, to) {\n        super(location);\n        this.what = what;\n        this.to = to;\n    }\n    getWhat() {\n        return this.what;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitConnect(this);\n    }\n}\nexport class DisconnectNode extends StatementNode {\n    constructor(location, what) {\n        super(location);\n        this.what = what;\n    }\n    getWhat() {\n        return this.what;\n    }\n    accept(visitor) {\n        visitor.visitDisconnect(this);\n    }\n}\nexport class SendNode extends StatementNode {\n    constructor(location, from, target, args) {\n        super(location);\n        this.from = from;\n        this.target = target;\n        this.args = args;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTarget() {\n        return this.target;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitSend(this);\n    }\n}\nexport class ReceiveNode extends StatementNode {\n    constructor(location, from, receiver, targets) {\n        super(location);\n        this.from = from;\n        this.receiver = receiver;\n        this.targets = targets;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getReceiver() {\n        return this.receiver;\n    }\n    getTargets() {\n        return this.targets;\n    }\n    accept(visitor) {\n        visitor.visitReceive(this);\n    }\n}\nexport class DeleteNode extends StatementNode {\n    constructor(location, target) {\n        super(location);\n        this.target = target;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitDelete(this);\n    }\n}\nexport class MoveNode extends StatementNode {\n    constructor(location, from, to) {\n        super(location);\n        this.from = from;\n        this.to = to;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitMove(this);\n    }\n}\nexport class AwaitNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAwait(this);\n    }\n}\nexport class ReturnNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitReturn(this);\n    }\n}\nexport class IfNode extends StatementNode {\n    constructor(location, expression, then, elseIfs, elseNode) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n        this.elseIfs = elseIfs;\n        this.elseNode = elseNode;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    getElseIfs() {\n        return this.elseIfs;\n    }\n    getElse() {\n        return this.elseNode;\n    }\n    accept(visitor) {\n        visitor.visitIf(this);\n    }\n}\nexport class ElseIfNode extends StatementNode {\n    constructor(location, expression, then) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    accept(visitor) {\n        visitor.visitElseIf(this);\n    }\n}\nexport class WhileNode extends StatementNode {\n    constructor(location, expression, body) {\n        super(location);\n        this.expression = expression;\n        this.body = body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitWhile(this);\n    }\n}\nexport class RepeatNode extends StatementNode {\n    constructor(location, body, expression) {\n        super(location);\n        this.body = body;\n        this.expression = expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitRepeat(this);\n    }\n}\nexport class ForNode extends StatementNode {\n    constructor(location, designator, expression, to, by, statements) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n        this.to = to;\n        this.by = by;\n        this.statements = statements;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getTo() {\n        return this.to;\n    }\n    getBy() {\n        return this.by;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitFor(this);\n    }\n}\nexport class ForeachNode extends StatementNode {\n    constructor(location, designators, of, body) {\n        super(location);\n        this.designators = designators;\n        this.of = of;\n        this.body = body;\n    }\n    getDesignators() {\n        return this.designators;\n    }\n    getOf() {\n        return this.of;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitForeach(this);\n    }\n}\nexport class StatementBlockNode extends StatementNode {\n    constructor(location, statements) {\n        super(location);\n        this.statements = statements;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementBlock(this);\n    }\n}\n//# sourceMappingURL=statement.js.map","import { Node } from './node';\nvar TypeTag;\n(function (TypeTag) {\n    TypeTag[TypeTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeTag || (TypeTag = {}));\nexport class TypeNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = TypeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitType(this);\n    }\n}\nexport class BasicTypeNode extends TypeNode {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n    accept(visitor) {\n        visitor.visitBasicType(this);\n    }\n}\nexport class AnyTypeNode extends TypeNode {\n    constructor(location, offered, required) {\n        super(location);\n        this.offered = offered;\n        this.required = required;\n    }\n    getOffered() {\n        return this.offered;\n    }\n    getRequired() {\n        return this.required;\n    }\n    accept(visitor) {\n        visitor.visitAnyType(this);\n    }\n}\n//# sourceMappingURL=type.js.map","import { Node } from './node';\nexport class StatementSequenceNode extends Node {\n    constructor(location, attributes, statements) {\n        super(location);\n        this.attributes = attributes;\n        this.statements = statements;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementSequence(this);\n    }\n}\n//# sourceMappingURL=statement-sequence.js.map","export var IdentifierKeywords;\n(function (IdentifierKeywords) {\n    IdentifierKeywords[\"New\"] = \"NEW\";\n    IdentifierKeywords[\"Conncet\"] = \"CONNECT\";\n    IdentifierKeywords[\"Disconnect\"] = \"DISCONNECT\";\n    IdentifierKeywords[\"Delete\"] = \"DELETE\";\n    IdentifierKeywords[\"Move\"] = \"MOVE\";\n    IdentifierKeywords[\"Await\"] = \"AWAIT\";\n    IdentifierKeywords[\"Input\"] = \"INPUT\";\n    IdentifierKeywords[\"Exists\"] = \"EXISTS\";\n})(IdentifierKeywords || (IdentifierKeywords = {}));\n//# sourceMappingURL=keywords.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class VariableNode extends Node {\n    constructor(location, names, type, attributes) {\n        super(location);\n        this.names = names;\n        this.type = type;\n        this.attributes = attributes;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitVariable(this);\n    }\n}\nexport class VariableListNode extends DeclarationNode {\n    constructor(location, variables) {\n        super(location);\n        this.variables = variables;\n    }\n    getVariables() {\n        return this.variables;\n    }\n    accept(visitor) {\n        visitor.visitVariableList(this);\n    }\n}\n//# sourceMappingURL=variable.js.map","import { ComponentNode } from './component';\nimport { ProcedureCallNode, AssignmentNode, NewNode, ConnectNode, DisconnectNode, SendNode, ReceiveNode, DeleteNode, MoveNode, AwaitNode, ReturnNode, IfNode, WhileNode, RepeatNode, ForNode, ForeachNode, StatementBlockNode, ElseIfNode, } from './statement';\nimport { InterfaceNode } from './interface';\nimport { AttributedExpressionNode, UnaryExpressionNode, BinaryExpressionNode, OffersRequiresExpressionNode, TypeCheckExpressionNode, } from './expression';\nimport { BasicTypeNode, AnyTypeNode } from './type';\nimport { ProcedureNode } from './procedure';\nimport { VariableListNode } from './variable';\nimport { BasicDesignatorNode, BasicExpressionDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, DesignatorNode, } from './designator';\nimport { FunctionCallNode, NumberNode, ConstantCharacterNode, TextNode, InputTestNode, ReceiveTestNode, ExistsTestNode, OperandNode, RealNumberNode, IntegerNumberNode, } from './operand';\nimport { UnaryFactorNode, FactorNode } from './factor';\nimport { TermNode, FactorChainNode, RightFactorNode } from './term';\nimport { TermChainNode, UnaryTermNode, SimpleExpressionNode } from './simple-expression';\nimport { OfferedInterfaceNode, RequiredInterfaceNode } from './interface-declaration';\nimport { MessageDeclarationNode, ProtocolFactorExpressionNode, GroupProtocolExpressionNode, RepeatingProtocolExpressionNode, OptionalProtocolExpressionNode, } from './protocol-factor';\nimport { ConstantListNode } from './constant';\nexport class Visitor {\n    visitProtocolFactor(node) {\n        if (node instanceof MessageDeclarationNode) {\n            this.visitMessageDeclaration(node);\n            return;\n        }\n        if (node instanceof ProtocolFactorExpressionNode) {\n            this.visitProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMessageDeclaration(_node) { }\n    visitProtocolFactorExpression(node) {\n        if (node instanceof OptionalProtocolExpressionNode) {\n            this.visitOptionalProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof RepeatingProtocolExpressionNode) {\n            this.visitRepeatingProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof GroupProtocolExpressionNode) {\n            this.visitGroupProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOptionalProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitGroupProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeatingProtocolFactorExpression(_node) { }\n    visitType(node) {\n        if (node instanceof BasicTypeNode) {\n            this.visitBasicType(node);\n            return;\n        }\n        if (node instanceof AnyTypeNode) {\n            this.visitAnyType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicType(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAnyType(_node) { }\n    visitDesignator(node) {\n        if (node instanceof BasicDesignatorNode) {\n            this.visitBasicDesignator(node);\n            return;\n        }\n        if (node instanceof BasicExpressionDesignatorNode) {\n            this.visitBasicExpressionDesignator(node);\n            return;\n        }\n        if (node instanceof BaseTargetDesignatorNode) {\n            this.visitBaseTargetDesignator(node);\n            return;\n        }\n        if (node instanceof DesignatorTypeNode) {\n            this.visitDesignatorType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicExpressionDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBaseTargetDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDesignatorType(_node) { }\n    visitInterfaceDeclaration(node) {\n        if (node instanceof OfferedInterfaceNode) {\n            this.visitOfferedInterface(node);\n            return;\n        }\n        if (node instanceof RequiredInterfaceNode) {\n            this.visitRequiredInterfface(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOfferedInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRequiredInterfface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIndexedName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitCardinality(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProgram(_node) { }\n    visitDeclaration(node) {\n        if (node instanceof ComponentNode) {\n            this.visitComponent(node);\n            return;\n        }\n        if (node instanceof InterfaceNode) {\n            this.visitInterface(node);\n            return;\n        }\n        if (node instanceof ConstantListNode) {\n            this.visitConstantList(node);\n            return;\n        }\n        if (node instanceof VariableListNode) {\n            this.visitVariableList(node);\n            return;\n        }\n        if (node instanceof ProcedureNode) {\n            this.visitProcedure(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponent(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariableList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedure(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponentBody(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitImplementation(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocol(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolTerm(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAttribute(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementSequence(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstant(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariable(_node) { }\n    visitStatement(node) {\n        if (node instanceof ProcedureCallNode) {\n            this.visitProcedureCall(node);\n            return;\n        }\n        if (node instanceof AssignmentNode) {\n            this.visitAssignment(node);\n            return;\n        }\n        if (node instanceof NewNode) {\n            this.visitNew(node);\n            return;\n        }\n        if (node instanceof ConnectNode) {\n            this.visitConnect(node);\n            return;\n        }\n        if (node instanceof DisconnectNode) {\n            this.visitDisconnect(node);\n            return;\n        }\n        if (node instanceof SendNode) {\n            this.visitSend(node);\n            return;\n        }\n        if (node instanceof ReceiveNode) {\n            this.visitReceive(node);\n            return;\n        }\n        if (node instanceof DeleteNode) {\n            this.visitDelete(node);\n            return;\n        }\n        if (node instanceof MoveNode) {\n            this.visitMove(node);\n            return;\n        }\n        if (node instanceof AwaitNode) {\n            this.visitAwait(node);\n            return;\n        }\n        if (node instanceof ReturnNode) {\n            this.visitReturn(node);\n            return;\n        }\n        if (node instanceof IfNode) {\n            this.visitIf(node);\n            return;\n        }\n        if (node instanceof ElseIfNode) {\n            this.visitElseIf(node);\n            return;\n        }\n        if (node instanceof WhileNode) {\n            this.visitWhile(node);\n            return;\n        }\n        if (node instanceof RepeatNode) {\n            this.visitRepeat(node);\n            return;\n        }\n        if (node instanceof ForNode) {\n            this.visitFor(node);\n            return;\n        }\n        if (node instanceof ForeachNode) {\n            this.visitForeach(node);\n            return;\n        }\n        if (node instanceof StatementBlockNode) {\n            this.visitStatementBlock(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureCall(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAssignment(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitNew(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDisconnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitSend(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceive(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDelete(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMove(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAwait(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReturn(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitElseIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitWhile(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeat(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitForeach(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementBlock(_node) { }\n    visitExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof AttributedExpressionNode) {\n            this.visitAttributedExpression(node);\n            return;\n        }\n    }\n    visitAttributedExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof UnaryExpressionNode) {\n            this.visitUnaryExpression(node);\n            return;\n        }\n        if (node instanceof BinaryExpressionNode) {\n            this.visitBinaryExpression(node);\n            return;\n        }\n        if (node instanceof OffersRequiresExpressionNode) {\n            this.visitOffersRequiresExpression(node);\n            return;\n        }\n        if (node instanceof TypeCheckExpressionNode) {\n            this.visitTypeCheck(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBinaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOffersRequiresExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTypeCheck(_node) { }\n    visitSimpleExpression(node) {\n        if (node instanceof UnaryTermNode) {\n            this.visitUnaryTermNode(node);\n            return;\n        }\n        if (node instanceof TermChainNode) {\n            this.visitTermChain(node);\n            return;\n        }\n        if (node instanceof TermNode) {\n            this.visitTerm(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryTermNode(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTermChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightTerm(_node) { }\n    visitTerm(node) {\n        if (node instanceof FactorNode) {\n            this.visitFactor(node);\n            return;\n        }\n        if (node instanceof FactorChainNode) {\n            this.visitFactorChain(node);\n            return;\n        }\n        if (node instanceof RightFactorNode) {\n            this.visitRightFactor(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFactorChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightFactor(_node) { }\n    visitFactor(node) {\n        if (node instanceof UnaryFactorNode) {\n            this.visitUnaryFactor(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof OperandNode) {\n            this.visitOperand(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryFactor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExpressionFactor(_node) { }\n    visitOperand(node) {\n        if (node instanceof NumberNode) {\n            this.visitNumber(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof TextNode) {\n            this.visitText(node);\n            return;\n        }\n        if (node instanceof ReceiveTestNode) {\n            this.visitReceiveTest(node);\n            return;\n        }\n        if (node instanceof InputTestNode) {\n            this.visitInputTest(node);\n            return;\n        }\n        if (node instanceof ExistsTestNode) {\n            this.visitExistsTest(node);\n            return;\n        }\n        if (node instanceof FunctionCallNode) {\n            this.visitFunctionCall(node);\n            return;\n        }\n        if (node instanceof DesignatorNode) {\n            this.visitDesignator(node);\n            return;\n        }\n    }\n    visitNumber(node) {\n        if (node instanceof IntegerNumberNode) {\n            this.visitIntegerNumber(node);\n            return;\n        }\n        if (node instanceof RealNumberNode) {\n            this.visitRealNumber(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIntegerNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRealNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantCharacter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitText(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceiveTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInputTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExistsTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFunctionCall(_node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ProgramNode, ComponentNode, OfferedInterfaceNode, RequiredInterfaceNode, ComponentBodyNode, ImplementationNode, InterfaceNode, NameNode, StatementSequenceNode, AttributeNode, ProcedureCallNode, TextNode, ProtocolNode, ProtocolExpressionNode, ProtocolTermNode, MessageDeclarationNode, MessageDirection, ParameterNode, GroupProtocolExpressionNode, CardinalityNode, OptionalProtocolExpressionNode, RepeatingProtocolExpressionNode, BasicTypeNode, ConstantListNode, VariableListNode, ProcedureNode, ConstantNode, ConstantExpressionNode, VariableNode, IndexedNameNode, ProcedureParameterNode, AnyTypeNode, DesignatorNode, BasicExpressionDesignatorNode, BasicDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, NewNode, ConnectNode, DisconnectNode, DeleteNode, AwaitNode, MoveNode, SendNode, ReceiveNode, AssignmentNode, IfNode, ForeachNode, StatementBlockNode, ReturnNode, WhileNode, RepeatNode, ForNode, ElseIfNode, ConstantCharacterNode, ExistsTestNode, InputTestNode, FunctionCallNode, FixedMessagePattern, ReceiveTestNode, UnaryFactorNode, FactorPrefix, ExpressionFactorNode, UnaryExpressionNode, UnaryTermNode, InfixFactorOperator, FactorChainNode, RightFactorNode, RightTermNode, InfixTermOperator, PrefixOperator, LogicalOperator, BinaryExpressionNode, TermChainNode, OffersRequiresExpressionNode, OffersRequiresOperator, TypeCheckExpressionNode, RealNumberNode, IntegerNumberNode, } from '../ast/ast';\nimport { FixToken, IdentifierToken, TextToken, Tag, IntegerNumberToken, FloatNumberToken, HexNumberToken, } from '../tokens/tokens';\nimport { SourceLocation } from '../source-location/location';\nimport { NonEmptyArray } from '@composita/ts-utility-types';\nimport { CompilerDiagnostic } from '../diagnosis/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nimport { IdentifierKeywords } from './keywords';\nexport class Parser {\n    constructor(diagnosis, lexer) {\n        this.diagnosis = diagnosis;\n        this.lexer = lexer;\n    }\n    hasTag(tag, n = 1) {\n        const token = this.lexer.peek(n);\n        return this.isTaggedFixToken(token, tag);\n    }\n    isTaggedFixToken(token, tag) {\n        return token instanceof FixToken && token.getTag() === tag;\n    }\n    hasIdentifier(identifier) {\n        const token = this.lexer.peek(1);\n        return token instanceof IdentifierToken && token.getIdentifier() === identifier;\n    }\n    isComponent() {\n        return this.hasTag(Tag.Component);\n    }\n    isInterface() {\n        return this.hasTag(Tag.Interface);\n    }\n    isEOT() {\n        return this.hasTag(Tag.EOT);\n    }\n    error(msg) {\n        const range = this.lexer.peek(1).getLocation().range;\n        this.diagnosis.log(new CompilerDiagnostic(range, DiagnosticSeverity.Error, msg));\n        throw new Error(`[${range.start.line},${range.start.character}:${range.end.line},${range.end.character}]: ${msg}`);\n    }\n    loop(predicate, body) {\n        while (predicate() && !this.isEOT()) {\n            body();\n        }\n    }\n    expectConsumeFixToken(tag) {\n        if (!this.tryConsumeFixToken(tag)) {\n            const msg = `Expected FixToken with Tag ${tag}`;\n            this.error(msg);\n        }\n    }\n    tryConsumeFixToken(tag) {\n        if (!this.hasTag(tag)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    expectConsumeIdentifierToken(identifier) {\n        if (!this.tryConsumeIdentifierToken(identifier)) {\n            const msg = `Expected IdentifierToken with Identifier ${identifier}`;\n            this.error(msg);\n        }\n    }\n    tryParse(parser) {\n        try {\n            this.diagnosis.saveState();\n            this.lexer.saveState();\n            const variable = parser();\n            this.lexer.popSaveState();\n            return variable;\n        }\n        catch (error) {\n            this.diagnosis.restoreState();\n            this.lexer.restoreState();\n            return undefined;\n        }\n    }\n    tryConsumeIdentifierToken(identifier) {\n        if (!this.hasIdentifier(identifier)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    parseName() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new NameNode(next.getLocation(), next.getIdentifier());\n        }\n        const msg = 'Failed to parse identifier name';\n        return this.error(msg);\n    }\n    parseIndexedName() {\n        const next = this.lexer.peek(1);\n        if (!(next instanceof IdentifierToken)) {\n            return this.error('Failed to parse indexed name.');\n        }\n        this.lexer.next();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const params = this.parseParameterList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new IndexedNameNode(SourceLocation.merge(next.getLocation(), end), next.getIdentifier(), params);\n        }\n        return new IndexedNameNode(next.getLocation(), next.getIdentifier(), new Array());\n    }\n    parseCardinality() {\n        if (!this.hasTag(Tag.OpenSquareBracket)) {\n            return undefined;\n        }\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.OpenSquareBracket);\n        let next = this.lexer.next();\n        if (!(next instanceof IntegerNumberToken)) {\n            return this.error('Expected number token.');\n        }\n        const min = next.getNumber();\n        let max = min;\n        if (this.tryConsumeFixToken(Tag.Ellipsis)) {\n            next = this.lexer.peek(1);\n            if (next instanceof IntegerNumberToken) {\n                this.lexer.next();\n                max = next.getNumber();\n            }\n            else if (this.hasTag(Tag.Asterisk)) {\n                this.lexer.next();\n                max = Infinity;\n            }\n            else {\n                this.error('Expected number or \"*\".');\n            }\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseSquareBracket);\n        return new CardinalityNode(SourceLocation.merge(start, end), min, max);\n    }\n    parseInterfaceDeclaration(InterfaceDeclaration) {\n        const name = this.parseName();\n        const cardinality = this.parseCardinality();\n        const location = cardinality === undefined\n            ? name.getLocation()\n            : SourceLocation.merge(name.getLocation(), cardinality.getLocation());\n        return new InterfaceDeclaration(location, name, cardinality);\n    }\n    parseOfferedInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(OfferedInterfaceNode);\n    }\n    parseRequiredInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(RequiredInterfaceNode);\n    }\n    parseOffers() {\n        const offered = new Array();\n        if (this.tryConsumeFixToken(Tag.Offers)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n        }\n        return offered;\n    }\n    parseRequires() {\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.Requires)) {\n            required.push(...this.parseRequiredInterfaceDeclarationList());\n        }\n        return required;\n    }\n    parseFunctionCall() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const args = new Array();\n        if (!this.hasTag(Tag.CloseParentheses)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new FunctionCallNode(SourceLocation.merge(name.getLocation(), end), name, args);\n    }\n    parseMessagePattern() {\n        if (this.tryConsumeFixToken(Tag.Any)) {\n            return FixedMessagePattern.Any;\n        }\n        if (this.tryConsumeFixToken(Tag.Finish)) {\n            return FixedMessagePattern.Finish;\n        }\n        return this.parseName();\n    }\n    tryParseExpression() {\n        return this.tryParse(this.parseExpression.bind(this));\n    }\n    parseReceiveTestExpression(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const end = this.lexer.peek(1).getLocation();\n        const pattern = this.parseMessagePattern();\n        return new ReceiveTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseInputTestExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Input);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        if (!this.hasTag(Tag.Comma)) {\n            if (designator instanceof BasicDesignatorNode) {\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new InputTestNode(SourceLocation.merge(start, end), undefined, designator.getName());\n            }\n            this.error('Failed parsing input test node.');\n        }\n        this.expectConsumeFixToken(Tag.Comma);\n        const pattern = this.parseMessagePattern();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new InputTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseExistsExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Exists);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ExistsTestNode(SourceLocation.merge(start, end), designator);\n    }\n    parseOperand() {\n        const token = this.lexer.peek(1);\n        if (token instanceof TextToken) {\n            this.lexer.next();\n            const text = token.getText();\n            if (text.length === 1) {\n                return new ConstantCharacterNode(token.getLocation(), text);\n            }\n            return new TextNode(token.getLocation(), text);\n        }\n        if (token instanceof IntegerNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof HexNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof FloatNumberToken) {\n            this.lexer.next();\n            return new RealNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Input)) {\n            return this.parseInputTestExpression();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Exists)) {\n            return this.parseExistsExpression();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveTestExpression(designator);\n        }\n        if (designator === undefined) {\n            return this.parseFunctionCall();\n        }\n        // we could still have a function call here, let this the checker handle.\n        return designator;\n    }\n    parseFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.tryConsumeFixToken(Tag.Tilde)) {\n            const node = this.parseFactor();\n            return new UnaryFactorNode(SourceLocation.merge(start, node.getLocation()), FactorPrefix.Not, node);\n        }\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const expression = this.parseExpression();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new ExpressionFactorNode(SourceLocation.merge(start, end), expression);\n        }\n        return this.parseOperand();\n    }\n    isFactorInfix() {\n        return (this.hasTag(Tag.Asterisk) ||\n            this.hasTag(Tag.Slash) ||\n            this.hasTag(Tag.Div) ||\n            this.hasTag(Tag.Mod) ||\n            this.hasTag(Tag.And));\n    }\n    parseFactorInfix() {\n        if (this.tryConsumeFixToken(Tag.Asterisk)) {\n            return InfixFactorOperator.Times;\n        }\n        if (this.tryConsumeFixToken(Tag.Slash)) {\n            return InfixFactorOperator.Div;\n        }\n        if (this.tryConsumeFixToken(Tag.Div)) {\n            return InfixFactorOperator.DivText;\n        }\n        if (this.tryConsumeFixToken(Tag.Mod)) {\n            return InfixFactorOperator.ModText;\n        }\n        if (this.tryConsumeFixToken(Tag.And)) {\n            return InfixFactorOperator.AndText;\n        }\n        return this.error('Failed to parse factor infix.');\n    }\n    parseRightFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseFactorInfix();\n        const rightFactor = this.parseFactor();\n        return new RightFactorNode(SourceLocation.merge(start, rightFactor.getLocation()), op, rightFactor);\n    }\n    parseTerm() {\n        const factor = this.parseFactor();\n        if (!this.isFactorInfix()) {\n            return factor;\n        }\n        const rightFactors = this.parseListWithPredicate(this.parseRightFactor.bind(this), this.isFactorInfix.bind(this));\n        return new FactorChainNode(SourceLocation.merge(factor.getLocation(), rightFactors[rightFactors.length - 1].getLocation()), factor, rightFactors);\n    }\n    isTermInfix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus) || this.hasTag(Tag.Or);\n    }\n    parseTermInfix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return InfixTermOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return InfixTermOperator.Minus;\n        }\n        if (this.tryConsumeFixToken(Tag.Or)) {\n            return InfixTermOperator.Or;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseRightTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseTermInfix();\n        const rightTerm = this.parseTerm();\n        return new RightTermNode(SourceLocation.merge(start, rightTerm.getLocation()), op, rightTerm);\n    }\n    isTermPrefix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus);\n    }\n    parseUnaryPrefix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return PrefixOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return PrefixOperator.Minus;\n        }\n        return this.error('Failed to parse prefix operator.');\n    }\n    parseUnaryTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseUnaryPrefix();\n        const term = this.parseTerm();\n        return new UnaryTermNode(SourceLocation.merge(start, term.getLocation()), op, term);\n    }\n    parseSimpleExpression() {\n        const left = this.isTermPrefix() ? this.parseUnaryTerm() : this.parseTerm();\n        if (!this.isTermInfix()) {\n            return left;\n        }\n        const rightTerms = this.parseListWithPredicate(this.parseRightTerm.bind(this), this.isTermInfix.bind(this));\n        return new TermChainNode(SourceLocation.merge(left.getLocation(), rightTerms[rightTerms.length - 1].getLocation()), left, rightTerms);\n    }\n    isBinaryExpressionOperator() {\n        return (this.hasTag(Tag.Equal) ||\n            this.hasTag(Tag.NumberSign) ||\n            this.hasTag(Tag.Less) ||\n            this.hasTag(Tag.LessEqual) ||\n            this.hasTag(Tag.Greater) ||\n            this.hasTag(Tag.GreaterEqual));\n    }\n    parseBinaryExpressionOperator() {\n        if (this.tryConsumeFixToken(Tag.Equal)) {\n            return LogicalOperator.Equal;\n        }\n        if (this.tryConsumeFixToken(Tag.NumberSign)) {\n            return LogicalOperator.NotEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Less)) {\n            return LogicalOperator.Less;\n        }\n        if (this.tryConsumeFixToken(Tag.LessEqual)) {\n            return LogicalOperator.LessEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Greater)) {\n            return LogicalOperator.More;\n        }\n        if (this.tryConsumeFixToken(Tag.GreaterEqual)) {\n            return LogicalOperator.MoreEqual;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseBinaryExpression(start, attributes, left) {\n        const op = this.parseBinaryExpressionOperator();\n        const right = this.parseSimpleExpression();\n        return new BinaryExpressionNode(SourceLocation.merge(start, right.getLocation()), attributes, left, op, right);\n    }\n    parseExpression() {\n        const attributes = this.parseAttributeList();\n        const simpleExpression = this.parseSimpleExpression();\n        if (simpleExpression instanceof DesignatorNode) {\n            const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n            if (this.tryConsumeFixToken(Tag.Offers)) {\n                const offeredList = this.parseOfferedInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, offeredList[offeredList.length - 1].getLocation()), attributes, simpleExpression, OffersRequiresOperator.Offers, offeredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Requires)) {\n                const requiredList = this.parseRequiredInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, requiredList[requiredList.length - 1].getLocation()), attributes, simpleExpression, OffersRequiresOperator.Requires, requiredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Is)) {\n                const type = this.parseType();\n                return new TypeCheckExpressionNode(SourceLocation.merge(start, type.getLocation()), attributes, simpleExpression, type);\n            }\n            if (this.isBinaryExpressionOperator()) {\n                return this.parseBinaryExpression(start, attributes, simpleExpression);\n            }\n            return simpleExpression;\n        }\n        const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n        if (!this.isBinaryExpressionOperator()) {\n            return new UnaryExpressionNode(SourceLocation.merge(start, simpleExpression.getLocation()), attributes, simpleExpression);\n        }\n        return this.parseBinaryExpression(start, attributes, simpleExpression);\n    }\n    parseProcedureCall() {\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ProcedureCallNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n    }\n    parseStatementSequenceBlock(tag) {\n        let statements = undefined;\n        if (this.hasTag(tag)) {\n            const beginStart = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(tag);\n            statements = this.parseStatementSequence(beginStart);\n        }\n        return statements;\n    }\n    parseBasicDesignator() {\n        const name = this.parseName();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const expressions = this.parseExpressionList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new BasicExpressionDesignatorNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n        }\n        return new BasicDesignatorNode(name.getLocation(), name);\n    }\n    parseDesignator() {\n        const designator = this.parseBasicDesignator();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            // if ANY we assume type otherwise designator.\n            // see original CCParser implementation\n            if (this.hasTag(Tag.Any)) {\n                const type = this.parseType();\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new DesignatorTypeNode(SourceLocation.merge(designator.getLocation(), end), designator, type);\n            }\n            const target = this.parseDesignator();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new BaseTargetDesignatorNode(SourceLocation.merge(designator.getLocation(), end), designator, target);\n        }\n        return designator;\n    }\n    tryParseDesignator() {\n        return this.tryParse(this.parseDesignator.bind(this));\n    }\n    parseStatementSequence(start) {\n        const attributes = this.parseAttributeList();\n        const statements = this.parseStatementList();\n        const end = statements[statements.length - 1].getLocation();\n        return new StatementSequenceNode(SourceLocation.merge(start, end), attributes, statements);\n    }\n    parseNewStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.New);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const args = new Array();\n        if (this.tryConsumeFixToken(Tag.Comma)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new NewNode(SourceLocation.merge(start, end), designator, args);\n    }\n    parseDeleteStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Delete);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DeleteNode(SourceLocation.merge(start, end), designator);\n    }\n    parseConnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Conncet);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ConnectNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseDisconnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Disconnect);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DisconnectNode(SourceLocation.merge(start, end), designator);\n    }\n    parseMoveStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Move);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new MoveNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseAwaitStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Await);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const expression = this.parseExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new AwaitNode(SourceLocation.merge(start, end), expression);\n    }\n    parseSendStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.ExclamationMark);\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new SendNode(SourceLocation.merge(start, end), designator, name, expressions);\n    }\n    parseReceiveStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const name = this.parseName();\n        const designators = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            designators.push(...this.parseDesignatorList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ReceiveNode(SourceLocation.merge(start, end), designator, name, designators);\n    }\n    parseAssignmentStatement(designator) {\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const expression = this.parseExpression();\n        return new AssignmentNode(SourceLocation.merge(designator.getLocation(), expression.getLocation()), designator, expression);\n    }\n    parseReturnStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Return);\n        const expression = this.tryParseExpression();\n        return new ReturnNode(SourceLocation.merge(start, expression?.getLocation() ?? start), expression);\n    }\n    parseIfStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.If);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Then);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const elsIfs = new Array();\n        this.loop(() => this.hasTag(Tag.Elsif), () => {\n            const start = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.Elsif);\n            const expression = this.parseExpression();\n            this.expectConsumeFixToken(Tag.Then);\n            const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n            elsIfs.push(new ElseIfNode(SourceLocation.merge(start, sequence.getLocation()), expression, sequence));\n        });\n        let elseSequence = undefined;\n        if (this.tryConsumeFixToken(Tag.Else)) {\n            elseSequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new IfNode(SourceLocation.merge(start, end), expression, sequence, elsIfs, elseSequence);\n    }\n    parseWhileStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.While);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new WhileNode(SourceLocation.merge(start, end), expression, sequence);\n    }\n    parseRepeatStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Repeat);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        this.expectConsumeFixToken(Tag.Until);\n        const expression = this.parseExpression();\n        return new RepeatNode(SourceLocation.merge(start, expression.getLocation()), sequence, expression);\n    }\n    parseForStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.For);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const assignExpression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.To);\n        const expression = this.parseExpression();\n        let stride = undefined;\n        if (this.tryConsumeFixToken(Tag.By)) {\n            stride = this.parseConstantExpression();\n        }\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForNode(SourceLocation.merge(start, end), designator, assignExpression, expression, stride, sequence);\n    }\n    parseForeachStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Foreach);\n        const designators = this.parseDesignatorList();\n        this.expectConsumeFixToken(Tag.Of);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForeachNode(SourceLocation.merge(start, end), designators, designator, sequence);\n    }\n    parseStatementBlock() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Begin);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new StatementBlockNode(SourceLocation.merge(start, end), sequence);\n    }\n    parseStatement() {\n        if (this.hasIdentifier(IdentifierKeywords.New)) {\n            return this.parseNewStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Delete)) {\n            return this.parseDeleteStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Conncet)) {\n            return this.parseConnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Disconnect)) {\n            return this.parseDisconnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Move)) {\n            return this.parseMoveStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Await)) {\n            return this.parseAwaitStatement();\n        }\n        if (this.hasTag(Tag.Return)) {\n            return this.parseReturnStatement();\n        }\n        if (this.hasTag(Tag.If)) {\n            return this.parseIfStatement();\n        }\n        if (this.hasTag(Tag.While)) {\n            return this.parseWhileStatement();\n        }\n        if (this.hasTag(Tag.Repeat)) {\n            return this.parseRepeatStatement();\n        }\n        if (this.hasTag(Tag.For)) {\n            return this.parseForStatement();\n        }\n        if (this.hasTag(Tag.Foreach)) {\n            return this.parseForeachStatement();\n        }\n        if (this.hasTag(Tag.Begin)) {\n            return this.parseStatementBlock();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.ExclamationMark)) {\n            return this.parseSendStatement(designator);\n        }\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveStatement(designator);\n        }\n        if (designator === undefined) {\n            return this.parseProcedureCall();\n        }\n        if (this.hasTag(Tag.ColonEqual)) {\n            return this.parseAssignmentStatement(designator);\n        }\n        if (designator instanceof BasicDesignatorNode) {\n            return new ProcedureCallNode(designator.getLocation(), designator.getName(), new Array());\n        }\n        if (designator instanceof BaseTargetDesignatorNode) {\n            const base = designator.getBase();\n            if (base instanceof BasicDesignatorNode) {\n                return new ProcedureCallNode(designator.getLocation(), base.getName(), new Array(designator.getTarget()));\n            }\n        }\n        return this.error('Failed to parse statement. Unknown statement.');\n    }\n    parseConstantExpression() {\n        const expression = this.parseExpression();\n        return new ConstantExpressionNode(expression.getLocation(), expression);\n    }\n    parseConstant() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Equal);\n        const expression = this.parseConstantExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new ConstantNode(SourceLocation.merge(name.getLocation(), end), name, expression);\n    }\n    tryParseConstant() {\n        return this.tryParse(this.parseConstant.bind(this));\n    }\n    parseConstantList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Constant);\n        const constants = new NonEmptyArray(this.parseConstant());\n        let parsedConstant = true;\n        this.loop(() => parsedConstant, () => {\n            const constant = this.tryParseConstant();\n            if (constant === undefined) {\n                parsedConstant = false;\n                return;\n            }\n            constants.push(constant);\n        });\n        return new ConstantListNode(SourceLocation.merge(start, constants[constants.length - 1].getLocation()), constants);\n    }\n    parseVariable() {\n        const start = this.lexer.peek(1).getLocation();\n        const names = this.parseIndexedIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        const attributes = this.parseAttributeList();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new VariableNode(SourceLocation.merge(start, end), names, type, attributes);\n    }\n    tryParseVariable() {\n        return this.tryParse(this.parseVariable.bind(this));\n    }\n    parseVariableList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Variable);\n        const variables = new NonEmptyArray(this.parseVariable());\n        let parsedVariable = true;\n        this.loop(() => parsedVariable, () => {\n            const variable = this.tryParseVariable();\n            if (variable === undefined) {\n                parsedVariable = false;\n                return;\n            }\n            variables.push(variable);\n        });\n        return new VariableListNode(SourceLocation.merge(start, variables[variables.length - 1].getLocation()), variables);\n    }\n    parseProcedure() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Procedure);\n        const name = this.parseName();\n        const params = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            if (!this.hasTag(Tag.CloseParentheses)) {\n                params.push(...this.parseProcedureParameterList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        const type = this.tryConsumeFixToken(Tag.Colon) ? this.parseType() : undefined;\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = new Array();\n        let beginBlock = undefined;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (beginBlock === undefined) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                return;\n            }\n            breakLoop = true;\n        });\n        const end = this.consumeEnd(name);\n        return new ProcedureNode(SourceLocation.merge(start, end), name, params, type, declarations, beginBlock);\n    }\n    parseDeclaration() {\n        if (this.hasTag(Tag.Component)) {\n            return this.parseComponent();\n        }\n        if (this.hasTag(Tag.Interface)) {\n            return this.parseInterface();\n        }\n        if (this.hasTag(Tag.Constant)) {\n            return this.parseConstantList();\n        }\n        if (this.hasTag(Tag.Variable)) {\n            return this.parseVariableList();\n        }\n        if (this.hasTag(Tag.Procedure)) {\n            return this.parseProcedure();\n        }\n        return undefined;\n    }\n    parseComponentBody() {\n        const start = this.lexer.peek(1).getLocation();\n        let beginBlock = undefined;\n        let activityBlock = undefined;\n        let finallyBlock = undefined;\n        const declarations = new Array();\n        const implementations = new Array();\n        let end = start;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                implementations.push(this.parseImplementation());\n                return;\n            }\n            if (beginBlock !== undefined && this.hasTag(Tag.Begin)) {\n                this.error('Cannot have more than one begin per component.');\n            }\n            if (beginBlock === undefined && this.hasTag(Tag.Begin)) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                if (beginBlock !== undefined) {\n                    end = beginBlock.getLocation();\n                }\n                return;\n            }\n            if (activityBlock !== undefined && this.hasTag(Tag.Activity)) {\n                this.error('Cannot have more than one activity per component.');\n            }\n            if (activityBlock === undefined && this.hasTag(Tag.Activity)) {\n                activityBlock = this.parseStatementSequenceBlock(Tag.Activity);\n                if (activityBlock !== undefined) {\n                    end = activityBlock.getLocation();\n                }\n                return;\n            }\n            if (finallyBlock !== undefined && this.hasTag(Tag.Finally)) {\n                this.error('Cannot have more than one finally per component.');\n            }\n            if (finallyBlock === undefined && this.hasTag(Tag.Finally)) {\n                finallyBlock = this.parseStatementSequenceBlock(Tag.Finally);\n                if (finallyBlock !== undefined) {\n                    end = finallyBlock.getLocation();\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Component)) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    declarations.push(component);\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                const implementation = this.parseImplementation();\n                if (implementation !== undefined) {\n                    implementations.push(implementation);\n                }\n                return;\n            }\n            breakLoop = true;\n        });\n        return new ComponentBodyNode(SourceLocation.merge(start, end), declarations, implementations, beginBlock, activityBlock, finallyBlock);\n    }\n    consumeEnd(name) {\n        this.expectConsumeFixToken(Tag.End);\n        const endName = this.parseName();\n        if (endName.getName() !== name.getName()) {\n            this.error('Name missmatch.');\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return end;\n    }\n    parseComponent() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Component);\n        const attributes = this.parseAttributeList();\n        const name = this.parseName();\n        const offers = this.parseOffers();\n        const requires = this.parseRequires();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const body = this.parseComponentBody();\n        const end = this.consumeEnd(name);\n        return new ComponentNode(SourceLocation.merge(start, end), name, attributes, offers, requires, body);\n    }\n    parseImplementation() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Implementation);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = this.parseDeclarationList();\n        const statements = this.parseStatementSequenceBlock(Tag.Begin);\n        const end = this.consumeEnd(name);\n        return new ImplementationNode(SourceLocation.merge(start, end), name, declarations, statements);\n    }\n    parseListWithPredicate(parseFunction, pred) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => pred(), () => {\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseList(parseFunction, separator) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => this.hasTag(separator), () => {\n            this.expectConsumeFixToken(separator);\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseIdentifierList() {\n        return this.parseList(this.parseName.bind(this), Tag.Comma);\n    }\n    parseParameterList() {\n        return this.parseList(this.parseParameter.bind(this), Tag.Semicolon);\n    }\n    parseProcedureParameterList() {\n        return this.parseList(this.parseProcedureParameter.bind(this), Tag.Semicolon);\n    }\n    parseIndexedIdentifierList() {\n        return this.parseList(this.parseIndexedName.bind(this), Tag.Comma);\n    }\n    parseExpressionList() {\n        return this.parseList(this.parseExpression.bind(this), Tag.Comma);\n    }\n    parseDesignatorList() {\n        return this.parseList(this.parseDesignator.bind(this), Tag.Comma);\n    }\n    parseOfferedInterfaceDeclarationList() {\n        return this.parseList(this.parseOfferedInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseRequiredInterfaceDeclarationList() {\n        return this.parseList(this.parseRequiredInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseStatementList() {\n        return this.parseList(this.parseStatement.bind(this), Tag.Semicolon);\n    }\n    parseAttributeList() {\n        if (!this.hasTag(Tag.OpenBrace)) {\n            return new Array();\n        }\n        this.expectConsumeFixToken(Tag.OpenBrace);\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.CloseBrace);\n        return names.map((name) => new AttributeNode(name.getLocation(), name));\n    }\n    parseDeclarationList() {\n        const declarations = new Array();\n        let foundDeclaration = true;\n        this.loop(() => foundDeclaration, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration === undefined) {\n                foundDeclaration = false;\n                return;\n            }\n            declarations.push(declaration);\n        });\n        return declarations;\n    }\n    parseType() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new BasicTypeNode(next.getLocation(), next.getIdentifier());\n        }\n        this.expectConsumeFixToken(Tag.Any);\n        const offered = new Array();\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n            if (this.tryConsumeFixToken(Tag.Pipe)) {\n                required.push(...this.parseRequiredInterfaceDeclarationList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new AnyTypeNode(next.getLocation(), offered, required);\n    }\n    parseParameter() {\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        return new ParameterNode(SourceLocation.merge(names[0].getLocation(), type.getLocation()), names, type);\n    }\n    parseProcedureParameter() {\n        const mutable = this.hasTag(Tag.Variable);\n        const start = this.lexer.peek(1).getLocation();\n        if (mutable) {\n            this.expectConsumeFixToken(Tag.Variable);\n        }\n        const param = this.parseParameter();\n        return new ProcedureParameterNode(SourceLocation.merge(start, param.getLocation()), mutable, param);\n    }\n    parseMessageParameters() {\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const params = this.parseParameterList();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return params;\n        }\n        return new Array();\n    }\n    parseMessageDeclaration() {\n        const start = this.lexer.peek(1).getLocation();\n        let direction = undefined;\n        if (this.tryConsumeFixToken(Tag.In)) {\n            direction = MessageDirection.IN;\n        }\n        if (this.tryConsumeFixToken(Tag.Out)) {\n            direction = MessageDirection.OUT;\n        }\n        if (direction === undefined) {\n            return this.error('Message declarations must have a direction.');\n        }\n        const name = this.parseName();\n        const params = this.parseMessageParameters();\n        return new MessageDeclarationNode(start, direction, name, params);\n    }\n    parseProtocolTermExpression(TermExpression, startTag, endTag) {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(startTag);\n        const expression = this.parseProtocolExpression();\n        if (expression !== undefined) {\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(endTag);\n            return new TermExpression(SourceLocation.merge(start, end), expression);\n        }\n        return this.error('Failed to parse protocol term expression.');\n    }\n    parseProtocolTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const factors = new Array();\n        this.loop(() => this.hasTag(Tag.In) ||\n            this.hasTag(Tag.Out) ||\n            this.hasTag(Tag.OpenSquareBracket) ||\n            this.hasTag(Tag.OpenParentheses) ||\n            this.hasTag(Tag.OpenBrace), () => {\n            if (this.hasTag(Tag.In) || this.hasTag(Tag.Out)) {\n                factors.push(this.parseMessageDeclaration());\n                return;\n            }\n            if (this.hasTag(Tag.OpenSquareBracket)) {\n                const factor = this.parseProtocolTermExpression(OptionalProtocolExpressionNode, Tag.OpenSquareBracket, Tag.CloseSquareBracket);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenParentheses)) {\n                const factor = this.parseProtocolTermExpression(GroupProtocolExpressionNode, Tag.OpenParentheses, Tag.CloseParentheses);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenBrace)) {\n                const factor = this.parseProtocolTermExpression(RepeatingProtocolExpressionNode, Tag.OpenBrace, Tag.CloseBrace);\n                factors.push(factor);\n                return;\n            }\n        });\n        const termFactors = NonEmptyArray.fromArray(factors);\n        if (termFactors === undefined) {\n            return this.error('At least one term factor needed.');\n        }\n        return new ProtocolTermNode(start, termFactors);\n    }\n    parseProtocolExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.hasTag(Tag.End)) {\n            return undefined;\n        }\n        const terms = new NonEmptyArray(this.parseProtocolTerm());\n        this.loop(() => this.hasTag(Tag.Pipe), () => {\n            this.expectConsumeFixToken(Tag.Pipe);\n            terms.push(this.parseProtocolTerm());\n        });\n        return new ProtocolExpressionNode(start, terms);\n    }\n    parseProtocol() {\n        const start = this.lexer.peek(1).getLocation();\n        const expression = this.parseProtocolExpression();\n        return new ProtocolNode(expression === undefined ? start : SourceLocation.merge(start, expression.getLocation()), expression);\n    }\n    parseInterface() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Interface);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const protocol = this.parseProtocol();\n        const end = this.consumeEnd(name);\n        return new InterfaceNode(SourceLocation.merge(start, end), name, protocol);\n    }\n    parse() {\n        const start = this.lexer.peek(1).getLocation();\n        const components = new Array();\n        const interfaces = new Array();\n        let breakLoop = false;\n        this.loop(() => !breakLoop, () => {\n            if (this.isComponent()) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    components.push(component);\n                }\n                return;\n            }\n            if (this.isInterface()) {\n                const interfaceDeclaration = this.parseInterface();\n                if (interfaceDeclaration !== undefined) {\n                    interfaces.push(interfaceDeclaration);\n                }\n                return;\n            }\n            this.error('Invalid top level node.');\n            breakLoop = true;\n        });\n        const end = this.lexer.peek(1).getLocation();\n        return new ProgramNode(SourceLocation.merge(start, end), components, interfaces);\n    }\n}\n//# sourceMappingURL=parser.js.map","var GlobalScopeSymbolTag;\n(function (GlobalScopeSymbolTag) {\n    GlobalScopeSymbolTag[GlobalScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GlobalScopeSymbolTag || (GlobalScopeSymbolTag = {}));\nexport class GlobalScopeSymbol {\n    constructor() {\n        this._globalScopeSymbolTag = GlobalScopeSymbolTag.Tag;\n    }\n}\nexport class ScopedSymbol {\n    constructor(scope) {\n        this.scope = scope;\n    }\n}\nexport class ProgramScopeSymbol extends ScopedSymbol {\n    constructor(scope, name) {\n        super(scope);\n        this.name = name;\n    }\n}\nexport class NamedScopeSymbol extends ScopedSymbol {\n    constructor(scope, identifier) {\n        super(scope);\n        this.identifier = identifier;\n    }\n}\nvar BlockScopeSymbolTag;\n(function (BlockScopeSymbolTag) {\n    BlockScopeSymbolTag[BlockScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BlockScopeSymbolTag || (BlockScopeSymbolTag = {}));\nexport class BlockScopeSymbol extends ScopedSymbol {\n    constructor() {\n        super(...arguments);\n        this._blockScopeSymbolTag = BlockScopeSymbolTag.Tag;\n    }\n}\nexport class ImplementationSymbol extends ScopedSymbol {\n    constructor(scope, interfaceSymbol) {\n        super(scope);\n        this.interfaceSymbol = interfaceSymbol;\n    }\n}\n//# sourceMappingURL=scope-symbols.js.map","import { NamedScopeSymbol } from './scope-symbols';\nvar TypeSymbolTag;\n(function (TypeSymbolTag) {\n    TypeSymbolTag[TypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeSymbolTag || (TypeSymbolTag = {}));\nexport class TypeSymbol extends NamedScopeSymbol {\n    constructor() {\n        super(...arguments);\n        this._typeSymbolTag = TypeSymbolTag.Tag;\n    }\n}\nexport class ConstantSymbol {\n    constructor(identifier, type) {\n        this.identifier = identifier;\n        this.type = type;\n    }\n}\nexport class ProcedureSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters, returnType) {\n        super(scope, identifier);\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n}\nvar BuiltInTypeSymbolTag;\n(function (BuiltInTypeSymbolTag) {\n    BuiltInTypeSymbolTag[BuiltInTypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BuiltInTypeSymbolTag || (BuiltInTypeSymbolTag = {}));\nexport class BuiltInTypeSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._builtInTypeSymbol = BuiltInTypeSymbolTag.Tag;\n    }\n}\nvar InterfaceSymbolTag;\n(function (InterfaceSymbolTag) {\n    InterfaceSymbolTag[InterfaceSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(InterfaceSymbolTag || (InterfaceSymbolTag = {}));\nexport class InterfaceSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._interfaceSymbolTag = InterfaceSymbolTag.Tag;\n        // TODO add protocol here.\n    }\n}\nvar ComponentSymbolTag;\n(function (ComponentSymbolTag) {\n    ComponentSymbolTag[ComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(ComponentSymbolTag || (ComponentSymbolTag = {}));\nexport class ComponentSymbol extends TypeSymbol {\n    constructor(scope, identifier, genericType, isEntryPoint) {\n        super(scope, identifier);\n        this.genericType = genericType;\n        this.isEntryPoint = isEntryPoint;\n        this._componentSymbolTag = ComponentSymbolTag.Tag;\n    }\n}\nvar GenericComponentSymbolTag;\n(function (GenericComponentSymbolTag) {\n    GenericComponentSymbolTag[GenericComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GenericComponentSymbolTag || (GenericComponentSymbolTag = {}));\nexport class GenericComponentSymbol extends ComponentSymbol {\n    constructor(scope, genericType) {\n        super(scope, '@@@__ANY__GENERIC_COMPONENT__@@@', genericType, false);\n        this._genericComponentSymbolTag = GenericComponentSymbolTag.Tag;\n    }\n}\nexport class MessageSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters) {\n        super(scope, identifier);\n        this.parameters = parameters;\n    }\n}\n//# sourceMappingURL=type-symbols.js.map","import { BooleanDescriptor, CharacterDescriptor, FloatDescriptor, Instruction, IntegerDescriptor, JumpDescriptor, OperationCode, SystemCallDescriptor, TextDescriptor, } from '@composita/il';\nvar LabelTag;\n(function (LabelTag) {\n    LabelTag[LabelTag[\"Tag\"] = 0] = \"Tag\";\n})(LabelTag || (LabelTag = {}));\nexport class Label {\n    constructor() {\n        this._labelTag = LabelTag.Tag;\n    }\n}\nexport class ILAssembler {\n    constructor() {\n        this.targets = new Map();\n        this.origins = new Map();\n        this.code = new Array();\n    }\n    complete() {\n        this.fixLabels();\n        return this.code;\n    }\n    createLabel() {\n        return new Label();\n    }\n    setLabel(label) {\n        this.targets.set(label, this.code.length);\n    }\n    fixLabels() {\n        this.origins.forEach((origins, label) => {\n            const target = this.targets.get(label);\n            if (target === undefined) {\n                throw new Error('Cannot branch to unknown label.');\n            }\n            origins.forEach((origin) => {\n                const instruction = this.code[origin - 1];\n                if (instruction.code !== OperationCode.Branch &&\n                    instruction.code !== OperationCode.BranchFalse &&\n                    instruction.code !== OperationCode.BranchTrue) {\n                    throw new Error('Not a jump instruction: ' + instruction.code + ', target: ' + target + ', origin: ' + origin);\n                }\n                this.code[origin - 1].arguments.push(new JumpDescriptor(target - origin));\n            });\n        });\n    }\n    emitLoadInteger(n) {\n        this.emit(OperationCode.LoadConstantInteger, new IntegerDescriptor(n));\n    }\n    emitLoadFloat(n) {\n        this.emit(OperationCode.LoadConstantFloat, new FloatDescriptor(n));\n    }\n    emitLoadCharacter(n) {\n        this.emit(OperationCode.LoadConstantCharacter, new CharacterDescriptor(n));\n    }\n    emitLoadText(n) {\n        this.emit(OperationCode.LoadConstantText, new TextDescriptor(n));\n    }\n    emitLoadBoolean(n) {\n        this.emit(OperationCode.LoadConstantBoolean, new BooleanDescriptor(n));\n    }\n    emitJump(opCode, label) {\n        this.emit(opCode);\n        if (!this.origins.has(label)) {\n            this.origins.set(label, new Array());\n        }\n        this.origins.get(label)?.push(this.code.length);\n    }\n    emitBranch(label) {\n        this.emitJump(OperationCode.Branch, label);\n    }\n    emitBranchFalse(label) {\n        this.emitJump(OperationCode.BranchFalse, label);\n    }\n    emitBranchTrue(label) {\n        this.emitJump(OperationCode.BranchTrue, label);\n    }\n    emitSystemCall(sysCall, numberOfArguments) {\n        const descriptor = new SystemCallDescriptor(sysCall);\n        descriptor.arguments.push(new IntegerDescriptor(numberOfArguments));\n        this.emit(OperationCode.SystemCall, descriptor);\n    }\n    emit(opCode, ...args) {\n        this.code.push(new Instruction(opCode, ...args));\n    }\n}\n//# sourceMappingURL=il-assembler.js.map","export class InterfaceDeclarationSymbol {\n    constructor(interfaceSymbol, cardinality) {\n        this.interfaceSymbol = interfaceSymbol;\n        this.cardinality = cardinality;\n    }\n}\nexport class CardinalitySymbol {\n    constructor(min, max = min) {\n        this.min = min;\n        this.max = max;\n        if (min < 1) {\n            throw new Error('cardinality must be greater 0');\n        }\n        if (max !== undefined && max < min) {\n            throw new Error(`min ${min} must be greater than max ${max}`);\n        }\n    }\n    unlimited() {\n        return this.max === Infinity;\n    }\n}\nexport class GenericSymbol {\n    constructor(offered, required) {\n        this.offered = offered;\n        this.required = required;\n        GenericSymbol.validate(this.offered, 'Offered interface defined multiple times.');\n        GenericSymbol.validate(this.required, 'Required interface defined multiple times.');\n    }\n    static validate(data, msg) {\n        const uniqueNames = new Array(...new Set(data.map((offer) => offer.interfaceSymbol.identifier)));\n        if (uniqueNames.length !== data.length) {\n            throw new Error(msg);\n        }\n    }\n    static matchInterfaceDeclarations(genericAInterfaces, genericBInterfaces, minCompare, maxCompare) {\n        return (genericAInterfaces.filter((genericAInterface) => genericBInterfaces.find((genericBInterface) => genericAInterface.interfaceSymbol === genericBInterface.interfaceSymbol &&\n            maxCompare(genericAInterface.cardinality.max, genericBInterface.cardinality.max) &&\n            minCompare(genericAInterface.cardinality.min, genericBInterface.cardinality.min)) !== undefined).length === genericAInterfaces.length);\n    }\n    canBeSubstitutedBy(other) {\n        return (GenericSymbol.matchInterfaceDeclarations(this.offered, other.offered, (a, b) => a >= b, (a, b) => a >= b) &&\n            GenericSymbol.matchInterfaceDeclarations(this.required, other.required, (a, b) => a <= b, (a, b) => a <= b));\n    }\n    canSubstitute(other) {\n        return other.canBeSubstitutedBy(this);\n    }\n}\n//# sourceMappingURL=generic-symbols.js.map","import { ComponentSymbol, InterfaceSymbol, BuiltInTypeSymbol, MessageSymbol, } from './type-symbols';\nimport { GlobalScopeSymbol } from './scope-symbols';\nimport { GenericSymbol } from './generic-symbols';\nexport class SearchOptions {\n    constructor(scope, searchGlobalScope, searchParentScope) {\n        this.scope = scope;\n        this.searchGlobalScope = searchGlobalScope;\n        this.searchParentScope = searchParentScope;\n    }\n}\nexport class SymbolTable {\n    constructor() {\n        // varia\n        this.globalScope = new GlobalScopeSymbol();\n        this.voidType = new BuiltInTypeSymbol(this.globalScope, '@@@__VOID__@@@');\n        this.anyRequiredInterfaceType = new InterfaceSymbol(this.globalScope, '@@@__ANY_REQUIRED_INTERFACE__@@@');\n        this.anyGenericComponentType = new GenericSymbol([], []);\n        this.anyComponentType = new ComponentSymbol(this.globalScope, '@@@__ANY_COMPONENT__@@@', this.anyGenericComponentType, false);\n        this.anyMessage = new MessageSymbol(this.globalScope, 'ANY', []);\n        this.finishMessage = new MessageSymbol(this.globalScope, 'FINISH', []);\n        // mappings symbol -> node\n        this.symbolToDeclaration = new Map();\n        this.symbolToImplementation = new Map();\n        this.symbolToComponent = new Map();\n        this.symbolToInterface = new Map();\n        // mappings node -> symbol\n        this.expressionToSymbol = new Map();\n        this.typeToSymbol = new Map();\n        this.designatorToSymbol = new Map();\n        this.variableToSymbol = new Map();\n        this.callToSymbol = new Map();\n        this.sendReceiveToSymbol = new Map();\n        this.patternToSymbol = new Map();\n        this.componentToSymbol = new Map();\n        this.messageToSymbol = new Map();\n        this.implementationToSymbol = new Map();\n        this.procedureToSymbol = new Map();\n        this.interfaceToSymbol = new Map();\n        // types\n        this.types = new Array();\n        this.builtins = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n        this.messages = new Array();\n        // lookups\n        this.constants = new Array();\n        this.procedures = new Array();\n        this.impplementations = new Array();\n        this.variables = new Array();\n        this.collectionVariables = new Array();\n    }\n    getMessages(scope) {\n        return this.messages.filter((message) => message.scope === scope);\n    }\n    getSystemProcedures() {\n        return this.procedures.filter((procedure) => procedure.scope === this.globalScope);\n    }\n    getProcedures(scope) {\n        return this.procedures.filter((procedure) => procedure.scope === scope);\n    }\n    getImplementations(scope) {\n        return this.impplementations.filter((implementation) => implementation.scope === scope);\n    }\n    getVariables(scope) {\n        return this.variables.filter((variable) => variable.scope === scope);\n    }\n    getCollectionVariables(scope) {\n        return this.collectionVariables.filter((variable) => variable.scope === scope);\n    }\n    registerBuiltIns(builtin) {\n        this.builtins.push(builtin);\n        this.types.push(builtin);\n    }\n    registerComponent(component) {\n        this.components.push(component);\n        this.types.push(component);\n    }\n    registerInterface(interfaceSymbol) {\n        this.interfaces.push(interfaceSymbol);\n        this.types.push(interfaceSymbol);\n    }\n    registerMessage(message) {\n        this.messages.push(message);\n        this.types.push(message);\n    }\n    registerProcedure(procedure) {\n        this.procedures.push(procedure);\n    }\n    registerImplementation(implementation) {\n        this.impplementations.push(implementation);\n    }\n    registerVariable(variable) {\n        this.variables.push(variable);\n    }\n    registerCollectionVariable(variable) {\n        this.collectionVariables.push(variable);\n    }\n    static componentSatisfiesGeneric(component, generic) {\n        if (generic.offered.length === 0 && generic.required.length === 0) {\n            return true;\n        }\n        return generic.canBeSubstitutedBy(component.genericType);\n    }\n    findBuiltIn(name) {\n        return this.builtins.filter((builtin) => builtin.identifier === name);\n    }\n    findProcedure(identifier, params, returnType, options) {\n        const searchFunction = (procedure, searchScope) => {\n            return (procedure.identifier === identifier &&\n                procedure.parameters.length === params.length &&\n                procedure.parameters.filter((p, i) => this.isAssignable(p, params[i])).length === params.length &&\n                (returnType === undefined || procedure.returnType === returnType) &&\n                procedure.scope === searchScope);\n        };\n        return this.findInComponent(this.procedures, searchFunction.bind(this), options);\n    }\n    isAssignable(paramA, paramB) {\n        if (paramA instanceof ComponentSymbol && paramB instanceof ComponentSymbol) {\n            return paramA.genericType.canBeSubstitutedBy(paramB.genericType);\n        }\n        return paramA === paramB;\n    }\n    findInComponent(data, predicate, options) {\n        if (!options.searchGlobalScope && options.scope instanceof GlobalScopeSymbol) {\n            return new Array();\n        }\n        const results = data.filter((element) => predicate(element, options.scope));\n        if (results.length > 0 || options.scope instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!options.searchGlobalScope && options.scope.scope instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!options.searchParentScope &&\n            (options.scope instanceof ComponentSymbol || options.scope instanceof InterfaceSymbol)) {\n            if (options.searchGlobalScope) {\n                return this.findInComponent(data, predicate, new SearchOptions(this.globalScope, options.searchGlobalScope, options.searchParentScope));\n            }\n            return results;\n        }\n        return this.findInComponent(data, predicate, new SearchOptions(options.scope.scope, options.searchGlobalScope, options.searchParentScope));\n    }\n    findNameInScope(data, identifier, options) {\n        const searchFunction = (element, searchScope) => element.identifier === identifier && element.scope === searchScope;\n        return this.findInComponent(data, searchFunction.bind(this), options);\n    }\n    findVariable(identifier, options) {\n        return this.findNameInScope(this.variables, identifier, options);\n    }\n    findMessage(identifier, ignoreParams, params, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.identifier === identifier &&\n                symbol.scope === searchScope &&\n                (ignoreParams ||\n                    (symbol.parameters.length === params.length &&\n                        symbol.parameters.filter((p, i) => this.isAssignable(p, params[i])).length === params.length)));\n        };\n        return this.findInComponent(this.messages, searchFunction.bind(this), options);\n    }\n    findCollectionVariable(identifier, ignoreParams, params, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.identifier === identifier &&\n                (ignoreParams ||\n                    (symbol.parameters.length === params.length &&\n                        symbol.parameters.filter((p, i) => this.isAssignable(p, params[i])).length ===\n                            params.length)) &&\n                symbol.scope === searchScope);\n        };\n        return this.findInComponent(this.collectionVariables, searchFunction.bind(this), options);\n    }\n    findComponent(identifier, options) {\n        return this.findNameInScope(this.components, identifier, options);\n    }\n    findInterface(identifier, options) {\n        return this.findNameInScope(this.interfaces, identifier, options);\n    }\n    findType(identifier, options) {\n        return this.findNameInScope(this.types, identifier, options);\n    }\n    findImplementation(identifier, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return symbol.interfaceSymbol.identifier === identifier && symbol.scope === searchScope;\n        };\n        return this.findInComponent(this.impplementations, searchFunction.bind(this), options);\n    }\n}\n//# sourceMappingURL=symboltable.js.map","import { NamedScopeSymbol } from './scope-symbols';\nexport class VariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, mutable, type) {\n        super(scope, identifier);\n        this.mutable = mutable;\n        this.type = type;\n    }\n}\nexport class CollectionVariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, type, parameters) {\n        super(scope, identifier);\n        this.type = type;\n        this.parameters = parameters;\n    }\n}\n//# sourceMappingURL=variable-symbols.js.map","import { Visitor } from '../ast/ast';\nimport { GenericComponentSymbol, GenericSymbol, SearchOptions } from '../symbols/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nexport class FixTypeNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitBasicType(node) {\n        const types = this.symbolTable.findType(node.getIdentifier(), new SearchOptions(this.scope, true, true));\n        if (types.length < 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, no type found.`);\n        }\n        if (types.length > 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, multiple definitions found.`);\n        }\n        this.symbolTable.typeToSymbol.set(node, types[0]);\n    }\n    visitAnyType(node) {\n        const symbol = new GenericComponentSymbol(this.scope, new GenericSymbol(node\n            .getOffered()\n            .map((offered) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, offered, this.scope)), node\n            .getRequired()\n            .map((required) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, required, this.scope))));\n        this.symbolTable.typeToSymbol.set(node, symbol);\n    }\n}\n//# sourceMappingURL=fix-type-node.js.map","import { getFirstOrThrow, getOrThrow } from '@composita/ts-utility-types';\nimport { Visitor, TermChainNode, BasicDesignatorNode, LogicalOperator, PrefixOperator, FactorPrefix, NameNode, FixedMessagePattern, } from '../ast/ast';\nimport { BuiltInTypeSymbol, SearchOptions, NamedScopeSymbol, ProcedureSymbol, } from '../symbols/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\nexport class FixExpressionNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    getType(node) {\n        const symbol = this.symbolTable.expressionToSymbol.get(node);\n        return getOrThrow(symbol);\n    }\n    getBuiltIn(typeName) {\n        return getFirstOrThrow(this.symbolTable.findBuiltIn(typeName));\n    }\n    visitAttributes(attributes) {\n        attributes.forEach((attr) => attr.accept(this));\n    }\n    visitConstantExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getExpression()));\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        const leftType = this.getType(node.getLeft());\n        const rightType = this.getType(node.getRight());\n        this.checkChainMatch(leftType, rightType);\n        if (!(leftType instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot compare non number values.`);\n        }\n        const typeIdentifier = leftType.identifier;\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n            case LogicalOperator.NotEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'BOOLEAN' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n            case LogicalOperator.Less:\n            case LogicalOperator.LessEqual:\n            case LogicalOperator.More:\n            case LogicalOperator.MoreEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitOffersRequiresExpression(node) {\n        this.visitAttributes(node.getAttributes());\n        node.getDesignator().accept(this);\n        node.getInterfaces().forEach((iface) => iface.accept(this));\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitTypeCheck(node) {\n        this.visitAttributes(node.getAttributes());\n        node.getDesignator().accept(this);\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        const type = this.getType(node.getTerm());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary + - op to non builtin type.`);\n        }\n        const typeIdentifier = type.identifier;\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n            case PrefixOperator.Plus:\n                if (typeIdentifier !== 'REAL' && typeIdentifier !== 'INTEGER') {\n                    throw new Error(`Cannot apply + - to non numbers types.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getTerm()));\n    }\n    checkChainMatch(left, ...right) {\n        const unique = new Array(...new Set(right));\n        if (unique.length < 1) {\n            throw new Error(`Failed right factor type lookup.`);\n        }\n        if (unique.length > 1) {\n            throw new Error(`Ambiguous right factor type lookup.`);\n        }\n        if (unique[0] !== left) {\n            throw new Error(`Factor type missmatch. Left: ${left.identifier}, Right: ${unique[0].identifier}`);\n        }\n    }\n    getChainTypes(node) {\n        if (node instanceof TermChainNode) {\n            return node.getRight().map((right) => this.getType(right.getRight()));\n        }\n        return node.getRight().map((right) => this.getType(right.getRight()));\n    }\n    visitChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((term) => term.accept(this));\n        const type = this.getType(node.getLeft());\n        this.checkChainMatch(type, ...this.getChainTypes(node));\n        this.symbolTable.expressionToSymbol.set(node, type);\n    }\n    visitTermChain(node) {\n        this.visitChain(node);\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n    }\n    visitFactorChain(node) {\n        this.visitChain(node);\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        const type = this.getType(node.getFactor());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary not op to non builtin type.`);\n        }\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                if (type.identifier !== 'BOOLEAN') {\n                    throw new Error(`Cannot apply not op to non boolean types.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getFactor()));\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getExpression()));\n    }\n    visitIntegerNumber(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('INTEGER'));\n    }\n    visitRealNumber(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('REAL'));\n    }\n    visitConstantCharacter(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('CHARACTER'));\n    }\n    visitText(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('TEXT'));\n    }\n    getPatternName(pattern) {\n        if (pattern instanceof NameNode) {\n            return pattern.getName();\n        }\n        switch (pattern) {\n            case FixedMessagePattern.Any:\n                return this.symbolTable.anyMessage.identifier;\n            case FixedMessagePattern.Finish:\n                return this.symbolTable.finishMessage.identifier;\n            default:\n                throw new Error('Unknown message!');\n        }\n    }\n    visitMessageTest(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(this);\n        const pattern = node.getPattern();\n        const message = CheckerHelper.getMessage(this.symbolTable, this.scope, node.getDesignator(), this.getPatternName(pattern), true, []);\n        this.symbolTable.patternToSymbol.set(pattern, message);\n    }\n    visitReceiveTest(node) {\n        this.visitMessageTest(node);\n    }\n    visitInputTest(node) {\n        this.visitMessageTest(node);\n    }\n    visitExistsTest(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(this);\n    }\n    visitFunctionCall(node) {\n        node.getArguments().forEach((expression) => expression.accept(this));\n        const params = node.getArguments().map((expression) => this.getType(expression));\n        const procedure = getFirstOrThrow(this.symbolTable.findProcedure(node.getName().getName(), params, undefined, new SearchOptions(this.scope, true, false)));\n        this.symbolTable.expressionToSymbol.set(node, procedure.returnType);\n        this.symbolTable.callToSymbol.set(node, procedure);\n    }\n    getProcedureParam(name) {\n        let localScope = this.scope;\n        while (!(localScope instanceof ProcedureSymbol) && localScope instanceof NamedScopeSymbol) {\n            // go up to procedure.\n            localScope = localScope.scope;\n        }\n        if (!(localScope instanceof ProcedureSymbol)) {\n            throw new Error(`${name} is not a procedure parameter.`);\n        }\n        const symbol = getFirstOrThrow(this.symbolTable.findVariable(name, new SearchOptions(localScope, false, false)));\n        if (!(symbol.scope instanceof ProcedureSymbol)) {\n            throw new Error(`Found ${name} outside procedure param.`);\n        }\n        return symbol;\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            const variable = CheckerHelper.getVariable(this.symbolTable, node.getName().getName(), new SearchOptions(this.scope, false, true));\n            this.symbolTable.expressionToSymbol.set(node, variable.type);\n            this.symbolTable.designatorToSymbol.set(node, variable);\n            return;\n        }\n        catch (error) {\n            // let's try something else\n        }\n        try {\n            const constant = getFirstOrThrow(this.symbolTable.constants.filter((constant) => constant.identifier === name));\n            this.symbolTable.expressionToSymbol.set(node, constant.type);\n            this.symbolTable.designatorToSymbol.set(node, constant.type);\n            return;\n        }\n        catch (error) {\n            // let's try somethign else...\n        }\n        try {\n            const symbol = getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, symbol);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        try {\n            const symbol = getFirstOrThrow(this.symbolTable.findComponent(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, symbol);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // give it another go...\n        }\n        try {\n            const symbol = getFirstOrThrow(this.symbolTable.findCollectionVariable(name, true, [], new SearchOptions(this.scope, true, false)));\n            this.symbolTable.expressionToSymbol.set(node, symbol.type);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // one last try...\n        }\n        try {\n            const symbol = this.getProcedureParam(name);\n            this.symbolTable.expressionToSymbol.set(node, symbol.type);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // giving up now..\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBasicExpressionDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            node.getExpressions().forEach((expr) => expr.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope)));\n            const types = node\n                .getExpressions()\n                .map((expr) => getOrThrow(this.symbolTable.expressionToSymbol.get(expr)));\n            const variable = getFirstOrThrow(this.symbolTable.findCollectionVariable(name, false, types, new SearchOptions(this.scope, false, true)));\n            const hasParams = variable.parameters.length > 0;\n            if (variable.type instanceof BuiltInTypeSymbol && variable.type.identifier === 'TEXT' && !hasParams) {\n                this.symbolTable.expressionToSymbol.set(node, getFirstOrThrow(this.symbolTable.findBuiltIn('CHARACTER')));\n            }\n            else {\n                this.symbolTable.expressionToSymbol.set(node, variable.type);\n            }\n            this.symbolTable.designatorToSymbol.set(node, variable);\n            return;\n        }\n        catch (error) {\n            // one more try...\n        }\n        try {\n            const interfaceSymbol = getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, interfaceSymbol);\n            this.symbolTable.designatorToSymbol.set(node, interfaceSymbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBaseTargetDesignator(node) {\n        const base = node.getBase();\n        const target = node.getTarget();\n        target.accept(this);\n        if (base instanceof BasicDesignatorNode) {\n            // potential function call\n            const name = base.getName().getName();\n            try {\n                const procedure = CheckerHelper.getProcedure(name, this.symbolTable, new Array(this.getType(target)), undefined, new SearchOptions(this.scope, true, false));\n                this.symbolTable.expressionToSymbol.set(base, procedure);\n                this.symbolTable.designatorToSymbol.set(node, procedure);\n                this.symbolTable.expressionToSymbol.set(node, procedure.returnType);\n                return;\n            }\n            catch (error) {\n                // it was not a procedure...\n            }\n        }\n        base.accept(this);\n        const baseType = this.getType(base);\n        this.symbolTable.expressionToSymbol.set(node, baseType);\n        this.symbolTable.designatorToSymbol.set(node, baseType);\n    }\n    visitDesignatorType(node) {\n        node.getDesignator().accept(this);\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n    }\n}\n//# sourceMappingURL=fix-expression-node.js.map","import { ComponentSymbol, InterfaceSymbol, ImplementationSymbol, ProcedureSymbol, NamedScopeSymbol, SearchOptions, GlobalScopeSymbol, } from '../symbols/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class CheckerHelper {\n    static checkNotConstantSymbol(name, symbolTable) {\n        const value = symbolTable.constants.filter((constant) => constant.identifier === name);\n        if (value.length !== 0) {\n            throw new Error(`${name} is a constant variable!`);\n        }\n    }\n    static getComponent(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const components = symbolTable.findComponent(name, options);\n        if (components.length > 1) {\n            throw new Error(`Component ${name} defined ${components.length} times in the same scope.`);\n        }\n        if (components.length < 1) {\n            throw new Error(`No component ${name} found.`);\n        }\n        return components[0];\n    }\n    static getInterface(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const interfaces = symbolTable.findInterface(name, options);\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} defined ${interfaces.length} times in the same scope.`);\n        }\n        if (interfaces.length < 1) {\n            throw new Error(`No interface ${name} found.`);\n        }\n        return interfaces[0];\n    }\n    static getImplementation(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        if (!(options.scope instanceof ComponentSymbol)) {\n            throw new Error(`Failed to locate ${name}, must be inside a component.`);\n        }\n        const implementations = symbolTable.findImplementation(name, options);\n        if (implementations.length > 1) {\n            throw new Error(`Implementaiton ${name} defined ${implementations.length} times in the same scope.`);\n        }\n        if (implementations.length < 1) {\n            throw new Error(`No implementation ${name} found.`);\n        }\n        return implementations[0];\n    }\n    static getConstant(symbolTable, name) {\n        const constant = symbolTable.constants.filter((constant) => constant.identifier === name);\n        if (constant.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (constant.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return constant[0];\n    }\n    static getVariable(symbolTable, name, options) {\n        const symbol = symbolTable.findVariable(name, options);\n        if (symbol.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (symbol.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return symbol[0];\n    }\n    static getProcedureParam(symbolTable, scope, name) {\n        while (!(scope instanceof ProcedureSymbol) && scope instanceof NamedScopeSymbol) {\n            // go up to procedure.\n            scope = scope.scope;\n        }\n        if (!(scope instanceof ProcedureSymbol)) {\n            throw new Error(`${name} is not a procedure parameter.`);\n        }\n        const symbol = this.getVariable(symbolTable, name, new SearchOptions(scope, false, false));\n        if (!(symbol.scope instanceof ProcedureSymbol)) {\n            throw new Error(`Found ${name} outside procedure param.`);\n        }\n        return symbol;\n    }\n    static getProcedure(name, symbolTable, params, returnType, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const procedures = symbolTable.findProcedure(name, params, returnType, options);\n        if (procedures.length > 1) {\n            throw new Error(`Procedure ${name} defined ${procedures.length} times in the same scope.`);\n        }\n        if (procedures.length < 1) {\n            throw new Error(`No procedure ${name} found.`);\n        }\n        return procedures[0];\n    }\n    static getProcedureFromNode(node, symbolTable, options) {\n        const name = node.getName().getName();\n        this.checkNotConstantSymbol(name, symbolTable);\n        let returnType = symbolTable.voidType;\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(symbolTable, options.scope));\n            const foundType = symbolTable.typeToSymbol.get(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure ${name} return type.`);\n            }\n            returnType = foundType;\n        }\n        const paramTypes = CheckerHelper.convertParamTypes(symbolTable, options.scope, node.getParams().map((param) => param.getParameter()));\n        return this.getProcedure(name, symbolTable, paramTypes, returnType, options);\n    }\n    static getTypeType(symbolTable, node) {\n        const type = symbolTable.typeToSymbol.get(node);\n        if (type === undefined) {\n            throw new Error(`Type node type lookup failed.`);\n        }\n        return type;\n    }\n    static convertParamTypes(symbolTable, scope, params) {\n        return params.flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(symbolTable, scope));\n            const type = this.getTypeType(symbolTable, param.getType());\n            return param.getNames().map(() => type);\n        });\n    }\n    static getMessageInImplentation(symbolTable, scope, name, ignoreArgs, args) {\n        while (!(scope instanceof ImplementationSymbol)) {\n            if (scope instanceof GlobalScopeSymbol) {\n                throw new Error(`Failed message lookup for ${name}.`);\n            }\n            scope = scope.scope;\n        }\n        const messages = symbolTable.findMessage(name, ignoreArgs, args, new SearchOptions(scope.interfaceSymbol, false, false));\n        if (messages.length > 1) {\n            throw new Error(`Ambiguous message lookup for ${name}.`);\n        }\n        if (messages.length < 1) {\n            throw new Error(`Message lookup failed for ${name}.`);\n        }\n        return messages[0];\n    }\n    static getMessage(symbolTable, scope, interfaceTarget, name, ignoreArgs, args) {\n        const argTypes = args.map((argument) => {\n            argument.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n            const type = symbolTable.expressionToSymbol.get(argument);\n            if (type === undefined) {\n                throw new Error('Failed argument type lookup.');\n            }\n            return type;\n        });\n        interfaceTarget?.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n        if (interfaceTarget !== undefined) {\n            const type = symbolTable.expressionToSymbol.get(interfaceTarget);\n            const messages = new Array();\n            if (type instanceof ComponentSymbol) {\n                messages.push(...type.genericType.offered\n                    .map((offer) => offer.interfaceSymbol)\n                    .flatMap((potentialInterface) => symbolTable.findMessage(name, ignoreArgs, argTypes, new SearchOptions(potentialInterface, false, false))));\n            }\n            else if (type instanceof InterfaceSymbol) {\n                messages.push(...symbolTable.findMessage(name, ignoreArgs, argTypes, new SearchOptions(type, false, false)));\n            }\n            else {\n                throw new Error(`Failed interface lookup for ${name}.`);\n            }\n            if (messages.length > 1) {\n                throw new Error(`Ambigious message lookup for ${name}.`);\n            }\n            if (messages.length < 1) {\n                throw new Error(`Message lookup failed for ${name}.`);\n            }\n            return messages[0];\n        }\n        return this.getMessageInImplentation(symbolTable, scope, name, ignoreArgs, argTypes);\n    }\n}\n//# sourceMappingURL=static-helpers.js.map","import { Visitor } from '../ast/ast';\nimport { ComponentSymbol, GenericSymbol, SearchOptions } from '../symbols/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { CheckerHelper } from './static-helpers';\n// register components, single layer\nexport class ComponentRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const attributes = node.getAttributes();\n        const componentSymbol = new ComponentSymbol(this.scope, name, new GenericSymbol(node\n            .getOffers()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope)), node\n            .getRequires()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope))), attributes.filter((attribute) => attribute.getName().getName() === 'ENTRYPOINT').length > 0);\n        try {\n            CheckerHelper.getComponent(this.symbolTable, name, new SearchOptions(this.scope, false, false));\n            throw new Error(`Duplicate component ${name} detected,`);\n        }\n        catch (error) {\n            // all good\n        }\n        if (componentSymbol.isEntryPoint && !this.isEntryPoint(componentSymbol)) {\n            throw new Error(`Marked entrypoint component ${name}, requires at least one non system interfaces to be connected.`);\n        }\n        this.symbolTable.registerComponent(componentSymbol);\n        this.symbolTable.symbolToComponent.set(componentSymbol, node);\n        this.symbolTable.componentToSymbol.set(node, componentSymbol);\n    }\n    isEntryPoint(component) {\n        const required = component.genericType.required;\n        return (required.length === 0 ||\n            required\n                .map((required) => this.isSystemInterface(required.interfaceSymbol.identifier))\n                .reduce((prev, current) => prev && current, true));\n    }\n    isSystemInterface(name) {\n        switch (name) {\n            case 'SystemTime':\n            case 'FileSystem':\n            case 'GraphicView':\n                return true;\n            default:\n                return false;\n        }\n    }\n}\n//# sourceMappingURL=register-component.js.map","import { getFirstOrThrow } from '@composita/ts-utility-types';\nimport { Visitor } from '../ast/ast';\nimport { InterfaceSymbol, SearchOptions } from '../symbols/symbols';\nexport class InterfaceRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    //visitProtocol(node: ProtocolNode): void {}\n    //visitProtocolExpression(node: ProtocolExpressionNode): void {}\n    //visitProtocolTerm(node: ProtocolTermNode): void {}\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaceSymbol = new InterfaceSymbol(this.scope, name);\n        try {\n            getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, false, false)));\n            throw new Error(`Duplicate interface ${name} detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        // TODO\n        //node.getProtocol().accept(this);\n        this.symbolTable.registerInterface(interfaceSymbol);\n        this.symbolTable.symbolToInterface.set(interfaceSymbol, node);\n        this.symbolTable.interfaceToSymbol.set(node, interfaceSymbol);\n    }\n}\n//# sourceMappingURL=register-interface.js.map","import { Visitor, } from '../ast/ast';\nimport { MessageSymbol } from '../symbols/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class MessageRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(this);\n    }\n    visitProtocolTerm(node) {\n        node.getFactors().forEach((factor) => factor.accept(this));\n    }\n    visitMessageDeclaration(node) {\n        const name = node.getName().getName();\n        const paramSymbols = node.getParams().flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const type = this.symbolTable.typeToSymbol.get(param.getType());\n            if (type === undefined) {\n                throw new Error(`Type lookup for message '${name}' param failed.`);\n            }\n            return param.getNames().map(() => type);\n        });\n        const message = new MessageSymbol(this.scope, name, paramSymbols);\n        this.symbolTable.registerMessage(message);\n        this.symbolTable.messageToSymbol.set(node, message);\n    }\n    visitOptionalProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitGroupProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitRepeatingProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitProtocolExpression(node) {\n        node.getTerms().forEach((term) => term.accept(this));\n    }\n}\n//# sourceMappingURL=register-messages.js.map","import { Visitor } from '../ast/ast';\nimport { ProcedureSymbol, VariableSymbol, SearchOptions, } from '../symbols/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\n// register all procedures, single layer\nexport class ProcedureRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProcedure(node) {\n        const name = node.getName().getName();\n        const params = CheckerHelper.convertParamTypes(this.symbolTable, this.scope, node.getParams().map((param) => param.getParameter()));\n        let returnType = this.symbolTable.voidType;\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const foundType = this.symbolTable.typeToSymbol.get(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure return type for ${name}.`);\n            }\n            returnType = foundType;\n        }\n        try {\n            CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, false, false));\n            throw new Error('Duplicate procedure detected.');\n        }\n        catch (error) {\n            // all good\n        }\n        const procedure = new ProcedureSymbol(this.scope, name, params, returnType);\n        node.getParams().forEach((param) => {\n            const innerParam = param.getParameter();\n            innerParam\n                .getNames()\n                .forEach((name) => this.symbolTable.registerVariable(new VariableSymbol(procedure, name.getName(), param.isMutable(), CheckerHelper.getTypeType(this.symbolTable, innerParam.getType()))));\n        });\n        this.symbolTable.registerProcedure(procedure);\n        this.symbolTable.procedureToSymbol.set(node, procedure);\n    }\n}\n//# sourceMappingURL=register-procedure.js.map","import { Visitor } from '../ast/ast';\nimport { ImplementationSymbol, SearchOptions } from '../symbols/symbols';\nimport { CheckerHelper } from './static-helpers';\n// implementations, single layer\nexport class ImplementationRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        const interfaceSymbols = this.scope.genericType.offered\n            .filter((symbol) => symbol.interfaceSymbol.identifier === name)\n            .map((symbol) => symbol.interfaceSymbol);\n        if (interfaceSymbols.length !== 1) {\n            throw new Error(`Could not find interface for '${name}' implementation.`);\n        }\n        try {\n            CheckerHelper.getImplementation(this.symbolTable, name, new SearchOptions(this.scope, false, false));\n            throw new Error(`Duplicate '${name}' implementation detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        const implementationSymbol = new ImplementationSymbol(this.scope, interfaceSymbols[0]);\n        this.symbolTable.registerImplementation(implementationSymbol);\n        this.symbolTable.symbolToImplementation.set(implementationSymbol, node);\n        this.symbolTable.implementationToSymbol.set(node, implementationSymbol);\n    }\n}\n//# sourceMappingURL=register-implementation.js.map","import { getFirstOrThrow, getOrThrow } from '@composita/ts-utility-types';\nimport { Visitor } from '../ast/ast';\nimport { VariableSymbol, BuiltInTypeSymbol, CollectionVariableSymbol, } from '../symbols/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nexport class ConstantListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitConstant(node) {\n        const name = node.getName().getName();\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        const type = getOrThrow(this.symbolTable.expressionToSymbol.get(node.getExpression().getExpression()));\n        if (type instanceof BuiltInTypeSymbol && type.identifier === 'TEXT') {\n            const variable = new CollectionVariableSymbol(this.scope, name, type, new Array(getFirstOrThrow(this.symbolTable.findBuiltIn('INTEGER'))));\n            this.symbolTable.registerCollectionVariable(variable);\n            this.symbolTable.variableToSymbol.set(node, variable);\n            return;\n        }\n        const variable = new VariableSymbol(this.scope, name, false, type);\n        this.symbolTable.registerVariable(variable);\n        this.symbolTable.variableToSymbol.set(node, variable);\n    }\n    visitConstantList(node) {\n        node.getConstants().forEach((constant) => constant.accept(this));\n    }\n}\n//# sourceMappingURL=register-constant-list.js.map","import { getFirstOrThrow } from '@composita/ts-utility-types';\nimport { Visitor } from '../ast/ast';\nimport { VariableSymbol, CollectionVariableSymbol, BuiltInTypeSymbol, } from '../symbols/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\nexport class VariableListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitVariable(node) {\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n        const type = this.symbolTable.typeToSymbol.get(node.getType());\n        if (type === undefined) {\n            throw new Error(`${node.getNames()[0].getName()}: Unknown type.`);\n        }\n        // ignored for now as usage is unclear\n        //const isMarkedArray = node.getAttributes().find((attr) => attr.getName().getName() === 'ARRAY');\n        node.getNames().forEach((name) => {\n            const identifier = name.getName();\n            const hasParams = name.getParams().length > 0;\n            if (type instanceof BuiltInTypeSymbol && type.identifier === 'TEXT' && !hasParams) {\n                const variable = new CollectionVariableSymbol(this.scope, identifier, type, new Array(getFirstOrThrow(this.symbolTable.findBuiltIn('INTEGER'))));\n                this.symbolTable.registerCollectionVariable(variable);\n                this.symbolTable.variableToSymbol.set(node, variable);\n                return;\n            }\n            if (!hasParams) {\n                const variable = new VariableSymbol(this.scope, identifier, true, type);\n                this.symbolTable.registerVariable(variable);\n                this.symbolTable.variableToSymbol.set(node, variable);\n                return;\n            }\n            const variable = new CollectionVariableSymbol(this.scope, identifier, type, CheckerHelper.convertParamTypes(this.symbolTable, this.scope, name.getParams()));\n            this.symbolTable.registerCollectionVariable(variable);\n            this.symbolTable.variableToSymbol.set(node, variable);\n        });\n    }\n    visitVariableList(node) {\n        node.getVariables().forEach((variable) => variable.accept(this));\n    }\n}\n//# sourceMappingURL=register-variable-list.js.map","import { Visitor, ComponentNode, InterfaceNode, ProcedureNode, VariableListNode, ConstantListNode, } from '../ast/ast';\nimport { ComponentSymbol, SearchOptions } from '../symbols/symbols';\nimport { ComponentRegisterVisitor } from './register-component';\nimport { InterfaceRegisterVisitor } from './register-interface';\nimport { MessageRegisterVisitor } from './register-messages';\nimport { ProcedureRegisterVisitor } from './register-procedure';\nimport { ImplementationRegisterVisitor } from './register-implementation';\nimport { ConstantListRegisterVisitor } from './register-constant-list';\nimport { VariableListRegisterVisitor } from './register-variable-list';\nimport { CheckerHelper } from './static-helpers';\nexport class TypeRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProgram(node) {\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new InterfaceRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new ComponentRegisterVisitor(this.symbolTable, this.scope)));\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const components = this.symbolTable.findComponent(name, new SearchOptions(this.scope, false, false));\n        if (components.length !== 1) {\n            throw new Error(`Failed lookup for component ${name}.`);\n        }\n        node.getBody()?.accept(new TypeRegisterVisitor(this.symbolTable, components[0]));\n    }\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaces = this.symbolTable.findInterface(name, new SearchOptions(this.scope, false, false));\n        if (interfaces.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        node.getProtocol().accept(new MessageRegisterVisitor(this.symbolTable, interfaces[0]));\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(new MessageRegisterVisitor(this.symbolTable, this.scope));\n    }\n    visitProcedure(node) {\n        const procedure = CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, false, false));\n        this.registerLayer(node.getDeclarations(), procedure);\n    }\n    registerLayer(declarations, currentScope, processAddtionalLayer, processAddtionalSubLayer) {\n        const components = declarations\n            .filter((declaration) => declaration instanceof ComponentNode)\n            .map((declaration) => declaration);\n        const interfaces = declarations\n            .filter((declaration) => declaration instanceof InterfaceNode)\n            .map((declaration) => declaration);\n        const procedures = declarations\n            .filter((declaration) => declaration instanceof ProcedureNode)\n            .map((declaration) => declaration);\n        const variables = declarations\n            .filter((declaration) => declaration instanceof VariableListNode)\n            .map((declaration) => declaration);\n        const constants = declarations\n            .filter((declaration) => declaration instanceof ConstantListNode)\n            .map((declaration) => declaration);\n        interfaces.forEach((declaration) => declaration.accept(new InterfaceRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((declaration) => declaration.accept(new ComponentRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((declaration) => declaration.accept(new ProcedureRegisterVisitor(this.symbolTable, currentScope)));\n        variables.forEach((declaration) => declaration.accept(new VariableListRegisterVisitor(this.symbolTable, currentScope)));\n        constants.forEach((declaration) => declaration.accept(new ConstantListRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalLayer !== undefined) {\n            processAddtionalLayer();\n        }\n        interfaces.forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((procedure) => procedure.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalSubLayer !== undefined) {\n            processAddtionalSubLayer(new TypeRegisterVisitor(this.symbolTable, currentScope));\n        }\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Implementation must be in a component scope!');\n        }\n        const implementations = this.symbolTable.findImplementation(name, new SearchOptions(this.scope, false, false));\n        if (implementations.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        this.registerLayer(node.getDeclarations(), implementations[0]);\n    }\n    visitComponentBody(node) {\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Component body must be a component scope!');\n        }\n        const localScope = this.scope;\n        this.registerLayer(node.getDeclarations(), localScope, () => {\n            node.getImplementations().forEach((implementation) => implementation.accept(new ImplementationRegisterVisitor(this.symbolTable, localScope)));\n        }, (visitor) => {\n            node.getImplementations().forEach((implementation) => implementation.accept(visitor));\n        });\n    }\n}\n//# sourceMappingURL=register-types.js.map","import { ProcedureSymbol, BuiltInTypeSymbol, ConstantSymbol, InterfaceDeclarationSymbol, CardinalitySymbol, VariableSymbol, SearchOptions, } from '../symbols/symbols';\nimport { TypeRegisterVisitor } from './register-types';\nexport class SymbolConstruction {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n        const bool_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'BOOLEAN');\n        const char_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'CHARACTER');\n        const text_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'TEXT');\n        const int_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'INTEGER');\n        const real_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'REAL');\n        this.builtInTypes = new Array(bool_t, char_t, text_t, int_t, real_t);\n        this.constants = new Map([\n            ['TRUE', bool_t],\n            ['FALSE', bool_t],\n            ['PI', real_t],\n        ]);\n        this.variables = new Map([['TIME', int_t]]);\n        this.systemProcedures = new Array(\n        // propper procedures\n        ['ASSERT', [this.symbolTable.voidType, new Array(bool_t)]], ['ASSERT', [this.symbolTable.voidType, new Array(bool_t, int_t)]], ['HALT', [this.symbolTable.voidType, new Array(int_t)]], ['INC', [this.symbolTable.voidType, new Array(int_t)]], ['INC', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['DEC', [this.symbolTable.voidType, new Array(int_t)]], ['DEC', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['PASSIVATE', [this.symbolTable.voidType, new Array(int_t)]], ['WRITE', [this.symbolTable.voidType, new Array(text_t)]], ['WRITE', [this.symbolTable.voidType, new Array(int_t)]], ['WRITE', [this.symbolTable.voidType, new Array(real_t)]], ['WRITE', [this.symbolTable.voidType, new Array(char_t)]], ['WRITEHEX', [this.symbolTable.voidType, new Array(int_t)]], ['WRITELINE', [this.symbolTable.voidType, new Array()]], \n        // alloc and dealloc\n        ['NEW', [this.symbolTable.voidType, new Array(this.symbolTable.anyComponentType)]], ['NEW', [this.symbolTable.voidType, new Array(int_t)]], ['NEW', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['NEW', [this.symbolTable.voidType, new Array(int_t, int_t, int_t)]], ['DELETE', [this.symbolTable.voidType, new Array(this.symbolTable.anyComponentType)]], \n        // function procedures\n        ['COUNT', [int_t, new Array(this.symbolTable.anyRequiredInterfaceType)]], ['LENGTH', [int_t, new Array(text_t)]], ['SQRT', [real_t, new Array(real_t)]], ['SIN', [real_t, new Array(real_t)]], ['COS', [real_t, new Array(real_t)]], ['TAN', [real_t, new Array(real_t)]], ['ARCSIN', [real_t, new Array(real_t)]], ['ARCCOS', [real_t, new Array(real_t)]], ['ARCTAN', [real_t, new Array(real_t)]], ['RANDOM', [int_t, new Array(int_t, int_t)]], ['MIN', [real_t, new Array(real_t)]], ['MIN', [int_t, new Array(int_t)]], ['MAX', [real_t, new Array(real_t)]], ['MAX', [int_t, new Array(int_t)]], \n        // type conversion\n        ['CHARACTER', [char_t, new Array(int_t)]], ['INTEGER', [int_t, new Array(real_t)]], ['INTEGER', [int_t, new Array(char_t)]], ['REAL', [real_t, new Array(int_t)]], ['TEXT', [text_t, new Array(char_t)]]);\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolConstruction(symbolTable, scope);\n        construction.register(program);\n    }\n    register(program) {\n        this.registerBuiltIns();\n        program.accept(new TypeRegisterVisitor(this.symbolTable, this.programScope));\n    }\n    registerBuiltIns() {\n        this.registerBuiltInTypes();\n        this.registerBuiltInProcedures();\n        this.registerBuiltInConstants();\n        this.registerBuiltInVariables();\n    }\n    registerBuiltInTypes() {\n        this.builtInTypes.forEach((value) => this.symbolTable.registerBuiltIns(value));\n    }\n    registerBuiltInProcedures() {\n        this.systemProcedures.forEach((value) => {\n            const procedure = new ProcedureSymbol(this.symbolTable.globalScope, value[0], value[1][1], value[1][0]);\n            this.symbolTable.registerProcedure(procedure);\n        });\n    }\n    registerBuiltInConstants() {\n        this.constants.forEach((value, key) => this.symbolTable.constants.push(new ConstantSymbol(key, value)));\n    }\n    registerBuiltInVariables() {\n        this.variables.forEach((value, key) => this.symbolTable.registerVariable(new VariableSymbol(this.symbolTable.globalScope, key, false, value)));\n    }\n    static createInterfaceDeclarationSymbol(symbolTable, node, scope) {\n        const name = node.getName().getName();\n        const interfaces = symbolTable.findInterface(name, new SearchOptions(scope, true, true));\n        if (interfaces.length === 0) {\n            throw new Error(`Interface ${name} not defined.`);\n        }\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} multiple times defined.`);\n        }\n        const cardinality = node.getCardinality();\n        return new InterfaceDeclarationSymbol(interfaces[0], new CardinalitySymbol(cardinality?.getMin() ?? 1, cardinality?.getMax()));\n    }\n}\n//# sourceMappingURL=symbol-construction.js.map","import { getOrThrow } from '@composita/ts-utility-types';\nimport { Visitor, BasicDesignatorNode, BasicExpressionDesignatorNode, } from '../ast/ast';\nimport { BlockScopeSymbol, CollectionVariableSymbol, VariableSymbol, SearchOptions, } from '../symbols/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nimport { CheckerHelper } from './static-helpers';\nexport class FixStatementNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    findCollectionVariable(node) {\n        if (node instanceof BasicExpressionDesignatorNode || node instanceof BasicDesignatorNode) {\n            const name = node.getName().getName();\n            const symbol = this.symbolTable.findCollectionVariable(name, true, [], new SearchOptions(this.scope, false, false));\n            if (symbol.length > 1) {\n                throw new Error(`Found ${name} multiple times.`);\n            }\n            if (symbol.length < 1) {\n                throw new Error(`Failed to find ${name}.`);\n            }\n            return symbol[0];\n        }\n        // TODO\n        throw new Error('Not implemented yet.');\n    }\n    visitProgram(node) {\n        node.getComponents().forEach((component) => component.accept(this));\n    }\n    visitComponent(node) {\n        const component = CheckerHelper.getComponent(this.symbolTable, node.getName().getName(), new SearchOptions(this.scope, true, true));\n        node.getBody()?.accept(new FixStatementNodeVisitor(this.symbolTable, component));\n    }\n    visitComponentBody(node) {\n        node.getDeclarations().forEach((declaration) => declaration.accept(this));\n        node.getImplementations().forEach((implementation) => implementation.accept(this));\n        node.getBeginBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getActivityBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getFinallyBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitImplementation(node) {\n        const implementation = CheckerHelper.getImplementation(this.symbolTable, node.getName().getName(), new SearchOptions(this.scope, true, false));\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, implementation)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, implementation));\n    }\n    visitProcedure(node) {\n        const procedure = CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, true, false));\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, procedure)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, procedure));\n    }\n    visitStatementSequence(node) {\n        node.getStatements().forEach((statement) => statement.accept(new FixStatementNodeVisitor(this.symbolTable, new BlockScopeSymbol(this.scope))));\n    }\n    visitProcedureCall(node) {\n        const params = node.getParams().map((param) => {\n            param.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n            return getOrThrow(this.symbolTable.expressionToSymbol.get(param));\n        });\n        const procedure = CheckerHelper.getProcedure(node.getName().getName(), this.symbolTable, params, undefined, new SearchOptions(this.scope, true, false));\n        this.symbolTable.callToSymbol.set(node, procedure);\n    }\n    visitAssignment(node) {\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        const symbol = getOrThrow(this.symbolTable.designatorToSymbol.get(node.getDesignator()));\n        if (!(symbol instanceof VariableSymbol && symbol.mutable) && !(symbol instanceof CollectionVariableSymbol)) {\n            throw new Error('Cannot asign to to a constant variable.');\n        }\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitNew(node) {\n        // TODO check if valid\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getArgs().forEach((argument) => argument.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope)));\n    }\n    visitConnect(node) {\n        // TODO check if connection is even possible\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitDisconnect(node) {\n        // TODO validity check\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitSend(node) {\n        this.symbolTable.sendReceiveToSymbol.set(node, CheckerHelper.getMessage(this.symbolTable, this.scope, node.getFrom(), node.getTarget().getName(), false, node.getArgs()));\n    }\n    visitReceive(node) {\n        this.symbolTable.sendReceiveToSymbol.set(node, CheckerHelper.getMessage(this.symbolTable, this.scope, node.getFrom(), node.getReceiver().getName(), false, node.getTargets()));\n    }\n    visitDelete(node) {\n        node.getTarget().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitMove(node) {\n        node.getFrom().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitAwait(node) {\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n        node.getElseIfs().forEach((elseif) => elseif.accept(new FixStatementNodeVisitor(this.symbolTable, newScope)));\n        node.getElse()?.accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitElseIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitWhile(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitRepeat(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitFor(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const designator = node.getDesignator();\n        if (!(designator instanceof BasicDesignatorNode)) {\n            throw new Error('Only basic designators currently supported.');\n        }\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBy()?.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getStatements().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitForeach(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getOf().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const variable = this.findCollectionVariable(node.getOf());\n        if (variable.parameters.length < node.getDesignators().length) {\n            throw new Error('Foreach designator match error.');\n        }\n        node.getDesignators().forEach((designator) => {\n            if (!(designator instanceof BasicDesignatorNode)) {\n                throw new Error('Only basic designators supported.');\n            }\n            // the following woud register a new variable, but the language does not allow for that.\n            //this.symbolTable.registerVariable(\n            //    new VariableSymbol(this.scope, designator.getName().getName(), true, variable.parameters[index]),\n            //);\n            designator.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        });\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n}\n//# sourceMappingURL=fix-statement-node.js.map","import { VariableListRegisterVisitor } from './register-variable-list';\nimport { FixStatementNodeVisitor } from './fix-statement-node';\nexport class SymbolFix {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolFix(symbolTable, scope);\n        construction.fix(program);\n    }\n    fix(node) {\n        node.accept(new FixStatementNodeVisitor(this.symbolTable, this.programScope));\n        node.accept(new VariableListRegisterVisitor(this.symbolTable, this.programScope));\n    }\n}\n//# sourceMappingURL=symbol-fix.js.map","import { SymbolTable, ProgramScopeSymbol } from '../symbols/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { SymbolFix } from './symbol-fix';\nexport class Checker {\n    check(uri, ast) {\n        const symbolTable = new SymbolTable();\n        const programScope = new ProgramScopeSymbol(symbolTable.globalScope, uri);\n        SymbolConstruction.run(symbolTable, ast, programScope);\n        SymbolFix.run(symbolTable, ast, programScope);\n        return symbolTable;\n    }\n}\n//# sourceMappingURL=checker.js.map","import { Visitor, LogicalOperator, PrefixOperator, InfixTermOperator, FactorPrefix, InfixFactorOperator, BasicDesignatorNode, ConstantListNode, VariableListNode, } from '../ast/ast';\nimport { IntegerDescriptor, OperationCode, SystemCallOperation, TextDescriptor } from '@composita/il';\nimport { ComponentSymbol, ProcedureSymbol, BuiltInTypeSymbol, VariableSymbol, InterfaceSymbol, CollectionVariableSymbol, } from '../symbols/symbols';\nimport { ILAssembler } from './il-assembler';\nimport { getOrThrow } from '@composita/ts-utility-types';\nimport { Generator } from './generator';\nexport class CodeGeneratorVisitor extends Visitor {\n    constructor(symbols, scope, metadata) {\n        super();\n        this.symbols = symbols;\n        this.scope = scope;\n        this.metadata = metadata;\n        this.assembler = new ILAssembler();\n    }\n    getInstructions() {\n        return this.assembler.complete();\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        const symbol = getOrThrow(this.symbols.designatorToSymbol.get(node));\n        if (symbol instanceof BuiltInTypeSymbol && symbol.scope === this.symbols.globalScope) {\n            switch (name) {\n                case 'FALSE':\n                    this.assembler.emitLoadBoolean(false);\n                    return;\n                case 'TRUE':\n                    this.assembler.emitLoadBoolean(true);\n                    return;\n                case 'PI':\n                    this.assembler.emitLoadFloat(Math.PI);\n                    return;\n            }\n        }\n        if (symbol instanceof VariableSymbol) {\n            const variable = this.metadata.findVariable(symbol);\n            this.assembler.emit(OperationCode.LoadVariable, variable);\n            return;\n        }\n        if (symbol instanceof CollectionVariableSymbol) {\n            const variable = this.metadata.findVariable(symbol);\n            this.assembler.emit(OperationCode.LoadArrayVariable, variable);\n            return;\n        }\n        if (symbol instanceof InterfaceSymbol) {\n            const interfaceDescriptor = this.metadata.findInterface(symbol);\n            this.assembler.emit(OperationCode.LoadService, interfaceDescriptor);\n            return;\n        }\n        throw Error(`Unsupported BasicDesignatorNode ${name}`);\n    }\n    visitBasicExpressionDesignator(node) {\n        const name = node.getName().getName();\n        const symbol = getOrThrow(this.symbols.designatorToSymbol.get(node));\n        if (symbol instanceof CollectionVariableSymbol) {\n            const variable = this.metadata.findVariable(symbol);\n            node.getExpressions().forEach((expr) => expr.accept(this));\n            this.assembler.emit(OperationCode.LoadArrayVariableElement, variable);\n            return;\n        }\n        throw Error(`Unsupported BasicExpressionDesignatorNode ${name}`);\n    }\n    visitBaseTargetDesignator(node) {\n        const symbol = this.symbols.designatorToSymbol.get(node);\n        if (symbol === undefined) {\n            throw new Error(`Failed base target designator node lookup.`);\n        }\n        node.getTarget().accept(this);\n        if (symbol instanceof ProcedureSymbol) {\n            this.handleCall(symbol);\n            return;\n        }\n        node.getBase().accept(this);\n    }\n    visitAttribute(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OperationCode.AcquireShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OperationCode.AcquireExclusive);\n                break;\n        }\n    }\n    handleLockRelease(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OperationCode.ReleaseShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OperationCode.ReleaseExclusive);\n                break;\n        }\n    }\n    visitStatementSequence(node) {\n        node.getAttributes().forEach((attribute) => attribute.accept(this));\n        node.getStatements().forEach((statement) => statement.accept(this));\n        node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n    }\n    handleSystemCall(procedure) {\n        const name = procedure.identifier;\n        const numberOfParams = procedure.parameters.length;\n        if (procedure.scope !== this.symbols.globalScope) {\n            return false;\n        }\n        switch (name) {\n            case 'WRITELINE':\n                this.assembler.emitSystemCall(SystemCallOperation.WriteLine, numberOfParams);\n                return true;\n            case 'ASSERT':\n                this.assembler.emitSystemCall(SystemCallOperation.Assert, numberOfParams);\n                return true;\n            case 'HALT':\n                this.assembler.emitSystemCall(SystemCallOperation.Halt, numberOfParams);\n                return true;\n            case 'INC':\n                this.assembler.emitSystemCall(SystemCallOperation.Inc, numberOfParams);\n                return true;\n            case 'DEC':\n                this.assembler.emitSystemCall(SystemCallOperation.Dec, numberOfParams);\n                return true;\n            case 'PASSIVATE':\n                this.assembler.emitSystemCall(SystemCallOperation.Passivate, numberOfParams);\n                return true;\n            case 'WRITE':\n                this.assembler.emitSystemCall(SystemCallOperation.Write, numberOfParams);\n                return true;\n            case 'WRITEHEX':\n                this.assembler.emitSystemCall(SystemCallOperation.WriteHex, numberOfParams);\n                return true;\n            case 'COUNT':\n                this.assembler.emitSystemCall(SystemCallOperation.Count, numberOfParams);\n                return true;\n            case 'LENGTH':\n                this.assembler.emitSystemCall(SystemCallOperation.Length, numberOfParams);\n                return true;\n            case 'SQRT':\n                this.assembler.emitSystemCall(SystemCallOperation.Sqrt, numberOfParams);\n                return true;\n            case 'SIN':\n                this.assembler.emitSystemCall(SystemCallOperation.Sin, numberOfParams);\n                return true;\n            case 'COS':\n                this.assembler.emitSystemCall(SystemCallOperation.Cos, numberOfParams);\n                return true;\n            case 'TAN':\n                this.assembler.emitSystemCall(SystemCallOperation.Tan, numberOfParams);\n                return true;\n            case 'ARCSIN':\n                this.assembler.emitSystemCall(SystemCallOperation.ArcSin, numberOfParams);\n                return true;\n            case 'ARCCOS':\n                this.assembler.emitSystemCall(SystemCallOperation.ArcCos, numberOfParams);\n                return true;\n            case 'ARCTAN':\n                this.assembler.emitSystemCall(SystemCallOperation.ArcTan, numberOfParams);\n                return true;\n            case 'MIN':\n                this.assembler.emitSystemCall(SystemCallOperation.Min, numberOfParams);\n                return true;\n            case 'MAX':\n                this.assembler.emitSystemCall(SystemCallOperation.Max, numberOfParams);\n                return true;\n            case 'CHARACTER':\n                this.assembler.emitSystemCall(SystemCallOperation.ToCharacter, numberOfParams);\n                return true;\n            case 'INTEGER':\n                this.assembler.emitSystemCall(SystemCallOperation.ToInteger, numberOfParams);\n                return true;\n            case 'REAL':\n                this.assembler.emitSystemCall(SystemCallOperation.ToReal, numberOfParams);\n                return true;\n            case 'TEXT':\n                this.assembler.emitSystemCall(SystemCallOperation.ToText, numberOfParams);\n                return true;\n            case 'RANDOM':\n                this.assembler.emitSystemCall(SystemCallOperation.Random, numberOfParams);\n                return true;\n        }\n        return false;\n    }\n    handleCall(procedure) {\n        if (this.handleSystemCall(procedure)) {\n            return;\n        }\n        this.assembler.emit(OperationCode.ProcedureCall, this.metadata.findProcedure(procedure));\n    }\n    visitProcedureCall(node) {\n        node.getParams().forEach((param) => {\n            param.accept(this);\n        });\n        this.handleCall(getOrThrow(this.symbols.callToSymbol.get(node)));\n    }\n    visitAssignment(node) {\n        node.getDesignator().accept(this);\n        node.getExpression().accept(this);\n        this.assembler.emit(OperationCode.StoreVariable);\n    }\n    visitConstantList(node) {\n        node.getConstants().forEach((constant) => {\n            const symbol = getOrThrow(this.symbols.variableToSymbol.get(constant));\n            const variable = this.metadata.findVariable(symbol);\n            if (variable.type instanceof TextDescriptor || variable.indexTypes.length > 0) {\n                this.assembler.emit(OperationCode.LoadArrayVariable, variable);\n            }\n            else {\n                this.assembler.emit(OperationCode.LoadVariable, variable);\n            }\n            constant.getExpression().getExpression().accept(this);\n            this.assembler.emit(OperationCode.StoreVariable);\n        });\n    }\n    visitNew(node) {\n        const designatorNode = node.getDesignator();\n        const designator = this.symbols.designatorToSymbol.get(designatorNode);\n        node.getArgs().forEach((arg) => arg.accept(this));\n        const nArgs = new IntegerDescriptor(node.getArgs().length);\n        designatorNode.accept(this);\n        if (designator instanceof VariableSymbol || designator instanceof CollectionVariableSymbol) {\n            const type = designator.type;\n            if (type instanceof ComponentSymbol) {\n                this.assembler.emit(OperationCode.New, this.metadata.findComponent(type), nArgs);\n                return;\n            }\n            if (type instanceof BuiltInTypeSymbol) {\n                this.assembler.emit(OperationCode.New, this.metadata.builtInTypeDescriptor(type), nArgs);\n                return;\n            }\n        }\n        throw new Error(`Unsupported new statement.`);\n    }\n    visitConnect(node) {\n        node.getWhat().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OperationCode.Connect);\n    }\n    visitDisconnect(node) {\n        node.getWhat().accept(this);\n        this.assembler.emit(OperationCode.Disconnect);\n    }\n    visitSend(node) {\n        node.getArgs().forEach((arg) => arg.accept(this));\n        const from = node.getFrom();\n        if (from === undefined || from instanceof BasicDesignatorNode) {\n            this.assembler.emit(OperationCode.LoadThis);\n        }\n        from?.accept(this);\n        const message = this.metadata.findMessage(getOrThrow(this.symbols.sendReceiveToSymbol.get(node)));\n        this.assembler.emit(OperationCode.Send, message);\n    }\n    visitReceive(node) {\n        node.getTargets().forEach((arg) => arg.accept(this));\n        const from = node.getFrom();\n        if (from === undefined || from instanceof BasicDesignatorNode) {\n            this.assembler.emit(OperationCode.LoadThis);\n        }\n        from?.accept(this);\n        const message = this.metadata.findMessage(getOrThrow(this.symbols.sendReceiveToSymbol.get(node)));\n        this.assembler.emit(OperationCode.Receive, message);\n    }\n    visitDelete(node) {\n        node.getTarget().accept(this);\n        this.assembler.emit(OperationCode.Delete);\n    }\n    visitMove(node) {\n        node.getFrom().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OperationCode.Move);\n    }\n    visitAwait(node) {\n        const startAwait = this.assembler.createLabel();\n        const endAwait = this.assembler.createLabel();\n        this.assembler.setLabel(startAwait);\n        this.assembler.emit(OperationCode.AcquireExclusive);\n        node.getExpression().accept(this);\n        this.assembler.emitBranchTrue(endAwait);\n        this.assembler.emit(OperationCode.ReleaseExclusive);\n        this.assembler.emitBranch(startAwait);\n        this.assembler.setLabel(endAwait);\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(this);\n        this.assembler.emit(OperationCode.Return);\n    }\n    visitIf(node) {\n        const endIfLabel = this.assembler.createLabel();\n        const elseIfLabels = node.getElseIfs().map(() => this.assembler.createLabel());\n        const elseLabel = this.assembler.createLabel();\n        node.getExpression().accept(this);\n        if (node.getElseIfs().length > 0) {\n            this.assembler.emitBranchFalse(elseIfLabels[0]);\n            node.getThen().accept(this);\n            node.getElseIfs().forEach((elseIf, i) => {\n                this.assembler.emitBranch(endIfLabel);\n                this.assembler.setLabel(elseIfLabels[i]);\n                elseIf.getExpression().accept(this);\n                this.assembler.emitBranchFalse(i + 1 < node.getElseIfs().length\n                    ? elseIfLabels[i + 1]\n                    : node.getElse() !== undefined\n                        ? elseLabel\n                        : endIfLabel);\n                elseIf.getThen().accept(this);\n            });\n        }\n        if (node.getElse() !== undefined) {\n            this.assembler.emitBranchFalse(elseLabel);\n            node.getThen().accept(this);\n            this.assembler.emitBranch(endIfLabel);\n            this.assembler.setLabel(elseLabel);\n            node.getElse()?.accept(this);\n        }\n        if (node.getElseIfs().length === 0 && node.getElse() === undefined) {\n            this.assembler.emitBranchFalse(endIfLabel);\n            node.getThen().accept(this);\n        }\n        this.assembler.setLabel(endIfLabel);\n    }\n    visitWhile(node) {\n        const conditionLabel = this.assembler.createLabel();\n        const endWhile = this.assembler.createLabel();\n        this.assembler.setLabel(conditionLabel);\n        node.getExpresssion().accept(this);\n        this.assembler.emitBranchFalse(endWhile);\n        node.getBody().accept(this);\n        this.assembler.emitBranch(conditionLabel);\n        this.assembler.setLabel(endWhile);\n    }\n    visitRepeat(node) {\n        const repeatStart = this.assembler.createLabel();\n        const repeatEnd = this.assembler.createLabel();\n        this.assembler.setLabel(repeatStart);\n        node.getBody().accept(this);\n        node.getExpresssion().accept(this);\n        this.assembler.emitBranchTrue(repeatEnd);\n        this.assembler.emitBranch(repeatStart);\n        this.assembler.setLabel(repeatEnd);\n    }\n    visitFor(node) {\n        const conditionLabel = this.assembler.createLabel();\n        const forEnd = this.assembler.createLabel();\n        const designator = node.getDesignator();\n        designator.accept(this);\n        node.getExpression().accept(this);\n        this.assembler.emit(OperationCode.StoreVariable);\n        this.assembler.setLabel(conditionLabel);\n        designator.accept(this);\n        node.getTo().accept(this);\n        const increment = node.getBy();\n        if (increment !== undefined) {\n            const decrement = this.assembler.createLabel();\n            const body = this.assembler.createLabel();\n            const constExpr = increment.getExpression();\n            constExpr.accept(this);\n            this.assembler.emitLoadInteger(0);\n            this.assembler.emit(OperationCode.Greater); // is BY > 0\n            this.assembler.emitBranchFalse(decrement);\n            this.assembler.emit(OperationCode.LessEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            this.assembler.emitBranch(body);\n            this.assembler.setLabel(decrement);\n            this.assembler.emit(OperationCode.GreaterEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            this.assembler.setLabel(body);\n            node.getStatements().accept(this);\n            designator.accept(this);\n            constExpr.accept(this);\n            this.assembler.emitSystemCall(SystemCallOperation.Inc, 2);\n        }\n        else {\n            this.assembler.emit(OperationCode.LessEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            node.getStatements().accept(this);\n            designator.accept(this);\n            this.assembler.emitSystemCall(SystemCallOperation.Inc, 1);\n        }\n        this.assembler.emitBranch(conditionLabel);\n        this.assembler.setLabel(forEnd);\n    }\n    visitForeach(node) {\n        const loadLabel = this.assembler.createLabel();\n        const forEnd = this.assembler.createLabel();\n        this.assembler.emit(OperationCode.BeginForEach);\n        this.assembler.setLabel(loadLabel);\n        node.getDesignators().forEach((designator) => designator.accept(this));\n        node.getOf().accept(this);\n        this.assembler.emit(OperationCode.AssignArrayIndex);\n        this.assembler.emitBranchFalse(forEnd);\n        node.getBody().accept(this);\n        this.assembler.emitBranch(loadLabel);\n        this.assembler.setLabel(forEnd);\n        this.assembler.emit(OperationCode.EndForEach);\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n    // EXPRESSIONS:\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n                this.assembler.emit(OperationCode.Equal);\n                break;\n            case LogicalOperator.Less:\n                this.assembler.emit(OperationCode.Less);\n                break;\n            case LogicalOperator.LessEqual:\n                this.assembler.emit(OperationCode.LessEqual);\n                break;\n            case LogicalOperator.More:\n                this.assembler.emit(OperationCode.Greater);\n                break;\n            case LogicalOperator.MoreEqual:\n                this.assembler.emit(OperationCode.GreaterEqual);\n                break;\n            case LogicalOperator.NotEqual:\n                this.assembler.emit(OperationCode.NotEqual);\n                break;\n        }\n    }\n    visitOffersRequiresExpression(node) {\n        node.getAttributes().forEach((attr) => attr.accept(this));\n        // TODO\n        //node.getDesignator().accept(this);\n        //node.getInterfaces().forEach((iface) => this.metadata.findInterface(iface));\n        node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n    }\n    visitTypeCheck(node) {\n        node.getAttributes().forEach((attr) => attr.accept(this));\n        node.getDesignator().accept(this);\n        node.getType().accept(this);\n        const type = this.symbols.typeToSymbol.get(node.getType());\n        if (type === undefined) {\n            throw new Error('Unknown type in type check.');\n        }\n        if (type instanceof ComponentSymbol) {\n            this.assembler.emit(OperationCode.IsType, this.metadata.findComponent(type));\n            node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n            return;\n        }\n        if (type instanceof BuiltInTypeSymbol) {\n            this.assembler.emit(OperationCode.IsType, this.metadata.builtInTypeDescriptor(type));\n            node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n            return;\n        }\n        throw new Error('Unknown type check. Required component type.');\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n                this.assembler.emit(OperationCode.Negate);\n        }\n    }\n    visitTermChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixTermOperator.Minus:\n                this.assembler.emit(OperationCode.Subtract);\n                break;\n            case InfixTermOperator.Or:\n                this.assembler.emit(OperationCode.LogicOr);\n                break;\n            case InfixTermOperator.Plus:\n                this.assembler.emit(OperationCode.Add);\n                break;\n        }\n    }\n    visitFactorChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixFactorOperator.AndText:\n                this.assembler.emit(OperationCode.LogicAnd);\n                break;\n            case InfixFactorOperator.Div:\n            case InfixFactorOperator.DivText:\n                this.assembler.emit(OperationCode.Divide);\n                break;\n            case InfixFactorOperator.Times:\n                this.assembler.emit(OperationCode.Multiply);\n                break;\n            case InfixFactorOperator.ModText:\n                this.assembler.emit(OperationCode.Modulo);\n                break;\n        }\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                this.assembler.emit(OperationCode.Not);\n        }\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n    }\n    visitIntegerNumber(node) {\n        this.assembler.emitLoadInteger(node.getValue());\n    }\n    visitRealNumber(node) {\n        this.assembler.emitLoadFloat(node.getValue());\n    }\n    visitConstantCharacter(node) {\n        this.assembler.emitLoadCharacter(node.getCharacter());\n    }\n    visitText(node) {\n        this.assembler.emitLoadText(node.getText());\n    }\n    visitReceiveTest(node) {\n        const message = getOrThrow(this.symbols.patternToSymbol.get(node.getPattern()));\n        // this should probably be handled in the runtime\n        //const block = this.assembler.createLabel();\n        //this.assembler.setLabel(block);\n        const designator = node.getDesignator();\n        this.assembler.emit(OperationCode.LoadThis);\n        designator?.accept(this);\n        this.assembler.emit(OperationCode.ReceiveTest, this.metadata.findMessage(message));\n        //this.assembler.emitBranchFalse(block);\n    }\n    visitInputTest(node) {\n        const designator = node.getDesignator();\n        this.assembler.emit(OperationCode.LoadThis);\n        designator?.accept(this);\n        this.assembler.emit(OperationCode.InputTest);\n    }\n    visitExistsTest(node) {\n        node.getDesignator().accept(this);\n        this.assembler.emit(OperationCode.ExistsTest);\n    }\n    visitFunctionCall(node) {\n        node.getArguments().forEach((arg) => arg.accept(this));\n        this.handleCall(getOrThrow(this.symbols.callToSymbol.get(node)));\n    }\n    visitProcedure(node) {\n        const symbol = getOrThrow(this.symbols.procedureToSymbol.get(node));\n        const visitor = new CodeGeneratorVisitor(this.symbols, symbol, this.metadata);\n        const descriptor = this.metadata.findProcedure(symbol);\n        node.getDeclarations()\n            .filter((declaration) => declaration instanceof VariableListNode || declaration instanceof ConstantListNode)\n            .forEach((declaration) => declaration.accept(visitor));\n        descriptor.declarations.init.instructions.push(...visitor.getInstructions());\n        Generator.fillDeclarations(descriptor.declarations, symbol, this.metadata, this.symbols);\n        node.getStatements()?.accept(visitor);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n    }\n}\nexport class ImplementationGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitImplementation(node) {\n        const descriptor = this.metadata.findImplementation(this.symbol);\n        let visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        Generator.fillDeclarations(descriptor.declarations, this.symbol, this.metadata, this.symbols);\n        node.getDeclarations()\n            .filter((declaration) => declaration instanceof VariableListNode || declaration instanceof ConstantListNode)\n            .forEach((declaration) => declaration.accept(visitor));\n        descriptor.declarations.init.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getStatements()?.accept(visitor);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n    }\n}\nexport class ComponentGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitComponentBody(node) {\n        const descriptor = this.metadata.findComponent(this.symbol);\n        let visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getDeclarations()\n            .filter((declaration) => declaration instanceof VariableListNode || declaration instanceof ConstantListNode)\n            .forEach((declaration) => declaration.accept(visitor));\n        descriptor.declarations.init.instructions.push(...visitor.getInstructions());\n        node.getImplementations().forEach((declaration) => {\n            const implSymbol = getOrThrow(this.symbols.implementationToSymbol.get(declaration));\n            const implVisitor = new ImplementationGeneratorVisitor(implSymbol, this.metadata, this.symbols);\n            declaration.accept(implVisitor);\n        });\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getBeginBlock()?.accept(visitor);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getActivityBlock()?.accept(visitor);\n        descriptor.activity.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getFinallyBlock()?.accept(visitor);\n        descriptor.finally.instructions.push(...visitor.getInstructions());\n    }\n}\n//# sourceMappingURL=code-generator.js.map","import { ComponentDescriptor, BooleanDescriptor, CharacterDescriptor, FloatDescriptor, IntegerDescriptor, TextDescriptor, } from '@composita/il';\nexport class Metadata {\n    constructor() {\n        this.componentMapping = new Map();\n        this.interfaceMapping = new Map();\n        this.implementationMapping = new Map();\n        this.procedureMapping = new Map();\n        this.variableMapping = new Map();\n        this.messageMapping = new Map();\n        this.globalDescriptor = new ComponentDescriptor('@___@GLOBAL_DESCRIPTOR@___@');\n    }\n    getGlobalComponent() {\n        return this.globalDescriptor;\n    }\n    pushComponent(symbol, descriptor) {\n        this.componentMapping.set(symbol, descriptor);\n    }\n    findComponent(symbol) {\n        const result = this.componentMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushInterface(symbol, descriptor) {\n        this.interfaceMapping.set(symbol, descriptor);\n    }\n    findInterface(symbol) {\n        const result = this.interfaceMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Interface Mapping.');\n        }\n        return result;\n    }\n    pushImplementation(symbol, descriptor) {\n        this.implementationMapping.set(symbol, descriptor);\n    }\n    findImplementation(symbol) {\n        const result = this.implementationMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushProcedure(symbol, descriptor) {\n        this.procedureMapping.set(symbol, descriptor);\n    }\n    findProcedure(symbol) {\n        const result = this.procedureMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushVariable(symbol, descriptor) {\n        this.variableMapping.set(symbol, descriptor);\n    }\n    findVariable(symbol) {\n        const result = this.variableMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Variable Mapping.');\n        }\n        return result;\n    }\n    pushMessage(symbol, descriptor) {\n        this.messageMapping.set(symbol, descriptor);\n    }\n    findMessage(symbol) {\n        const result = this.messageMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Message Mapping.');\n        }\n        return result;\n    }\n    builtInTypeDescriptor(symbol) {\n        switch (symbol.identifier) {\n            case 'INTEGER':\n                return new IntegerDescriptor();\n            case 'REAL':\n                return new FloatDescriptor();\n            case 'BOOLEAN':\n                return new BooleanDescriptor();\n            case 'CHARACTER':\n                return new CharacterDescriptor();\n            case 'TEXT':\n                return new TextDescriptor();\n            default:\n                throw new Error('Unsupported variable built in type symbol.');\n        }\n    }\n}\n//# sourceMappingURL=metadata.js.map","import { IL, ComponentDescriptor, ImplementationDescriptor, ProcedureDescriptor, VariableDescriptor, InterfaceDescriptor, MessageDescriptor, TextDescriptor, IntegerDescriptor, } from '@composita/il';\nimport { ComponentSymbol, BuiltInTypeSymbol, InterfaceSymbol, } from '../symbols/symbols';\nimport { ComponentGeneratorVisitor } from './code-generator';\nimport { Metadata } from './metadata';\nimport { ComponentNode } from '../ast/ast';\nexport class Generator {\n    generate(symbols) {\n        const il = new IL();\n        const metadata = this.generateMetadata(symbols);\n        //metadata.findMessage(symbols.finishMessage);\n        //metadata.findMessage(symbols.finishMessage);\n        symbols.components.forEach((component) => this.generateComponent(component, symbols, il, metadata));\n        return il;\n    }\n    generateMetadata(symbols) {\n        const metadata = new Metadata();\n        metadata.pushComponent(symbols.anyComponentType, new ComponentDescriptor(symbols.anyComponentType.identifier));\n        metadata.pushInterface(symbols.anyRequiredInterfaceType, new InterfaceDescriptor(symbols.anyRequiredInterfaceType.identifier));\n        metadata.pushMessage(symbols.finishMessage, new MessageDescriptor(symbols.finishMessage.identifier));\n        metadata.pushMessage(symbols.anyMessage, new MessageDescriptor(symbols.anyMessage.identifier));\n        symbols.getSystemProcedures().forEach((procedure) => {\n            const descriptor = new ProcedureDescriptor(procedure.identifier, undefined);\n            descriptor.parameters.push(...procedure.parameters.map((type) => {\n                return new VariableDescriptor(type.identifier, this.convertSymbolToDescriptor(type, metadata), true);\n            }));\n            metadata.pushProcedure(procedure, descriptor);\n        });\n        symbols.interfaces.forEach((symbol) => metadata.pushInterface(symbol, new InterfaceDescriptor(symbol.identifier)));\n        symbols.components.forEach((component) => metadata.pushComponent(component, new ComponentDescriptor(component.identifier)));\n        symbols.messages.forEach((symbol) => {\n            const message = new MessageDescriptor(symbol.identifier);\n            symbol.parameters.forEach((value) => {\n                message.data.push(this.convertSymbolToDescriptor(value, metadata));\n            });\n            metadata.pushMessage(symbol, message);\n        });\n        symbols.interfaces.forEach((component) => this.fillInterface(component, metadata, symbols));\n        symbols.impplementations.forEach((implementation) => {\n            const implementationDescriptor = new ImplementationDescriptor(metadata.findInterface(implementation.interfaceSymbol));\n            metadata.pushImplementation(implementation, implementationDescriptor);\n        });\n        symbols.variables.forEach((variable) => {\n            const typeDescriptor = this.convertSymbolToDescriptor(variable.type, metadata);\n            const varDescriptor = new VariableDescriptor(variable.identifier, typeDescriptor, true);\n            if (typeDescriptor instanceof TextDescriptor) {\n                varDescriptor.indexTypes.push(new IntegerDescriptor());\n            }\n            metadata.pushVariable(variable, varDescriptor);\n        });\n        symbols.collectionVariables.forEach((variable) => {\n            const typeDescriptor = this.convertSymbolToDescriptor(variable.type, metadata);\n            const varDescriptor = new VariableDescriptor(variable.identifier, typeDescriptor, true);\n            varDescriptor.indexTypes.push(...variable.parameters.map((type) => this.convertSymbolToDescriptor(type, metadata)));\n            metadata.pushVariable(variable, varDescriptor);\n        });\n        symbols.procedures.forEach((procedure) => {\n            const returnType = procedure.returnType;\n            const returnTypeDescriptor = returnType === symbols.voidType ? undefined : this.convertSymbolToDescriptor(returnType, metadata);\n            const procedureDescriptor = new ProcedureDescriptor(procedure.identifier, returnTypeDescriptor);\n            procedureDescriptor.parameters.push(...procedure.parameters.map((type) => {\n                return new VariableDescriptor(type.identifier, this.convertSymbolToDescriptor(type, metadata), true);\n            }));\n            metadata.pushProcedure(procedure, procedureDescriptor);\n        });\n        symbols.components.forEach((component) => this.fillComponent(component, metadata, symbols));\n        return metadata;\n    }\n    convertSymbolToDescriptor(symbol, metadata) {\n        if (symbol instanceof BuiltInTypeSymbol) {\n            return metadata.builtInTypeDescriptor(symbol);\n        }\n        if (symbol instanceof ComponentSymbol) {\n            return metadata.findComponent(symbol);\n        }\n        if (symbol instanceof InterfaceSymbol) {\n            return metadata.findInterface(symbol);\n        }\n        throw new Error('Cannot convert to descriptor');\n    }\n    fillInterface(interfaceSymbol, metadata, symbols) {\n        // TODO\n        metadata.findInterface(interfaceSymbol);\n        symbols;\n    }\n    static fillDeclarations(declarations, symbol, metadata, symbols) {\n        symbols\n            .getVariables(symbol)\n            .forEach((variable) => declarations.variables.push(metadata.findVariable(variable)));\n        symbols\n            .getCollectionVariables(symbol)\n            .forEach((variable) => declarations.variables.push(metadata.findVariable(variable)));\n        symbols\n            .getProcedures(symbol)\n            .forEach((procedure) => declarations.procedures.push(metadata.findProcedure(procedure)));\n    }\n    fillComponent(component, metadata, symbols) {\n        const descriptor = metadata.findComponent(component);\n        component.genericType.offered.forEach((interfaceDeclaration) => descriptor.offers.push(metadata.findInterface(interfaceDeclaration.interfaceSymbol)));\n        component.genericType.required.forEach((interfaceDeclaration) => descriptor.requires.push(metadata.findInterface(interfaceDeclaration.interfaceSymbol)));\n        symbols\n            .getImplementations(component)\n            .forEach((implementation) => descriptor.implementations.push(metadata.findImplementation(implementation)));\n        Generator.fillDeclarations(descriptor.declarations, component, metadata, symbols);\n    }\n    generateComponent(component, symbols, il, metadata) {\n        const node = symbols.symbolToComponent.get(component);\n        if (node === undefined || !(node instanceof ComponentNode)) {\n            throw new Error(`Failed node lookup for component ${component.identifier}`);\n        }\n        node.getBody()?.accept(new ComponentGeneratorVisitor(component, metadata, symbols));\n        const descriptor = metadata.findComponent(component);\n        il.components.push(descriptor);\n        if (component.isEntryPoint) {\n            il.entryPoints.push(descriptor);\n        }\n    }\n}\n//# sourceMappingURL=generator.js.map","import { Lexer } from './lexer/lexer';\nimport { Parser } from './parser/parser';\nimport { CompilerDiagnosis } from './diagnosis/diagnosis';\nimport { Checker } from './checker/checker';\nimport { Generator } from './generator/generator';\nexport class Compiler {\n    compile(uri, code) {\n        const diagnosis = new CompilerDiagnosis();\n        const lexer = new Lexer(diagnosis, uri, code);\n        const parser = new Parser(diagnosis, lexer);\n        const ast = parser.parse();\n        if (diagnosis.hasErrors()) {\n            diagnosis.print(console.log);\n            throw new Error('Error during Lexing and/or Parsing. See console.log.');\n        }\n        const checker = new Checker();\n        const symbols = checker.check(uri, ast);\n        const generator = new Generator();\n        return generator.generate(symbols);\n    }\n}\n//# sourceMappingURL=compiler.js.map","import { Compiler } from '@composita/compiler';\nimport { Runtime } from '@composita/runtime';\n\n// inspired from https://stackoverflow.com/questions/53818157/using-webpack-worker-loader-with-typescript-causes-cannot-find-module-error\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-restricted-globals */\nconst ctx: Worker = self as any;\n\nlet isRunning = false;\n\nfunction capture(...msgs: Array<string>): void {\n    msgs.forEach((msg) => {\n        if (msg !== undefined) {\n            ctx.postMessage({ output: msg, running: isRunning });\n        }\n    });\n}\n\nfunction updater(update: boolean): void {\n    isRunning = update;\n    const msg = !isRunning ? '\\n> ' : '';\n    ctx.postMessage({ output: msg, running: isRunning });\n}\n\nfunction postError(msg: string): void {\n    isRunning = false;\n    ctx.postMessage({ output: `\\n!!! ${msg} !!!\\n\\n`, running: isRunning });\n}\n\nconst compiler = new Compiler();\n\nfunction initRuntime(): void {\n    Runtime.instance().reset();\n    Runtime.instance().changeOutput(capture.bind(ctx));\n    Runtime.instance().isRunningUpdate(updater.bind(ctx));\n}\n\nctx.onmessage = async (event) => {\n    if (event.data.fn === 'run') {\n        initRuntime();\n        try {\n            updater(true);\n            const il = compiler.compile(event.data.uri, event.data.code);\n            await Runtime.instance().run(il);\n        } catch (err) {\n            console.log(err.stack);\n            postError(err.message);\n        }\n    }\n\n    if (event.data.fn === 'stop') {\n        Runtime.instance().halt();\n    }\n};\n\nexport default ctx;\n"],"sourceRoot":""}