{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../src/builtin.ts","../../../src/enums.ts","../../../src/descriptor.ts","../../../src/instruction.ts","../../../src/opcode.ts","../../../src/syscall.ts","../../../src/il.ts","../../../src/values.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/fast-deep-equal/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../src/runtime.ts","../../../src/tasks.ts","../../../src/scheduler.ts","../../../src/evalstack.ts","../../../src/syscallhandler.ts","../../../src/interpreter.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/process/browser.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../../src/types.ts","../../../src/location.ts","../../../src/tokens.ts","../node_modules/vscode-languageserver-types/lib/esm/main.js","../../../src/diagnosis.ts","../../../src/lexer.ts","../../../src/declaration.ts","../../../src/node.ts","../../../src/attribute.ts","../../../src/cardinality.ts","../../../src/expression.ts","../../../src/component.ts","../../../src/constant.ts","../../../src/simple-expression.ts","../../../src/term.ts","../../../src/factor.ts","../../../src/operand.ts","../../../src/designator.ts","../../../src/interface-declaration.ts","../../../src/implementation.ts","../../../src/interface.ts","../../../src/protocol-factor.ts","../../../src/name.ts","../../../src/parameter.ts","../../../src/procedure.ts","../../../src/program.ts","../../../src/statement.ts","../../../src/type.ts","../../../src/statement-sequence.ts","../../../src/keywords.ts","../../../src/variable.ts","../../../src/visitor.ts","../../../src/parser.ts","../../../src/scope-symbols.ts","../../../src/type-symbols.ts","../../../src/il-assembler.ts","../../../src/generic-symbols.ts","../../../src/symboltable.ts","../../../src/variable-symbols.ts","../../../src/fix-type-node.ts","../../../src/fix-expression-node.ts","../../../src/static-helpers.ts","../../../src/register-component.ts","../../../src/register-interface.ts","../../../src/register-messages.ts","../../../src/register-procedure.ts","../../../src/register-implementation.ts","../../../src/register-constant-list.ts","../../../src/register-variable-list.ts","../../../src/register-types.ts","../../../src/symbol-construction.ts","../../../src/fix-statement-node.ts","../../../src/symbol-fix.ts","../../../src/checker.ts","../../../src/code-generator.ts","../../../src/metadata.ts","../../../src/generator.ts","../../../src/compiler.ts","workers/system.worker.ts","../../../src/system.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","initialValue","this","arguments","Array","ProtocolType","OperatorCode","SystemCallOperator","lastActiveCode","ActiveCode","Finally","activeCode","Procedure","_defineProperties","target","props","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","constructor","_typeof","obj","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","apply","_construct","Parent","args","Class","a","push","Function","equal","b","keys","isArray","RegExp","source","flags","valueOf","toString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","err","undefined","_setPrototypeOf","setPrototypeOf","__proto__","_getPrototypeOf","_isNativeReflectConstruct","sham","Proxy","Date","e","TaskState","Error","evalStack","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_arrayLikeToArray","arr","arr2","_toConsumableArray","from","minLen","test","_cache","Map","indexOf","has","set","Wrapper","other","SourcePosition","line","character","startACompare","start","compareTo","endACompare","end","Tag","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","uri","range","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","location","message","Warning","Information","Hint","Unnecessary","Deprecated","severity","code","relatedInformation","command","_i","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","textEditChange","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","languageId","text","PlainText","Markdown","Text","Method","Field","Variable","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","containerName","detail","selectionRange","children","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","commandOrEdit","isPreferred","data","tabSize","insertSpaces","parent","TextDocument","mergeSort","compare","left","right","leftIdx","rightIdx","ret","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","startOffset","endOffset","substring","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","check","SpecialCharacter","currentCharacter","getCurrentCharacter","visitor","visitProcedure","what","expression","node","IdentifierKeywords","tryConsumeFixToken","designator","expectConsumeFixToken","getLocation","BlockScopeSymbolTag","BuiltInTypeSymbolTag","GenericComponentSymbolTag","scope","genericType","identifier","required","GenericSymbol","validate","types","symbolTable","findType","getIdentifier","typeToSymbol","expressionToSymbol","getName","attributes","getAttributes","componentSymbol","interfaceSymbols","offered","filter","symbol","interfaceSymbol","map","getImplementation","getExpression","accept","expressionSymbol","getOrThrow","getDesignator","assembler","symbols","metadata","ctx","isRunning","updater","postMessage","output","running","postError","msg","system","msgs","onmessage"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,qBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,+BClFtC,SAASC,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAFxB,mC,mmBCOK,E,QAAL,SAAK,GACD,iBADJ,CAAK,MAAuB,KAG5B,IASK,EATQ,EACT,aAA4B,IAAhB,EAAgB,uDAAD,EAAC,oBAKT,2BAAwB,EAAqB,IAJ5D,KAAK,aAAe,KAAK,MAAM,KAOvC,SAAK,GACD,iBADJ,CAAK,MAAkB,KAGvB,IASK,EATQ,EACT,aAA4B,IAAhB,EAAgB,uDAAD,EAAC,oBAKT,yBAAsB,EAAmB,IAJxD,KAAK,aAAe,IAO5B,SAAK,GACD,iBADJ,CAAK,MAAiB,KAGf,IASF,EATQ,EACT,aAA6B,IAAjBC,EAAiB,uDAAF,GAAE,oBAKV,wBAAqB,EAAkB,IAJtDC,KAAK,aAAe,IAO5B,SAAK,GACD,iBADJ,CAAK,MAAsB,KAG3B,IAYK,EAZQ,EACT,aAA6B,IAAjB,EAAiB,uDAAF,GACvB,GADyB,oBAQV,6BAA0B,EAAuB,IAP5D,EAAa,OAAS,EACtB,MAAM,IAAI,MAAM,+CAEpB,KAAK,aAAe,IAO5B,SAAK,GACD,iBADJ,CAAK,MAAoB,KAGzB,IC7DY,ED6DC,EACT,aAAgC,IAApB,EAAoB,4EAKb,2BAAwB,EAAqB,IAJ5D,KAAK,aAAe,G,OErDf,EAAb,aAAE,oBACkB,UAAO,IAAI,EACX,eAAY,IAAI,MAChB,gBAAa,IAAI,MACjB,gBAAa,IAAI,OAGxB,EACT,WAA4B,GAAkB,oBAAlB,kBACZ,YAAS,IAAI,MACb,cAAW,IAAI,MACf,kBAAe,IAAI,EACnB,qBAAkB,IAAI,MACtB,WAAQ,IAAI,EACZ,cAAW,IAAI,EACf,aAAU,IAAI,GAGrB,EACT,WAA4B,EAAoC,GAAoC,oBAAxE,kBAAoC,kBAChD,gBAAa,IAAI,MACjB,kBAAe,IAAI,EACnB,WAAQ,IAAI,GAGnB,EACT,WAA4B,GAA8B,oBAA9B,iBACZ,kBAAe,IAAI,EACnB,WAAQ,IAAI,GAGnB,EACT,WACoB,EACA,EACA,GAAgB,oBAFhB,kBACA,YACA,eAEJ,gBAAa,IAAI,OAGxB,EAAb,aAAE,oBACkB,kBAAe,IAAI,OAG1B,EACT,WAA4B,GAAkB,oBAAlB,kBACZ,eAAY,IAAI,OAQvB,EACT,WAA4B,GAAkB,oBAAlB,kBACZ,UAAO,IAAI,OAGlB,EACT,WAA4B,GAAc,oBAAd,eAGnB,EACT,WAA4B,GAA8D,oBAA9D,kBAA8D,2BAA3B,EAA2B,iCAA3B,EAA2B,kBACtFA,KAAKC,UAAL,YAAqBC,MAAyB,KD3EtD,SAAY,GACR,mBACAC,IAAA,uBACAA,IAAA,yBAHJ,CAAY,MAAY,KEWxB,ICXY,ECAA,EFWC,EACT,WAAY,GAAuD,oBAC/D,KAAK,KAAO,EADmD,2BAAhC,EAAgC,iCAAhC,EAAgC,kBAE/D,KAAK,UAAL,YAAqB,MAA8B,KCd3D,SAAY,GAER,iBACAC,IAAA,uBACAA,IAAA,uBACAA,IAAA,mBACAA,IAAA,mBACAA,IAAA,mBAGAA,IAAA,iBACAA,IAAA,eACAA,IAAA,yBACAA,IAAA,qBACAA,IAAA,gCACAA,IAAA,wBAGA,kBAGA,0BACAA,IAAA,wBAGAA,IAAA,cACAA,IAAA,oBAEAA,IAAA,gBACAA,IAAA,sBACAA,IAAA,sBACAA,IAAA,4BACAA,IAAA,8BACA,8BACAA,IAAA,4BACAA,IAAA,kCACAA,IAAA,oBAGA,kDACAA,IAAA,wCACA,sDACAA,IAAA,0CACAA,IAAA,8CAGA,oBAGAA,IAAA,kCACAA,IAAA,gCACAA,IAAA,8BACAA,IAAA,wBAGAA,IAAA,kBACAA,IAAA,0BACAA,IAAA,kCACA,sCACA,4CACA,4CAEA,wBACA,gCACA,kCAEA,wBACA,gCAnEJ,CAAY,MAAY,KCAxB,SAAY,GACR,qBACAC,IAAA,yBACAA,IAAA,uBACAA,IAAA,mBACAA,IAAA,eACAA,IAAA,aACAA,IAAA,aACAA,IAAA,yBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,gBACAA,IAAA,cACAA,IAAA,cACAA,IAAA,cACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,cACAA,IAAA,cACAA,IAAA,8BACAA,IAAA,0BACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,oDAzBJ,CAAY,MAAkB,KCE9B,IAAa,EAAb,aAAE,oBACkB,iBAAc,IAAI,MAClB,gBAAa,IAAI,MACjB,gBAAa,IAAI,Q,+hBCSzB,EAaP,E,6BAbL,SAAY,GACN,EAAF,iBACE,EAAF,mBACA,2BACA,yBACA,6BALJ,CAAY,MAAU,KAatB,SAAK,GACD,iBADJ,CAAK,MAAmB,KAGxB,IAIK,EAJQ,EACT,WAA4B,EAAiC,GAAyB,oBAA1D,eAAiC,YAC1C,0BAAuB,EAAoB,MAElE,SAAK,GACD,iBADJ,CAAK,MAAiB,KAGtB,IAIK,EAJQ,EACT,WAA4B,EAAiC,GAAyB,oBAA1D,eAAiC,YAC1C,wBAAqB,EAAkB,MAE9D,SAAK,GACD,iBADJ,CAAK,MAAmB,KAGxB,IAIK,EAJQ,EACT,WAA4B,EAAiC,GAAyB,oBAA1D,eAAiC,YAC1C,0BAAuB,EAAoB,MAElE,SAAK,GACD,iBADJ,CAAK,MAAc,KAGnB,IAqWK,EArWQ,EAAb,aAAE,oBACqB,qBAAkB,EAAe,KAGlC,EAAtB,WACM,SAAF,EAA6B,EAAqD,GAAoB,oBAAzE,oBAAqD,cAClE,eAAY,IAAI,MAEhB,gBAAa,IAAI,MAwKvB,WAAO,EACP,gBAAa,EAAW,KACxB,oBAAiB,EAAW,KACxB,KAAJ,mBAAqB,IAAI,IAAwB,CACvD,CAAC,EAAW,KAAM,GAClB,CAAC,EAAW,MAAO,GACnB,CAAC,EAAW,SAAU,GACtB,CAAC,EAAW,QAAS,GACrB,CAAC,EAAW,UAAW,KApL7B,uBAAE,IAAJ,QAAI,MAAJ,WAQS,MAED,GADA,KAAK,uBACD,KAAK,SAGT,OAAQ,KAAK,YACT,KAAK,EAAW,KACZ,OAAO,KAAK,aAAa,KAAK,aAAa,KAAK,oBACpD,KAAK,EAAW,UACZ,iBAAO,KAAK,WAAW,KAAK,iBAA5B,aAAO,EAAgC,QAC3C,QACI,OAAO,KAAK,eAnB5B,CAAI,IAAJ,OAAI,MAAJ,SAuBS,GACK,IAAF,KAAK,SAAH,CAGN,IACM,EADY,KAAK,mBAAmB,IAAI,KAAK,YACzB,EAAW,OACrC,GAAI,EAAQ,EACR,MAAM,IAAI,MAAM,iBAGpB,KAAK,mBAAmB,IAAI,KAAK,WAAY,MAjCrD,CAAI,IAAJ,OAAI,MAAJ,SAoCS,EAAiC,GAA4C,IAIhC,EAJgC,OAC9E,GAAI,EAAK,SAAW,EAAW,WAAW,OACtC,MAAM,IAAI,MAAM,qDAEpB,GAAI,KAAK,aAAe,EAAW,UAE/B,OADA,eAAK,WAAW,KAAK,mBAArB,SAAkC,KAAK,EAAY,IAC5C,EAEX,KAAK,eAAiB,KAAK,WAC3B,KAAK,WAAa,EAAW,UAC7B,IAAM,EAAe,KAAK,WAAW,WAAU,SAAC,GAAD,OAAU,EAAK,aAAe,KAC7E,IAAsB,IAAlB,EACA,MAAM,IAAI,MAAM,gEAWd,OATN,KAAK,mBAAmB,IAAI,KAAK,WAAY,GAC7C,EAAK,SAAQ,SAAC,EAAK,GACf,QAAY,IAAR,EAAmB,CACnB,IAAM,EAAkB,EAAW,WAAW,GACxC,EAAQ,IAAI,EAAc,EAAiB,GACjD,EAAM,oBACN,EAAK,WAAW,GAAc,WAAW,KAAK,QAG/C,IA3Df,CAAI,IAAJ,oBAAI,MAAJ,WA8DqB,MACb,GAAI,KAAK,aAAe,EAAW,UAC/B,MAAM,IAAI,MAAM,4CAEpB,eAAK,WAAW,KAAK,iBAArB,SAAgC,iBAlExC,CAAI,IAAJ,eAAI,MAAJ,WAsEQ,OAAO,KAAK,aAtEpB,CAAI,IAAJ,WAAI,MAAJ,WA0EYL,KAAKM,iBAAmBC,EAAWC,SAAWR,KAAKS,aAAeF,EAAWG,YAGjFV,KAAKM,eAAiBN,KAAKS,WAC3BT,KAAKS,WAAaF,EAAWC,WA9ErC,CAAI,IAAJ,SAAI,MAAJ,WAkFQ,OAAO,KAAK,OAlFpB,CAAI,IAAJ,SAAI,MAAJ,WAsFQ,OAAO,KAAK,mBAAmB,IAAI,KAAK,cAtFhD,CAAI,IAAJ,mBAAI,MAAJ,WA0FQ,IAAM,EAAM,KAAK,SAIjB,OAHI,KAAK,aAAe,EAAW,WAC/B,KAAK,mBAAmB,IAAI,KAAK,WAAY,EAAM,GAEhD,IA9Ff,CAAI,IAAJ,sBAAI,MAAJ,WAkGQ,IAAIR,KAAK,UAAa,KAAK,aAIrB,OAAF,KAAK,aAAe,EAAW,MACvB,KAAH,eAAiB,KAAK,WAC3B,KAAK,WAAa,EAAW,MAC7B,KAAK,UAAU,SAAQ,SAAC,GAChB,aAAoB,GACpB,EAAS,4BAGjBA,KAAK,uBAGL,KAAK,aAAe,EAAW,OAC/B,KAAK,eAAiB,KAAK,WAC3BA,KAAKS,WAAa,EAAW,cAC7BT,KAAK,uBAGL,KAAK,aAAe,EAAW,UAC/B,KAAK,eAAiB,KAAK,WAC3BA,KAAKS,WAAa,EAAW,aAC7BT,KAAK,uBAGL,KAAK,aAAe,EAAW,WAC/B,KAAK,WAAa,KAAK,eACvBA,KAAK,eAAiB,EAAW,eACjCA,KAAK,uBAGL,KAAK,aAAe,EAAW,SAC/B,KAAK,eAAiB,KAAK,gBAC3B,KAAK,MAAO,SAFhB,IAnIR,CAAI,IAAJ,aAAI,MAAJ,WA2IQ,IAAM,EAAW,KAAK,SACtB,OAAI,KAAK,aACE,GAAY,KAAK,aAAa,KAAK,aAAa,OAEvD,KAAK,uBACgC,IAA9B,KAAK,WAAW,IAA2B,KAAK,WAAW,GAAU,SAEzE,KAAK,mBAlJpB,CAAI,IAAJ,aAAI,MAAJ,WAwJQ,OAAO,KAAK,aAAe,EAAW,OAxJ9C,CAAI,IAAJ,kBAAI,MAAJ,WA4JQ,OAAO,KAAK,aAAe,EAAW,YA5J9C,CAAI,IAAJ,cAAI,MAAJ,WAgKQ,KAAK,MAAO,EACZ,KAAK,WAAa,EAAW,KAC7B,KAAK,eAAiB,EAAW,KACjC,KAAK,mBAAqB,IAAI,IAAI,CAC9B,CAAC,EAAW,KAAM,GAClB,CAAC,EAAW,MAAO,GACnB,CAAC,EAAW,SAAU,GACtB,CAAC,EAAW,QAAS,GACrB,CAAC,EAAW,UAAW,SAxKnC,KAwLa,EAAb,YAAE,qBAAF,iBACM,SAAF,EAA4B,EAAiC,GAAoB,kCAC7E,cAAM,EAAW,aAAc,IADP,aAExB,EAAK,iBAAmB,IAAI,IAC5B,EAAK,oBAAsB,IAAI,IAC/B,EAAW,OAAO,SAAQ,SAAC,GAAD,OAAW,EAAK,iBAAiB,IAAI,OAAO,MACtE,EAAW,SAAS,SAAQ,SAAC,GAAD,OAAa,EAAK,oBAAoB,IAAI,OAAS,MALF,EADnF,uBAAE,IAAJ,YAAI,MAAJ,WAaQ,OAAQ,KAAK,YACT,KAAK,EAAW,MACZ,OAAO,KAAK,SAAW,KAAK,WAAW,MAAM,aAAa,OACpD,KAAK,WAAW,MAAM,aAAa,KAAK,yBACxC,EACV,KAAK,EAAW,SACZ,OAAO,KAAK,SAAW,KAAK,WAAW,SAAS,aAAa,OACvD,KAAK,WAAW,SAAS,aAAa,KAAK,yBAC3C,EACV,KAAK,EAAW,QACZ,OAAO,KAAK,WAAW,QAAQ,aAAa,KAAK,oBACrD,QACI,UAzBhB,CAAI,IAAJ,iBAAI,MAAJ,WAmDQ,IAAM,EAAW,KAAK,SAChB,OAAE,KAAK,YACT,KAAK,EAAW,MACZ,OAAyC,GAAY,KAAK,WAAW,MAAM,aAAa,OAC5F,KAAK,EAAW,SACZ,OAAyC,GAAY,KAAK,WAAW,SAAS,aAAa,OAC/F,KAAK,EAAW,QAOZ,OAAO,GAAY,KAAK,WAAW,QAAQ,aAAa,OAC5D,QACI,OAAO,OAlEvB,GAAoC,GAuEvB,EAAb,YAAE,qBAAF,iBACM,SAAF,EAA4B,EAAsC,GAAwB,kCACtF,cAAM,EAAW,aAAc,IADP,aAIZ,eAAe,IAAI,MAJuD,EAD5F,uBAAE,IAAJ,YAAI,MAAJ,WAQQ,OAAQA,KAAK,YACT,KAAK,EAAW,MACZ,OAAO,KAAK,WAAW,MAAM,aAAa,KAAK,oBACnD,QACI,UAZhB,CAAI,IAAJ,iBAAI,MAAJ,WAiBQ,IAAM,EAAW,KAAK,SACtB,OAAQ,KAAK,YACT,KAAK,EAAW,MACZ,OAAO,KAAK,WAAW,MAAM,aAAa,QAAU,EACxD,QACI,OAAO,OAtBvB,GAAkC,GA6BrB,EAAb,YAAE,qBAAF,iBACM,SAAF,EAA4B,EAAiC,GAAoB,kCACzE,EAAJ,YAAM,EAAW,aAAc,IADP,aAQpB,eAAc,EAEf,aAAa,IAAI,MAVyD,EADnF,uBAAE,IAAJ,uBAAI,MAAJ,eAAI,IAAJ,eAAI,MAAJ,WAcsD,MAA9C,OAAI,KAAK,aAAe,EAAW,WAC/B,UAAI,KAAK,WAAW,KAAK,iBAAzB,OAAI,EAAgC,iBAChC,KAAK,WAAa,KAAK,eACvB,KAAK,eAAiB,EAAW,YAE9B,IAEX,KAAK,cACL,KAAK,WAAa,IAAI,OACf,KAvBf,CAAI,IAAJ,YAAI,MAAJ,WA2BQ,OAAQ,KAAK,YACT,KAAK,EAAW,MACZ,OAAO,KAAK,WAAW,MAAM,aAAa,KAAK,oBACnD,QACI,UA/BhB,CAAI,IAAJ,iBAAI,MAAJ,WAoCQ,IAAM,EAAW,KAAK,SACtB,OAAQ,KAAK,YACT,KAAK,EAAW,MACZ,OAAQ,KAAK,aAAe,KAAK,WAAW,MAAM,aAAa,QAAU,EAC7E,QACI,OAAO,OAzCvB,GAAoC,GA8CvB,EACT,WAA4B,GAA6B,oBAA7B,kBACZ,YAAS,IAAI,OAKpB,EAAb,WACM,SAAF,EAA4B,EAAuC,GAAwB,oBAA/D,kBAAuC,aAE3D,cAAU,EAHpB,uBAAE,IAAJ,aAAI,MAAJ,WAMQ,OAAO,KAAK,UANpB,CAAI,IAAJ,oBAAI,MAAJ,WAUQA,KAAK,QAAU,KAAK,WAAW,YAVvC,MAgBA,SAAK,GACD,iBADJ,CAAK,MAAqB,KAG1B,IAUK,EAVQ,EACT,WACoB,EACA,GAAsC,oBADtC,kBACA,aAED,uBAAoB,EAAsB,MAKjE,SAAK,GACC,EAAF,eADJ,CAAK,MAAe,KAGpB,IAIK,EAJQ,EACT,aAAoC,IAAjB,EAAiB,uDAAD,EAAC,oBAAjB,aACA,iBAAc,EAAgB,MAErD,SAAK,GACD,iBADJ,CAAK,MAAa,KAGlB,IAIK,EAJQ,EACT,aAAoC,IAAjB,EAAiB,uDAAD,EAAC,oBAAjB,aACA,eAAY,EAAc,MAEjD,SAAK,GACD,iBADJ,CAAK,MAAY,KAGjB,IAIK,EAJQ,EACT,aAAqC,IAAlB,EAAkB,uDAAF,GAAE,oBAAlB,aACA,cAAW,EAAa,MAE/C,SAAK,GACD,iBADJ,CAAK,MAAiB,KAGtB,IAIK,EAJQ,EACT,aAAuC,IAApB,EAAoB,uDAAJ,KAAI,oBAApB,aACA,mBAAgB,EAAkB,MAEzD,SAAK,GACD,iBADJ,CAAK,MAAe,KAGpB,IAAa,EACT,aAAyC,IAAtB,EAAsB,4EAAtB,aACA,iBAAc,EAAgB,M,6BCtcrD,SAASW,EAAkBC,EAAQC,GACjC,IAAK,IAAIlD,EAAI,EAAGA,EAAIkD,EAAMC,OAAQnD,IAAK,CACrC,IAAIoD,EAAaF,EAAMlD,GACvBoD,EAAWxC,WAAawC,EAAWxC,aAAc,EACjDwC,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWE,UAAW,GACjD5C,OAAOC,eAAesC,EAAQG,EAAW7B,IAAK6B,IAInC,SAASG,EAAarB,EAAasB,EAAYC,GAG5D,OAFID,GAAYR,EAAkBd,EAAYN,UAAW4B,GACrDC,GAAaT,EAAkBd,EAAauB,GACzCvB,EAbT,mC,6BCAA,8CACe,SAASwB,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIzB,UAAU,sDAGtBwB,EAAS/B,UAAYlB,OAAOY,OAAOsC,GAAcA,EAAWhC,UAAW,CACrEiC,YAAa,CACX5C,MAAO0C,EACPL,UAAU,EACVD,cAAc,KAGdO,GAAY,YAAeD,EAAUC,K,mFCb5B,SAASE,EAAQC,GAa9B,OATED,EADoB,oBAAX/C,QAAoD,kBAApBA,OAAOiD,SACtC,SAAiBD,GACzB,cAAcA,GAGN,SAAiBA,GACzB,OAAOA,GAAyB,oBAAXhD,QAAyBgD,EAAIF,cAAgB9C,QAAUgD,IAAQhD,OAAOa,UAAY,gBAAkBmC,IAI9GA,GCXF,SAASE,EAA2BC,EAAM/D,GACvD,OAAIA,GAA2B,WAAlB2D,EAAQ3D,IAAsC,oBAATA,ECHrC,SAAgC+D,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDEA,CAAsBA,GAHpB/D,EEDI,SAASiE,EAAaC,GACnC,IAAIC,EAA4B,OAAAC,EAAA,KAChC,OAAO,WACL,IACIC,EADAC,EAAQ,OAAAC,EAAA,GAAeL,GAG3B,GAAIC,EAA2B,CAC7B,IAAIK,EAAY,OAAAD,EAAA,GAAerC,MAAMwB,YACrCW,EAASI,QAAQC,UAAUJ,EAAOnC,UAAWqC,QAE7CH,EAASC,EAAMK,MAAMzC,KAAMC,WAG7B,OAAO,EAA0BD,KAAMmC,M,gBChB3CzE,EAAOD,QAAU,EAAQ,K,6BCAzB,sDAEe,SAASiF,EAAWC,EAAQC,EAAMC,GAc/C,OAZEH,EADE,cACWH,QAAQC,UAER,SAAoBG,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKN,MAAMK,EAAGF,GAChB,IACIhD,EAAW,IADGoD,SAAS7D,KAAKsD,MAAME,EAAQG,IAG9C,OADID,GAAO,YAAejD,EAAUiD,EAAMtD,WACnCK,IAIO6C,MAAM,KAAMxC,a,6BCVhCvC,EAAOD,QAAU,SAASwF,EAAMH,EAAGI,GACjC,GAAIJ,IAAMI,EAAG,OAAO,EAEpB,GAAIJ,GAAKI,GAAiB,iBAALJ,GAA6B,iBAALI,EAAe,CAC1D,GAAIJ,EAAEtB,cAAgB0B,EAAE1B,YAAa,OAAO,EAE5C,IAAIV,EAAQnD,EAAGwF,EACf,GAAIjD,MAAMkD,QAAQN,GAAI,CAEpB,IADAhC,EAASgC,EAAEhC,SACGoC,EAAEpC,OAAQ,OAAO,EAC/B,IAAKnD,EAAImD,EAAgB,IAARnD,KACf,IAAKsF,EAAMH,EAAEnF,GAAIuF,EAAEvF,IAAK,OAAO,EACjC,OAAO,EAKT,GAAImF,EAAEtB,cAAgB6B,OAAQ,OAAOP,EAAEQ,SAAWJ,EAAEI,QAAUR,EAAES,QAAUL,EAAEK,MAC5E,GAAIT,EAAEU,UAAYnF,OAAOkB,UAAUiE,QAAS,OAAOV,EAAEU,YAAcN,EAAEM,UACrE,GAAIV,EAAEW,WAAapF,OAAOkB,UAAUkE,SAAU,OAAOX,EAAEW,aAAeP,EAAEO,WAIxE,IADA3C,GADAqC,EAAO9E,OAAO8E,KAAKL,IACLhC,UACCzC,OAAO8E,KAAKD,GAAGpC,OAAQ,OAAO,EAE7C,IAAKnD,EAAImD,EAAgB,IAARnD,KACf,IAAKU,OAAOkB,UAAUC,eAAe1B,KAAKoF,EAAGC,EAAKxF,IAAK,OAAO,EAEhE,IAAKA,EAAImD,EAAgB,IAARnD,KAAY,CAC3B,IAAIuB,EAAMiE,EAAKxF,GAEf,IAAKsF,EAAMH,EAAE5D,GAAMgE,EAAEhE,IAAO,OAAO,EAGrC,OAAO,EAIT,OAAO4D,IAAIA,GAAKI,IAAIA,I,6BC5CtB,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ7E,EAAK8E,GACpE,IACE,IAAIC,EAAON,EAAIzE,GAAK8E,GAChBpF,EAAQqF,EAAKrF,MACjB,MAAOsF,GAEP,YADAL,EAAOK,GAILD,EAAKE,KACPP,EAAQhF,GAERwF,QAAQR,QAAQhF,GAAOyF,KAAKP,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAI1C,EAAO7B,KACP4C,EAAO3C,UACX,OAAO,IAAImE,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAG9B,MAAMZ,EAAMe,GAEzB,SAASkB,EAAMlF,GACb8E,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQnF,GAGlE,SAASmF,EAAOS,GACdd,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASS,GAGnEV,OAAMW,OA/BZ,mC,6BCAe,SAASC,EAAgBtG,EAAGqB,GAMzC,OALAiF,EAAkBrG,OAAOsG,gBAAkB,SAAyBvG,EAAGqB,GAErE,OADArB,EAAEwG,UAAYnF,EACPrB,IAGcA,EAAGqB,GAN5B,mC,6BCAe,SAASoF,EAAgBzG,GAItC,OAHAyG,EAAkBxG,OAAOsG,eAAiBtG,OAAOgE,eAAiB,SAAyBjE,GACzF,OAAOA,EAAEwG,WAAavG,OAAOgE,eAAejE,KAEvBA,GAJzB,mC,6BCAe,SAAS0G,IACtB,GAAuB,qBAAZvC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUuC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAK1F,UAAUkE,SAAS3F,KAAKyE,QAAQC,UAAUyC,KAAM,IAAI,iBAClD,EACP,MAAOC,GACP,OAAO,GATX,mC,2KCsCa,EAAb,WAAE,SAAF,IAAI,oBACQlF,KAAA,UAAuB,IAAI,IAC3B,gBAAa,EACb,WAAO,EAEP,YAAS,IAAI,IACb,sBAAmB,IAAI,IAMvB,SAAwC,sCAAI,EAAJ,yBAAI,EAAJ,uBAC5C,EAAK,SAAQ,SAAC,GAAD,OAAS,EAAQ,OAAO,MAAM,OAUvC,eAAwC,aAQxC,oBAA0B,EAoG1B,wBAAqB,IAAI,IACzB,mBAAgB,IAAI,IAoCX,oBAAiB,IAAI,IAxKxC,uBAAE,IAAJ,QAAI,MAAJ,WAgBQ,KAAK,MAAO,IAhBpB,CAAI,IAAJ,eAAI,MAAJ,SAmBiB,GACT,KAAK,IAAM,IApBnB,CAAI,IAAJ,kBAAI,MAAJ,SA2BoB,GACZ,KAAK,UAAY,IA5BzB,CAAI,IAAJ,UAAI,MAAJ,WAAM,IAAN,mCAiCkB,GAjCV,OAAR,0DAkCQ,KAAK,MAAO,EACZ,KAAK,UAAY,EACjB,KAAK,MApCb,gDAAM,gBAAN,GAAQ,OAAR,8BAAI,IAAJ,MAAI,MAAJ,WAuCO,aACC,KAAK,WAAU,GACf,eAAK,iBAAL,SAAgB,YAAY,SAAQ,SAAC,GACjC,EAAK,gBAAgB,EAAY,IAAI,QAGzC,IADA,IAAI,EAAO,KAAK,UAAU,qBACV,IAAT,IAAuB,KAAK,MAC/B,EAAK,UACL,EAAO,KAAK,UAAU,gBAE1BA,KAAK,WAAU,KAjDvB,CAAI,IAAJ,QAAI,MAAJ,WAqDc,KAAD,IAAL,wBArDR,CAAI,IAAJ,OAAI,MAAJ,WAyDQ,OAAO,IAAI,MAAO,oBAzD1B,CAAI,IAAJ,OAAI,MAAJ,SA4DS,GACD,IAAM,EAAQ,KAAK,QAAQ,GAC3B,QAAc,IAAV,EACA,MAAM,IAAI,MAAM,yBAEpB,OAAO,IAjEf,CAAI,IAAJ,UAAI,MAAJ,SAoEY,GACJ,OAAO,KAAK,OAAO,IAAI,KArE/B,CAAI,IAAJ,0BAAI,MAAJ,SAwEoC,GACtB,OAAF,aAAgB,IACT,IAAI,IAEX,aAAgB,IACT,IAAI,IAEX,aAAgB,IACT,IAAI,IAEX,aAAgB,IACT,IAAI,IAEX,aAAgB,IACT,IAAI,SADf,IArFR,CAAI,IAAJ,kBAAI,MAAJ,SA2FoB,EAA2B,GAAuB,WACxD,EAAU,IAAI,IAAiB,KAAK,aAAc,GAClD,EAAY,IAAI,IAAe,EAAM,GA6B3C,OA5BA,KAAK,iBAAiB,IAAI,EAAS,GACnC,KAAK,OAAO,IAAI,EAAS,GACzB,KAAK,aAAa,GAClB,EAAK,aAAa,UAAU,SAAQ,SAAC,GAE7B,EAAW,WAAW,OAAS,KAAO,EAAW,gBAAgB,KACjE,EAAU,UAAU,KAAK,IAAI,IAAmB,EAAY,IAAI,MAEhE,EAAU,UAAU,KAAK,IAAI,IAAc,EAAY,EAAK,wBAAwB,EAAW,WAGvG,EAAK,aAAa,WAAW,SAAQ,SAAC,GAClC,IAAM,EAAY,IAAI,IAAe,EAAY,GAC3C,EAAmB,IAAI,IAAiB,EAAK,aAAc,GACjE,EAAK,OAAO,IAAI,EAAkB,GAClC,EAAK,iBAAiB,IAAI,EAAkB,GAC5C,EAAU,WAAW,KAAK,MAE9B,EAAK,OAAO,SAAQ,SAAC,GACZ,EAAK,mBAAmB,IAAI,IAC7B,EAAK,mBAAmB,IAAI,EAAO,IAAI,QAG/C,EAAK,SAAS,SAAQ,SAAC,GACd,EAAK,mBAAmB,IAAI,IAC7B,EAAK,mBAAmB,IAAI,EAAS,IAAI,QAG1C,IA1Hf,CAAI,IAAJ,eAAI,MAAJ,SA6HyB,GACjB,IAAM,EAAc,IAAI,IAAY,KAAM,GACpC,EAAO,IAAI,IAAK,EAAS,GACzB,KAAD,UAAU,QAAQ,KAhI/B,CAAI,IAAJ,aAAI,MAAJ,SAuIe,EAA2B,GAClC,IAAM,EAAU,KAAK,mBAAmB,IAAI,GAC5C,QAAgB,IAAZ,EACA,MAAM,IAAI,MAAM,sCAEpB,IAAM,EAAY,KAAK,OAAO,IAAI,GAClC,KAAM,aAAqB,KACvB,MAAM,IAAI,MAAM,4BAEpB,IAAM,EAAW,EAAU,WAAW,gBAAgB,MAAK,SAAC,GAAD,OAAU,IAAM,EAAK,UAAW,MAE3F,GAAI,EAAQ,IAAI,GACZ,OAAO,EAAQ,IAAI,GAGvB,QAAiB,IAAb,EAAwB,CACxB,IAAM,EAAiB,IAAI,IAAe,KAAK,aAAc,GAG7D,OAFA,KAAK,cAAc,IAAI,EAAgB,GACvC,EAAQ,IAAI,EAAW,GAChB,EAGX,IAAM,EAAmB,EAAU,iBAAiB,IAAI,GACxD,QAAyB,IAArB,EACA,OAAO,EAEX,IAAM,EAAkB,EAAU,oBAAoB,IAAI,GAC1D,QAAwB,IAApB,EACA,OAAO,EAEX,MAAM,IAAI,MAAM,uDArKxB,CAAI,IAAJ,cAAI,MAAJ,SA0KgB,EAAiC,GAAkB,WAE3D,KAAI,aAAgB,KAApB,CAIA,IAAM,EAAS,KAAK,iBAAiB,IAAI,GACzC,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,6BAGpB,GAAI,aAAgB,IAChB,OAAO,KAAK,YAAY,EAAY,GAGxC,IAAM,EAAQ,KAAK,OAAO,IAAI,GAC9B,GAAI,aAAgB,IAChB,OAAI,aAAiB,KAAgB,IAAM,EAAM,WAAW,UAAW,GAC5D,EAEJ,KAAK,YAAY,EAAY,GAGlC,GAAF,aAAiB,IAAkB,OAC7B,EAAM,UAAG,KAAK,eAAe,IAAI,UAA3B,aAAG,EAAgC,QAAO,SAAC,GACnD,IAAM,EAAW,EAAK,OAAO,IAAI,GACjC,OAAO,aAAoB,KAAgB,IAAM,EAAS,WAAW,UAAW,MAEpF,OAA0B,KAAb,OAAN,QAAM,IAAN,WAAQ,QAAe,EAAO,QAAK,MAtMtD,CAAI,IAAJ,OAAI,MAAJ,SA2MS,EAAoB,GACrB,IAAM,EAAU,KAAK,OAAO,IAAI,GAChC,QAAgB,IAAZ,KAA2B,aAAmB,KAC9C,MAAM,IAAI,MAAM,gCAEpB,EAAQ,aAAa,KAAK,KAhNlC,CAAI,IAAJ,UAAI,MAAJ,SAmNY,EAAwB,GAC5B,IAAM,EAAU,KAAK,OAAO,IAAI,GAChC,QAAgB,IAAZ,KAA2B,aAAmB,KAC9C,MAAM,IAAI,MAAM,gCAGpB,IAAM,EAAQ,EAAQ,aACtB,QAAc,IAAV,GAAwC,IAAjB,EAAM,OAAjC,CAIA,IAAM,EAAc,EAAM,GAAG,WAE7B,OAAI,IAAM,EAAa,IAAS,IAAM,EAAM,EAAQ,aAAe,IAAM,EAAa,EAAQ,eACnF,EAAM,aADjB,KAhOR,CAAI,IAAJ,cAAI,MAAJ,SAuOgB,GACR,IAAM,EAAU,KAAK,OAAO,IAAI,GAChC,QAAgB,IAAZ,KAA2B,aAAmB,KAC9C,MAAM,IAAI,MAAM,gCAGpB,IAAM,EAAQ,EAAQ,aACtB,QAAc,IAAV,GAAwC,IAAjB,EAAM,OAIjC,OAAO,EAAM,KAlPrB,CAAI,IAAJ,UAAI,MAAJ,SAqPY,EAAsB,GAC1B,IAAM,EAAU,KAAK,OAAO,IAAI,GAEhC,KAAM,aAAmB,KACrB,MAAM,IAAI,MAAM,4CAGpB,IAAI,EAAO,EAAQ,WAAW,gBAAgB,MAAK,SAAC,GAAD,OAAU,IAAM,EAAK,UAAW,EAAQ,SAC3F,QAAa,IAAT,IAAuB,KAAK,cAAc,IAAI,GAC9C,MAAM,IAAI,MAAM,mBAEpB,QAAa,IAAT,EAAoB,CACpB,EAAQ,iBAAiB,IAAI,EAAQ,KAAM,GAC3C,IAAM,EAAO,KAAK,OAAO,IAAI,KAAK,cAAc,IAAI,IACpD,QAAa,IAAT,KAAwB,aAAgB,KACxC,MAAM,IAAI,MAAM,kCAEpB,EAAK,oBAAoB,IAAI,EAAQ,KAAM,GAE/C,QAAa,IAAT,EAAoB,OAIpB,QAAa,KAHb,EAAI,UAAG,KAAK,cACP,IAAI,UADL,aAAG,EAED,KAAK,gBAAgB,MAAK,SAAC,GAAD,OAAU,IAAM,EAAK,UAAW,EAAQ,UAEpE,MAAM,IAAI,MAAM,6BAEpB,EAAQ,oBAAoB,IAAI,EAAQ,KAAM,GAC9C,IAAM,EAAO,KAAK,OAAO,IAAI,KAAK,cAAc,IAAI,IACpD,QAAa,IAAT,KAAwB,aAAgB,KACxC,MAAM,IAAI,MAAM,kCAEpB,EAAK,iBAAiB,IAAI,EAAQ,KAAM,GAE5C,IAAK,KAAK,OAAO,IAAI,GAAU,CAC3B,IAAM,EAAe,IAAI,IAAa,EAAM,KAAK,cAAc,IAAI,IACnE,KAAK,OAAO,IAAI,EAAS,GAE7B,KAAK,aAAa,KA1R1B,CAAI,IAAJ,aAAI,MAAJ,SA8Re,EAAwB,GAAuB,MAChD,EAAM,UAAG,KAAK,eAAe,IAAI,UAA3B,aAAG,EAA+B,QAAO,SAAC,GAAD,OAAU,IAAM,EAAK,WAC3D,IAAX,GAGJ,KAAK,eAAe,IAAI,EAAM,OAnStC,KAS2B,gBAAgB,IAAI,IAAa,IAAI,IAAkB,WACvD,aAAa,IAAI,IAAa,IAAI,IAAkB,U,uHC7CnE,E,eAAZ,SAAY,GACRmF,IAAA,iBACAA,IAAA,qBACA,uBACA,mBAJJ,CAAY,MAAS,KAOrB,IAAa,EAAb,WACM,SAAF,EAA4B,EAA+B,GAAwB,oBAAvD,aAA+B,mBAEnD,WAAQ,EAAU,MAH5B,uBAAE,IAAJ,UAAI,MAAJ,WAMY,KAAK,UAAY,KAAK,YAAY,SAClC,KAAK,MAAQ,EAAU,MAG3B,KAAK,MAAQ,EAAU,QACvB,KAAK,YAAY,iBAXzB,CAAI,IAAJ,QAAI,MAAJ,WAea,KAAK,WACN,KAAK,MAAQ,EAAU,UAhBnC,CAAI,IAAJ,SAAI,MAAJ,WAqBQ,OAAO,KAAK,QAAU,EAAU,OArBxC,CAAI,IAAJ,WAAI,MAAJ,WAyBQ,OAAO,KAAK,UAzBpB,M,yFCPa,EAAb,WAAE,SAAF,IAAI,oBACQ,qBAA6B,EAC7B,gBAA0B,IAAI,MAFxC,uBAAE,IAAJ,UAAI,MAAJ,SAIY,GACJ,KAAK,WAAW,KAAK,KAL7B,CAAI,IAAJ,gBAAI,MAAJ,WAWQ,OADA,KAAK,eACE,KAAK,aAXpB,CAAI,IAAJ,eAAI,MAAJ,WAcwB,WACQ,IAApB,KAAK,YAA4B,KAAK,WAAW,aAAe,IAAU,MAC1E,KAAK,WAAW,KAAK,KAAK,YAE9B,eAAK,kBAAL,SAAiB,QACjB,KAAK,WAAa,KAAK,WAAW,YAnB1C,M,+FCQa,EAAb,WAAE,SAAF,IAAI,oBACiB,WAAQ,IAAI,MAD/B,uBAAE,IAAJ,MAAI,MAAJ,WAIQ,GAA0B,IAAtB,KAAK,MAAM,OACX,MAAM,IAAI,MAAM,yCAEpB,IAAM,EAAQ,KAAK,MAAM,MACzB,QAAc,IAAV,EACA,MAAM,IAAI,MAAM,6BAEpB,OAAO,IAXf,CAAI,IAAJ,cAAI,MAAJ,WAeQ,IAAM,EAAQ,KAAK,MACnB,OAAO,aAAiB,IAAgB,EAAM,MAAQ,IAhB9D,CAAI,IAAJ,OAAI,MAAJ,SAmBS,GACD,KAAK,MAAM,KAAK,OApBxB,K,QCsBa,EAAb,WACM,SAAF,EAA6B,EAAkC,GAA0B,oBAA5D,cAAkC,iBADjE,uBAAE,IAAJ,cAAI,MAAJ,SAOwB,GACV,OAAE,GACJ,KAAK,IAAmB,UAEpB,YADA,KAAK,OAAO,MAAM,MAGpB,UAAI,MAAJ,8BAAiC,IAAmB,GAApD,sDAbd,CAAI,IAAJ,kBAAI,MAAJ,SAgB4B,EAAwB,GAC5C,OAAQ,GACJ,KAAK,IAAmB,MAEpB,IADA,EAAQ,EAAmB,QAAQ,cAEd,KACjB,aAAiB,KACjB,aAAiB,KACjB,aAAiB,IAGjB,YADA,KAAK,OAAO,MAAM,EAAM,MAAM,YAGlC,MACI,KAAH,IAAmB,SAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,OAAO,MAAM,EAAM,MAAM,SAAS,KAG3C,MACJ,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAAc,CAC/B,IAAK,EAAM,MACP,MAAM,IAAI,MAAM,qBAEpB,OAEJ,MACJ,KAAK,IAAmB,KAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IACjB,MAAM,IAAI,MAAJ,2BAA8B,EAAM,QAE9C,MACI,KAAH,IAAmB,IACpB,GAAI,aAAiB,IAAe,CAChC,IAAM,EAAe,EAAM,MAC3B,GAAI,aAAwB,IAExB,YADA,EAAM,MAAQ,IAAI,IAAa,EAAa,MAAQ,IAI5D,MACJ,KAAK,IAAmB,IACpB,GAAI,aAAiB,IAAe,CAChC,IAAM,EAAe,EAAM,MAC3B,GAAI,aAAwB,IAExB,YADA,EAAM,MAAQ,IAAI,IAAa,EAAa,MAAQ,IAI5D,MACJ,KAAK,IAAmB,UAGpB,YADA,QAAQ,KAAK,mCAEjB,KAAK,IAAmB,MAGpB,YADA,QAAQ,KAAK,+BAEjB,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAa,EAAM,MAAM,SAGrD,MACJ,KAAK,IAAmB,KAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,KAAK,EAAM,SAGvD,MACJ,KAAK,IAAmB,IAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,IAAI,EAAM,SAGtD,MACJ,KAAK,IAAmB,IAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,IAAI,EAAM,SAGtD,MACJ,KAAK,IAAmB,IAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,IAAI,EAAM,SAGtD,MACJ,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,KAAK,EAAM,SAGvD,MACJ,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,KAAK,EAAM,SAGvD,MACJ,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,KAAK,KAAK,EAAM,SAGvD,MACJ,KAAK,IAAmB,IAGpB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,OAAO,YAE9C,KAAK,IAAmB,IAGpB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,OAAO,YAE9C,KAAK,IAAmB,YAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAe,OAAO,aAAa,EAAM,SAGrE,MACJ,KAAK,IAAmB,OAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAU,EAAM,QAG5C,MACJ,KAAK,IAAmB,UAEpB,IADA,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAM,SAG1D,MACJ,KAAK,IAAmB,OAEpB,IADAvG,EAAQ,EAAmB,QAAQ,cACd,IAEjB,YADA,KAAK,UAAU,KAAK,IAAI,IAAW,EAAM,QAK/C,UAAI,MAAJ,8BAAiC,IAAmB,GAApD,mDA3Kd,CAAI,IAAJ,kBAAI,MAAJ,SA8K4B,EAAwB,EAAmB,GACzD,OAAE,GACJ,KAAK,IAAmB,OAGpB,GAFA,EAAQ,EAAmB,QAAQ,IACnC,EAAS,EAAmB,QAAQ,cACd,KAAgB,aAAiB,MAC9C,EAAO,MAER,MAAM,IAAI,MAAJ,iCAAoC,EAApC,MAKd,MACI,KAAH,IAAmB,IAEpB,GADA,EAAQ,EAAmB,QAAQ,GAC/B,aAAkB,IAAe,CACjC,IAAM,EAAe,EAAO,MAC5B,GAAI,aAAwB,KAAgB,aAAiB,IAEzD,YADA,EAAO,MAAQ,IAAI,IAAa,EAAa,MAAQ,EAAM,QAInE,MACI,KAAH,IAAmB,IAEpB,GADA,EAAQ,EAAmB,QAAQ,GAC/B,aAAkB,IAAe,CACjC,IAAM,EAAe,EAAO,MAC5B,GAAI,aAAwB,KAAgB,aAAiB,IAEzD,YADA,EAAO,MAAQ,IAAI,IAAa,EAAa,MAAQ,EAAM,QAInE,MACJ,KAAK,IAAmB,OACpB,EAAQ,EAAmB,QAAQ,IACnC,EAAS,EAAmB,QAAQ,cACd,KAAgB,aAAiB,KACnD,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,KAAK,SAAW,EAAM,OAAS,EAAO,QAIlG,MAAM,IAAI,MAAJ,8BAAiC,IAAmB,GAApD,oDAxNd,CAAI,IAAJ,oBAAI,MAAJ,SA4N8B,GAEtB,MAAM,IAAI,MAAM,yCA9NxB,CAAI,IAAJ,SAAI,MAAJ,SAkOW,GACH,GAA8B,IAA1B,EAAK,UAAU,OACf,MAAM,IAAI,MACN,yGAGF,OAAK,UAAU,aAAc,KAC/B,MAAM,IAAI,MACN,8GAKR,IAFM,MAAK,EAAK,WACV,EAAO,IAAI,MACR,EAAI,EAAG,EAAI,EAAK,UAAU,GAAG,eAAgB,EAClD,EAAK,KAAK,KAAK,UAAU,OAE7B,GAAI,IAAO,IAAmB,uBAI9B,OAAQ,EAAK,QACT,KAAK,EACD,KAAK,YAAY,GACjB,MACJ,KAAK,EACD,KAAK,gBAAgB,EAAI,EAAK,IAC9B,MACJ,KAAK,EACD,KAAK,gBAAgB,EAAI,EAAK,GAAI,EAAK,IACvC,MACJ,QACI,MAAM,IAAI,MAAJ,8BAAiC,EAAjC,kBAA6C,EAAK,OAAlD,8CAdV,KAAK,kBAAkB,MAnPnC,EAAI,IAAJ,UAAI,MAAJ,SAG2B,GACnB,OAAO,aAAiB,IAAgB,EAAM,MAAQ,MAJ9D,K,gBCOa,EAAb,WACM,SAAF,EAA6B,EAAkC,GAA0B,oBAA5D,cAAkC,oBAEvD,eAA6B,IAAI,EACjC,uBAAoB,IAAI,EAAmB,KAAK,OAAQ,KAAK,WA+V7D,eAAgC,EAnW1C,uBAAE,IAAJ,SAAI,MAAJ,WAOQ,OAAO,KAAK,YAAY,WAPhC,CAAI,IAAJ,YAAI,MAAJ,WAWQ,OAAO,KAAK,OAAO,KAAK,KAAK,gBAXrC,CAAI,IAAJ,kBAAI,MAAJ,WAeQ,IAAM,EAAU,KAAK,YACrB,OAAO,KAAK,OAAO,KAAK,EAAQ,UAhBxC,CAAI,IAAJ,MAAI,MAAJ,WAkDQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,GAAI,aAAiB,KAAa,aAAgB,IAC9C,KAAK,UAAU,KAAK,IAAI,IAAU,EAAK,MAAQ,EAAM,aAGzD,GAAI,aAAiB,KAAc,aAAgB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAW,EAAK,MAAQ,EAAM,YAD1D,CAIA,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAK,MAAQ,EAAM,YA7D/E,CAAI,IAAJ,MAAI,MAAJ,WAoEQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,GAAI,aAAiB,KAAc,aAAgB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAW,EAAK,MAAQ,EAAM,YAD1D,CAIA,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAK,MAAQ,EAAM,YA3E/E,CAAI,IAAJ,MAAI,MAAJ,WAkFQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,GAAI,aAAiB,KAAc,aAAgB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAW,EAAK,MAAQ,EAAM,YAD1D,CAIA,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAK,MAAQ,EAAM,YAzF/E,CAAI,IAAJ,MAAI,MAAJ,WAgGQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,GAAI,aAAiB,KAAc,aAAgB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAW,EAAK,MAAQ,EAAM,YAD1D,CAIA,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAK,MAAQ,EAAM,YAvG/E,CAAI,IAAJ,SAAI,MAAJ,WA8GQ,IAAM,EAAQ,KAAK,UAAU,cAC7B,GAAI,aAAiB,IACjB,KAAK,UAAU,KAAK,IAAI,KAAY,EAAM,YAD9C,CAIA,KAAI,aAAiB,KAIrB,MAAM,IAAI,MAAJ,4BAHF,KAAK,UAAU,KAAK,IAAI,KAAc,EAAM,WApHxD,CAAI,IAAJ,MAAI,MAAJ,WA2HQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,GAAI,aAAiB,KAAc,aAAgB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAW,EAAK,MAAQ,EAAM,YAD1D,CAIA,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,KAAK,MAAM,EAAK,MAAQ,EAAM,YAlI/E,CAAI,IAAJ,mBAAI,MAAJ,SAyIQ,EACA,EACA,GAEA,GAAI,aAAgB,KAAgB,aAAiB,IACjD,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,cAGxD,GAAF,aAAgB,KAAc,aAAiB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,cAGxD,GAAF,aAAgB,KAAa,aAAiB,IAC9C,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,aADxD,CAIN,KAAI,aAAgB,KAAkB,aAAiB,KAIvD,MAAM,IAAIwG,MAAJ,wCAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,YA1JtE,CAAI,IAAJ,kBAAI,MAAJ,SAiKQ,EACA,EACA,GAEA,GAAI,aAAgB,KAAgB,aAAiB,IACjD,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,cAG9D,GAAI,aAAgB,KAAgB,aAAiB,IACjD,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,cAG9D,GAAI,aAAgB,KAAc,aAAiB,IAC/C,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,cAG9D,GAAI,aAAgB,KAAa,aAAiB,IAC9C,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,aAD9D,CAIA,KAAI,aAAgB,KAAkB,aAAiB,KAIvD,MAAM,IAAI,MAAJ,oCAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAG,EAAK,MAAO,EAAM,YAtLtE,CAAI,IAAJ,kBAAI,MAAJ,SA4L4B,GACpB,IAAM,EAAQ,KAAK,UAAU,cAC7B,QAAc,IAAV,EACA,MAAM,IAAI,MAAJ,mCAEV,IAAM,EAAO,KAAK,UAAU,cAC5B,QAAa,IAAT,EACA,MAAM,IAAI,MAAJ,kCAEV,OAAQ,GACJ,KAAK,IAAa,MAEd,YADA,KAAK,gBAAgB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,IAAM,KAEtD,KAAK,IAAa,SAEd,YADA,KAAK,gBAAgB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,IAAM,KAEtD,KAAK,IAAa,KAEd,YADA,KAAK,iBAAiB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,EAAI,KAErD,KAAK,IAAa,UAEd,YADA,KAAK,iBAAiB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,GAAK,KAEtD,KAAK,IAAa,QAEd,YADA,KAAK,iBAAiB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,EAAI,KAErD,KAAK,IAAa,aAEd,YADA,KAAK,iBAAiB,EAAM,GAAO,SAAC,EAAG,GAAJ,OAAU,GAAK,KAG1D,MAAM,IAAI,MAAJ,4BAzNd,CAAI,IAAJ,MAAI,MAAJ,WA6NQ,IAAM,EAAQ,KAAK,UAAU,cAC7B,KAAI,aAAiB,KAIrB,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,KAAc,EAAM,UA/NxD,CAAI,IAAJ,KAAI,MAAJ,WAsOQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,wBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAK,OAAS,EAAM,UAzOrE,CAAI,IAAJ,MAAI,MAAJ,WAgPQ,IAAM,EAAQ,KAAK,UAAU,cACvB,EAAO,KAAK,UAAU,cAC5B,KAAI,aAAiB,KAAgB,aAAgB,KAIrD,MAAM,IAAI,MAAJ,yBAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAK,OAAS,EAAM,UAnPrE,CAAI,IAAJ,oBAAI,MAAJ,SAyP8B,EAAuB,GAC7C,IAAK,EAAO,aACR,MAAM,IAAI,MAAM,4CAEpB,GAAI,aAAgB,IAApB,CACQ,EAAO,iBAAiB,KACxB,EAAO,MAAM,WAEjB,IAAM,EAAY,KAAK,OAAO,gBAAgB,EAAM,KAAK,cACzD,EAAO,MAAQ,MALnB,CASA,KAAI,aAAgB,KAKpB,MAAM,IAAI,MAAM,4CAJZ,EAAO,MAAQ,IAAI,IAAU,OAvQzC,CAAI,IAAJ,yBAAI,MAAJ,SA+QQ,EACA,GAAiD,WAE3C,EAAQ,IAAI,MAClB,EAAO,WAAW,WAAW,SAAQ,kBAAM,EAAM,KAAK,EAAK,UAAU,kBACrE,IAAM,EAAQ,IAAI,IAAc,EAAO,gBAAY,GACnD,KAAK,kBAAkB,EAAO,GAC9B,EAAO,MAAM,IAAI,EAAO,KAtRhC,CAAI,IAAJ,YAAI,MAAJ,SAyRsB,GACd,IAAM,EAAO,EAAS,GACtB,GACwB,IAApB,EAAS,UACP,aAAgB,KAAuB,EAAY,wBAAwB,IAE7E,MAAM,IAAI,MAAM,oDAEd,MAAS,KAAK,UAAU,MAExB,GAAF,aAAkB,IAClB,KAAK,kBAAkB,EAAQ,OAD7B,CAKN,KAAI,aAAkB,KAKtB,MAAM,IAAI,MAAM,mDAJZ,KAAK,uBAAuB,EAAQ,MAzShD,CAAI,IAAJ,eAAI,MAAJ,WAgTwB,WACV,EAAS,KAAK,UAAU,MAC9B,KAAM,aAAkB,KAAiB,aAAkB,KACvD,MAAM,IAAI,MAAM,kCAGpB,GAAI,aAAkB,IAClB,OAAI,EAAO,iBAAiB,SACxB,EAAO,MAAM,gBAGjB,EAAO,WAAQ,GAGnB,IAAM,EAAQ,IAAI,MAClB,EAAO,WAAW,WAAW,SAAQ,kBAAM,EAAM,KAAK,EAAK,UAAU,kBACrE,IAAM,EAAW,EAAO,MAAM,IAAI,GAC9B,aAAoB,IACpB,EAAS,WAGb,EAAO,MAAM,OAAO,KArU5B,CAAI,IAAJ,cAAI,MAAJ,SAwUwB,GAA6B,WACvC,EAAU,IAAI,IAAa,GAWjC,OAVA,EAAW,KAAK,SAAQ,SAAC,GACrB,IAAM,EAAQ,EAAK,UAAU,cAC7B,IAAK,EAAY,eAAe,GAC5B,MAAM,IAAI,MAAM,oFAEpB,IAAK,EAAY,uBAAuB,EAAM,GAC1C,MAAM,IAAI,MAAM,4CAEpB,EAAQ,OAAO,KAAK,MAEjB,IApVf,CAAI,IAAJ,aAAI,MAAJ,SAuVuB,GACT,GAAkB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,2CAEpB,IAAM,EAAU,KAAK,UAAU,MAC/B,KAAM,aAAmB,KACrB,MAAM,IAAI,MAAM,uCAEpB,IAAM,EAAU,KAAK,YAAY,EAAS,IAC1C,KAAK,OAAO,KAAK,EAAS,KAhWlC,CAAI,IAAJ,gBAAI,MAAJ,SAqW0B,GAAoC,WACtD,GAAwB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,6CAEpB,IAAM,EAAa,EAAS,GACtB,EAAS,KAAK,UAAU,cAC9B,KAAM,aAAkB,KACpB,MAAM,IAAI,MAAM,+BAEpB,KAAK,KAAO,WACR,IAAM,EAAU,EAAK,OAAO,QAAQ,EAAQ,GAC5C,OAAI,IAAY,IAAQ,qBAGR,IAAZ,IACA,EAAQ,OAAO,SAAQ,SAAC,GACpB,EAAK,UAAU,KAAK,GACpB,EAAK,oBAEF,KAIV,KAAK,SACN,KAAK,UAAO,KA7XxB,CAAI,IAAJ,gBAAI,MAAJ,WAkYc,MAAK,KAAK,UAAU,cAC1B,KAAM,aAAc,KAEhB,MAAM,IAAI,MAAM,kDAEpB,IAAM,EAAU,KAAK,UAAU,MAC/B,KAAM,aAAmB,KACrB,MAAM,IAAI,MAAM,8BAMpB,KAAK,OAAO,QAAQ,EAAI,KA/YhC,CAAI,IAAJ,mBAAI,MAAJ,WAmZQ,IAAM,EAAS,KAAK,UAAU,cAC9B,KAAM,aAAkB,KACpB,MAAM,IAAI,MAAM,gCAEpB,IAAM,EAAU,KAAK,UAAU,MAC/B,KAAM,aAAmB,KACrB,MAAM,IAAI,MAAM,uCAEpB,KAAK,OAAO,WAAW,EAAQ,KA3ZvC,CAAI,IAAJ,qBAAI,MAAJ,SA+Z+B,GAAoC,WAC3D,GAAwB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,6CAEpB,IAAM,EAAa,EAAS,GACtB,EAAS,KAAK,UAAU,cAC9B,KAAM,aAAkB,KACpB,MAAM,IAAI,MAAM,4CAEpB,KAAK,KAAO,WACR,IAAM,EAAU,EAAK,OAAO,YAAY,GACxC,YAAgB,IAAZ,IAGA,IAAM,EAAQ,WAAY,IAC1B,EAAK,UAAU,KAAK,IAAI,KAAa,KAC9B,IAEX,EAAK,UAAU,KAAK,IAAI,KAAa,KAC9B,KAEN,KAAK,SACN,KAAK,UAAO,KArbxB,CAAI,IAAJ,mBAAI,MAAJ,SAyb6B,GACrB,GAAwB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,6CAEd,MAAa,EAAS,GACtB,EAAS,KAAK,UAAU,cACxB,kBAAkB,KACpB,MAAM,IAAI,MAAM,4CAEpB,IAAM,EAAU,KAAK,OAAO,YAAY,QACxB,IAAZ,GAAyB,IAAM,EAAQ,WAAY,GACnD,KAAK,UAAU,KAAK,IAAI,KAAa,IAGzC,KAAK,UAAU,KAAK,IAAI,KAAa,MAvc7C,CAAI,IAAJ,mBAAI,MAAJ,SA0c6B,GACrB,GAAwB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,wBAEpB,KAAK,kBAAkB,OAAO,EAAS,MA9c/C,CAAI,IAAJ,sBAAI,MAAJ,SAidgC,GAAoC,WAC5D,GAAwB,IAApB,EAAS,UAAkB,EAAS,aAAc,KAClD,MAAM,IAAI,MAAM,2BAGd,MAAO,IAAI,MACX,EAAG,GAAG,WAAW,SAAQ,WAC3B,IAAM,EAAQ,EAAK,UAAU,cAC7B,KAAI,aAAiB,KAAoB,EAAY,eAAe,IAIpE,MAAM,IAAI,MAAM,sCAHZ,EAAK,KAAK,MAKZ,KAAD,YAAY,KAAK,EAAS,GAAI,KA/d3C,CAAI,IAAJ,eAAI,MAAJ,WAmec,KAAD,YAAY,sBAnezB,CAAI,IAAJ,cAAI,MAAJ,SAsewB,GAChB,KAAI,EAAS,OAAS,GAAK,EAAS,aAAc,KAIlD,MAAM,IAAI,MAAJ,kCAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAS,GAAG,iBAxe7D,CAAI,IAAJ,WAAI,MAAJ,SA8eqB,GACP,KAAF,EAAS,QAAU,GAAK,EAAS,aAAc,KAInD,MAAM,IAAI,MAAJ,+BAHF,KAAK,UAAU,KAAK,IAAI,IAAU,EAAS,GAAG,iBAhf1D,CAAI,IAAJ,gBAAI,MAAJ,SAsf0B,GAClB,KAAI,EAAS,QAAU,GAAK,EAAS,aAAc,KAInD,MAAM,IAAIA,MAAJ,oCAHFpF,KAAKqF,UAAUtC,KAAK,IAAI,IAAe,EAAS,GAAG,iBAxf/D,CAAI,IAAJ,YAAI,MAAJ,SA8fsB,GACd,KAAI,EAAS,OAAS,GAAK,EAAS,aAAc,KAIlD,MAAM,IAAI,MAAJ,gCAHF,KAAK,UAAU,KAAK,IAAI,IAAW,EAAS,GAAG,iBAhgB3D,CAAI,IAAJ,cAAI,MAAJ,SAsgBwB,GAChB,KAAI,EAAS,OAAS,GAAK,EAAS,aAAc,KAIlD,MAAM,IAAI,MAAJ,kCAHF,KAAK,UAAU,KAAK,IAAI,IAAa,EAAS,GAAG,iBAxgB7D,CAAI,IAAJ,gBAAI,MAAJ,WA8gByB,WACX,EAAQ,KAAK,UAAU,cACvB,EAAW,KAAK,UAAU,MAChC,GAAI,aAAoB,IAAe,CACnC,IAAK,EAAS,aACV,MAAM,IAAI,MAAM,sCAEpB,IAAM,EAAW,EAAS,MAC1B,QAAiB,IAAb,IAA2B,EAAY,eAAe,IAAU,aAAiB,KAEjF,YADA,EAAS,MAAQ,GAGrB,GACK,aAAiB,KAAgB,aAAoB,KACrD,aAAiB,KAAc,aAAoB,KACnD,aAAiB,KAAgB,aAAoB,KACrD,aAAiB,KAAkB,aAAoB,KACvD,aAAiB,KAAa,aAAoB,KAClD,aAAiB,KAAoB,aAAoB,IAG1D,YADA,EAAS,MAAQ,GAInB,GAAF,aAAoB,IAAoB,CACxC,IAAM,EAAQ,IAAI,MAGlB,OAFA,EAAS,WAAW,WAAW,SAAQ,kBAAM,EAAM,KAAK,EAAK,UAAU,uBACvE,EAAS,MAAM,IAAI,EAAO,GAGxB,UAAI,MAAJ,iCA5iBd,CAAI,IAAJ,eAAI,MAAJ,SA+iByB,GAAoC,WAC/C,GAAkB,IAApB,EAAS,OACT,MAAM,IAAI,MAAM,oDAEd,GAAF,EAAS,aAAc,IAAoB,CAC3C,IAAI,EAAW,KAAK,YAAY,UAAU,MAAK,SAAC,GAAD,OAAc,EAAS,aAAe,EAAS,MAC9F,QAAiB,IAAb,EAAwB,CACyB,MAAjD,GAAI,KAAK,wBAAwB,IAC7B,EAAQ,UAAG,KAAK,yBAAR,aAAG,EAAwB,UAAU,MAAK,SAAC,GAAD,OAC9C,IAAM,EAAU,WAAY,EAAS,OAG7C,QAAiB,IAAb,EACA,MAAM,IAAI,MAAM,qBAGxB,GAAI,aAAoB,IAEpB,YADA/C,KAAK,UAAU,KAAK,GAGxB,GAAI,aAAoB,IAAoB,CACxC,IAAM,EAAgB,KAAK,YAAY,UAAU,MAAK,SAAC,GAAD,OAClD,IAAM,EAAU,WAAY,EAAS,OAEzC,QAAsB,IAAlB,EACA,MAAM,IAAI,MAAM,2BAEpB,IAAM,EAAQ,IAAI,MAGlB,OAFA,EAAc,WAAW,WAAW,SAAQ,kBAAM,EAAM,KAAK,EAAK,UAAU,uBAC5EA,KAAK,UAAU,KAAK,EAAS,MAAM,IAAI,KAIzC,UAAI,MAAJ,gCAhlBd,CAAI,IAAJ,cAAI,MAAJ,SAmlBwB,GAChB,GAAwB,IAApB,EAAS,QAAgB,EAAS,aAAc,IAAqB,CACrE,IAAM,EAAU,KAAK,UAAU,cAC/B,GAAI,aAAmB,IAAkB,CACrC,IAAM,EAAU,KAAK,OAAO,WAAW,EAAS,GAAI,GAEpD,YADAA,KAAK,UAAU,KAAK,IAItB,UAAI,MAAJ,+BA5lBd,CAAI,IAAJ,WAAI,MAAJ,WAgmBQ,KAAI,KAAK,wBAAwB,KAAkB,KAAK,wBAAwB,KAI1E,UAAI,MAAM,0CAHZ,KAAK,UAAU,KAAK,KAAK,gBAjmBrC,CAAI,IAAJ,SAAI,MAAJ,SAumBmB,GACL,GAAkB,IAApB,EAAS,OACT,MAAM,IAAI,MAAJ,4CAEJ,MAAU,EAAS,GACzB,KAAI,aAAmB,KAIjB,UAAI,MAAJ,gBAHF,KAAK,YAAY,KAAK,KA7mBlC,CAAI,IAAJ,sBAAI,MAAJ,SAmnBgC,EAAiB,GACnC,MAAY,KAAK,UAAU,MACjC,GAAwB,IAApB,EAAS,OACT,MAAM,IAAI,MAAJ,4CAEV,GAAI,aAAqB,KAAgB,EAAS,aAAc,IAC5D,OAAI,EAAU,QAAU,OACpB,KAAK,OAAO,QAGhB,EAEE,UAAI,MAAJ,8BA/nBd,CAAI,IAAJ,cAAI,MAAJ,WAmoBQ,IAAI,KAAK,YAAY,SAArB,CAGA,QAAkB,IAAd,KAAK,KAAoB,CACzB,GAAI,KAAK,OACL,OAEJ,KAAK,UAAO,EAEV,MAAkB,KAAK,YAAY,QACnC,QAAkB,IAApB,EAGE,OAAE,EAAgB,MACpB,KAAK,IAAa,IACd,KAAK,MACL,MACJ,KAAK,IAAa,SACd,KAAK,MACL,MACJ,KAAK,IAAa,SACd,KAAK,MACL,MACJ,KAAK,IAAa,OACdA,KAAK,MACL,MACJ,KAAK,IAAa,OACdA,KAAK,SACL,MACJ,KAAK,IAAa,OACdA,KAAK,MACL,MACJ,KAAK,IAAa,MAClB,KAAK,IAAa,KAClB,KAAK,IAAa,UAClB,KAAK,IAAa,QAClB,KAAK,IAAa,aAClB,KAAK,IAAa,SACd,KAAK,gBAAgB,EAAgB,MACrC,MACJ,KAAK,IAAa,IACd,KAAK,MACL,MACJ,KAAK,IAAa,QACd,KAAK,KACL,MACJ,KAAK,IAAa,SACd,KAAK,MACL,MACJ,KAAK,IAAa,IACd,KAAK,UAAU,EAAgB,WAC/B,MACJ,KAAK,IAAa,OACd,KAAK,eACL,MACJ,KAAK,IAAa,KACd,KAAK,WAAW,EAAgB,WAChC,MACJ,KAAK,IAAa,QACd,KAAK,cAAc,EAAgB,WACnC,MACJ,KAAK,IAAa,QACd,KAAK,gBACL,MACJ,KAAK,IAAa,WACd,KAAK,mBACL,MACJ,KAAK,IAAa,YACd,KAAK,mBAAmB,EAAgB,WACxC,MACJ,KAAK,IAAa,UACd,KAAK,iBAAiB,EAAgB,WACtC,MACJ,KAAK,IAAa,WACd,KAAK,iBAAiB,EAAgB,WACtC,MACJ,KAAK,IAAa,cACd,KAAK,oBAAoB,EAAgB,WACzC,MACJ,KAAK,IAAa,OACd,KAAK,eACL,MACJ,KAAK,IAAa,oBACd,KAAK,YAAY,EAAgB,WACjC,MACJ,KAAK,IAAa,iBACd,KAAK,SAAS,EAAgB,WAC9B,MACJ,KAAK,IAAa,sBACd,KAAK,cAAc,EAAgB,WACnC,MACJ,KAAK,IAAa,kBACd,KAAK,UAAU,EAAgB,WAC/B,MACJ,KAAK,IAAa,oBACd,KAAK,YAAY,EAAgB,WACjC,MACJ,KAAK,IAAa,KACd,MAAM,IAAI,MAAM,8BACpB,KAAK,IAAa,cACd,KAAK,gBACL,MACJ,KAAK,IAAa,aACd,KAAK,aAAa,EAAgB,WAClC,MACJ,KAAK,IAAa,YACd,KAAK,YAAY,EAAgB,WACjC,MACJ,KAAK,IAAa,SACd,KAAK,WACL,MACJ,KAAK,IAAa,MAEd,QAAQ,KAAK,kBACb,MACJ,KAAK,IAAa,cAEd,QAAQ,KAAK,2BACb,MACJ,KAAK,IAAa,cAEd,QAAQ,KAAK,2BACb,MACJ,KAAK,IAAa,iBAEd,QAAQ,KAAK,8BACb,MACJ,KAAK,IAAa,iBAEd,QAAQ,KAAK,8BACb,MACJ,KAAK,IAAa,OACd,KAAK,OAAO,EAAgB,WAC5B,MACJ,KAAK,IAAa,WACd,KAAK,qBAAoB,EAAM,EAAgB,WAC/C,MACJ,KAAK,IAAa,YACd,KAAK,qBAAoB,EAAO,EAAgB,WAChD,MACJ,KAAK,IAAa,OACd,MAAM,IAAI,MAAM,sCACpB,KAAK,IAAa,WACd,MAAM,IAAI,MAAM,4CAlxBhC,EAAI,IAAJ,0BAAI,MAAJ,SAmB2C,GACnC,OACI,aAAsB,KACtB,aAAsB,KACtB,aAAsB,KACtB,aAAsB,KACtB,aAAsB,MAzBlC,CAAI,IAAJ,iBAAI,MAAJ,SA6BkC,GAC1B,OACI,aAAiB,KACjB,aAAiB,KACjB,aAAiB,KACjB,aAAiB,KACjB,aAAiB,MAnC7B,CAAI,IAAJ,yBAAI,MAAJ,SAuC0C,EAA4B,GAC9D,OACK,aAAsB,KAAqB,aAAiB,KAC5D,aAAsB,KAAmB,aAAiB,KAC1D,aAAsB,KAAuB,aAAiB,KAC9D,aAAsB,KAAkB,aAAiB,KACzD,aAAsB,KAAqB,aAAiB,QA7CzE,M,gBCjCA,IAAIsF,EAAW,SAAU7H,GACvB,aAEA,IAEIgH,EAFAc,EAAKlH,OAAOkB,UACZiG,EAASD,EAAG/F,eAEZiG,EAA4B,oBAAX/G,OAAwBA,OAAS,GAClDgH,EAAiBD,EAAQ9D,UAAY,aACrCgE,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQ9G,aAAe,gBAE/C,SAASmH,EAAOpE,EAAKxC,EAAKN,GAOxB,OANAP,OAAOC,eAAeoD,EAAKxC,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZyC,cAAc,EACdC,UAAU,IAELS,EAAIxC,GAEb,IAEE4G,EAAO,GAAI,IACX,MAAOtB,GACPsB,EAAS,SAASpE,EAAKxC,EAAKN,GAC1B,OAAO8C,EAAIxC,GAAON,GAItB,SAASmH,EAAKC,EAASC,EAASpE,EAAMqE,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQ1G,qBAAqB6G,EAAYH,EAAUG,EAC/EC,EAAYhI,OAAOY,OAAOkH,EAAe5G,WACzC+G,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,QAsMZ,SAA0BR,EAASnE,EAAMyE,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQ3C,GAC7B,GAAIyC,IAAUG,EACZ,MAAM,IAAIxB,MAAM,gCAGlB,GAAIqB,IAAUI,EAAmB,CAC/B,GAAe,UAAXF,EACF,MAAM3C,EAKR,OAAO8C,IAMT,IAHAR,EAAQK,OAASA,EACjBL,EAAQtC,IAAMA,IAED,CACX,IAAI+C,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQK,OAGVL,EAAQa,KAAOb,EAAQc,MAAQd,EAAQtC,SAElC,GAAuB,UAAnBsC,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQI,EACFP,EAAQtC,IAGhBsC,EAAQe,kBAAkBf,EAAQtC,SAEN,WAAnBsC,EAAQK,QACjBL,EAAQgB,OAAO,SAAUhB,EAAQtC,KAGnCyC,EAAQG,EAER,IAAIW,EAASC,EAASxB,EAASnE,EAAMyE,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQnC,KACZ0C,EACAa,EAEAH,EAAOvD,MAAQkD,EACjB,SAGF,MAAO,CACLtI,MAAO2I,EAAOvD,IACdG,KAAMmC,EAAQnC,MAGS,UAAhBoD,EAAOE,OAChBhB,EAAQI,EAGRP,EAAQK,OAAS,QACjBL,EAAQtC,IAAMuD,EAAOvD,OA9QP2D,CAAiB3B,EAASnE,EAAMyE,GAE7CD,EAcT,SAASmB,EAASjD,EAAI7C,EAAKsC,GACzB,IACE,MAAO,CAAEyD,KAAM,SAAUzD,IAAKO,EAAGzG,KAAK4D,EAAKsC,IAC3C,MAAOQ,GACP,MAAO,CAAEiD,KAAM,QAASzD,IAAKQ,IAhBjC/G,EAAQsI,KAAOA,EAoBf,IAAIW,EAAyB,iBACzBgB,EAAyB,iBACzBd,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,GAMvB,SAASd,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBpC,GAAkB,WAClC,OAAO1F,MAGT,IAAI+H,EAAW1J,OAAOgE,eAClB2F,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MAC/DD,GACAA,IAA4BzC,GAC5BC,EAAO1H,KAAKkK,EAAyBtC,KAGvCoC,EAAoBE,GAGtB,IAAIE,EAAKL,EAA2BtI,UAClC6G,EAAU7G,UAAYlB,OAAOY,OAAO6I,GAWtC,SAASK,EAAsB5I,GAC7B,CAAC,OAAQ,QAAS,UAAU6I,SAAQ,SAASzB,GAC3Cb,EAAOvG,EAAWoH,GAAQ,SAAS3C,GACjC,OAAOhE,KAAKwG,QAAQG,EAAQ3C,SAkClC,SAASqE,EAAchC,EAAWiC,GAChC,SAASC,EAAO5B,EAAQ3C,EAAKJ,EAASC,GACpC,IAAI0D,EAASC,EAASnB,EAAUM,GAASN,EAAWrC,GACpD,GAAoB,UAAhBuD,EAAOE,KAEJ,CACL,IAAItF,EAASoF,EAAOvD,IAChBpF,EAAQuD,EAAOvD,MACnB,OAAIA,GACiB,kBAAVA,GACP4G,EAAO1H,KAAKc,EAAO,WACd0J,EAAY1E,QAAQhF,EAAM4J,SAASnE,MAAK,SAASzF,GACtD2J,EAAO,OAAQ3J,EAAOgF,EAASC,MAC9B,SAASW,GACV+D,EAAO,QAAS/D,EAAKZ,EAASC,MAI3ByE,EAAY1E,QAAQhF,GAAOyF,MAAK,SAASoE,GAI9CtG,EAAOvD,MAAQ6J,EACf7E,EAAQzB,MACP,SAAS+B,GAGV,OAAOqE,EAAO,QAASrE,EAAON,EAASC,MAvBzCA,EAAO0D,EAAOvD,KA4BlB,IAAI0E,EAgCJ1I,KAAKwG,QA9BL,SAAiBG,EAAQ3C,GACvB,SAAS2E,IACP,OAAO,IAAIL,GAAY,SAAS1E,EAASC,GACvC0E,EAAO5B,EAAQ3C,EAAKJ,EAASC,MAIjC,OAAO6E,EAaLA,EAAkBA,EAAgBrE,KAChCsE,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAUT,GACrC,IAAIK,EAASI,EAASpF,SAAS2E,EAAQK,QACvC,GAAIA,IAAWlC,EAAW,CAKxB,GAFA6B,EAAQS,SAAW,KAEI,UAAnBT,EAAQK,OAAoB,CAE9B,GAAII,EAASpF,SAAT,SAGF2E,EAAQK,OAAS,SACjBL,EAAQtC,IAAMS,EACdwC,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQK,QAGV,OAAOO,EAIXZ,EAAQK,OAAS,QACjBL,EAAQtC,IAAM,IAAIlE,UAChB,kDAGJ,OAAOoH,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASpF,SAAU2E,EAAQtC,KAEzD,GAAoB,UAAhBuD,EAAOE,KAIT,OAHAnB,EAAQK,OAAS,QACjBL,EAAQtC,IAAMuD,EAAOvD,IACrBsC,EAAQS,SAAW,KACZG,EAGT,IAAIjD,EAAOsD,EAAOvD,IAElB,OAAMC,EAOFA,EAAKE,MAGPmC,EAAQS,EAAS6B,YAAc3E,EAAKrF,MAGpC0H,EAAQuC,KAAO9B,EAAS+B,QAQD,WAAnBxC,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQtC,IAAMS,GAUlB6B,EAAQS,SAAW,KACZG,GANEjD,GA3BPqC,EAAQK,OAAS,QACjBL,EAAQtC,IAAM,IAAIlE,UAAU,oCAC5BwG,EAAQS,SAAW,KACZG,GAoDX,SAAS6B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBhJ,KAAKsJ,WAAWvG,KAAKkG,GAGvB,SAASM,EAAcN,GACrB,IAAI1B,EAAS0B,EAAMO,YAAc,GACjCjC,EAAOE,KAAO,gBACPF,EAAOvD,IACdiF,EAAMO,WAAajC,EAGrB,SAAShB,EAAQL,GAIflG,KAAKsJ,WAAa,CAAC,CAAEJ,OAAQ,SAC7BhD,EAAYkC,QAAQW,EAAc/I,MAClCA,KAAKyJ,OAAM,GA8Bb,SAASxB,EAAOyB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAShE,GAC9B,GAAIiE,EACF,OAAOA,EAAe7L,KAAK4L,GAG7B,GAA6B,oBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAAS5I,QAAS,CAC3B,IAAInD,GAAK,EAAGkL,EAAO,SAASA,IAC1B,OAASlL,EAAI+L,EAAS5I,QACpB,GAAI0E,EAAO1H,KAAK4L,EAAU/L,GAGxB,OAFAkL,EAAKjK,MAAQ8K,EAAS/L,GACtBkL,EAAK1E,MAAO,EACL0E,EAOX,OAHAA,EAAKjK,MAAQ6F,EACboE,EAAK1E,MAAO,EAEL0E,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM/B,GAIjB,SAASA,IACP,MAAO,CAAElI,MAAO6F,EAAWN,MAAM,GA+MnC,OA5mBAyD,EAAkBrI,UAAY2I,EAAG1G,YAAcqG,EAC/CA,EAA2BrG,YAAcoG,EACzCA,EAAkBiC,YAAc/D,EAC9B+B,EACAhC,EACA,qBAaFpI,EAAQqM,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOvI,YAClD,QAAOwI,IACHA,IAASpC,GAG2B,uBAAnCoC,EAAKH,aAAeG,EAAK9L,QAIhCT,EAAQwM,KAAO,SAASF,GAQtB,OAPI1L,OAAOsG,eACTtG,OAAOsG,eAAeoF,EAAQlC,IAE9BkC,EAAOnF,UAAYiD,EACnB/B,EAAOiE,EAAQlE,EAAmB,sBAEpCkE,EAAOxK,UAAYlB,OAAOY,OAAOiJ,GAC1B6B,GAOTtM,EAAQyM,MAAQ,SAASlG,GACvB,MAAO,CAAEwE,QAASxE,IAsEpBmE,EAAsBE,EAAc9I,WACpC8I,EAAc9I,UAAUoG,GAAuB,WAC7C,OAAO3F,MAETvC,EAAQ4K,cAAgBA,EAKxB5K,EAAQ0M,MAAQ,SAASnE,EAASC,EAASpE,EAAMqE,EAAaoC,QACxC,IAAhBA,IAAwBA,EAAclE,SAE1C,IAAIgG,EAAO,IAAI/B,EACbtC,EAAKC,EAASC,EAASpE,EAAMqE,GAC7BoC,GAGF,OAAO7K,EAAQqM,oBAAoB7D,GAC/BmE,EACAA,EAAKvB,OAAOxE,MAAK,SAASlC,GACxB,OAAOA,EAAOgC,KAAOhC,EAAOvD,MAAQwL,EAAKvB,WAuKjDV,EAAsBD,GAEtBpC,EAAOoC,EAAIrC,EAAmB,aAO9BqC,EAAGxC,GAAkB,WACnB,OAAO1F,MAGTkI,EAAGzE,SAAW,WACZ,MAAO,sBAkCThG,EAAQ0F,KAAO,SAAS9D,GACtB,IAAI8D,EAAO,GACX,IAAK,IAAIjE,KAAOG,EACd8D,EAAKJ,KAAK7D,GAMZ,OAJAiE,EAAKkH,UAIE,SAASxB,IACd,KAAO1F,EAAKrC,QAAQ,CAClB,IAAI5B,EAAMiE,EAAKmH,MACf,GAAIpL,KAAOG,EAGT,OAFAwJ,EAAKjK,MAAQM,EACb2J,EAAK1E,MAAO,EACL0E,EAQX,OADAA,EAAK1E,MAAO,EACL0E,IAsCXpL,EAAQwK,OAASA,EAMjB1B,EAAQhH,UAAY,CAClBiC,YAAa+E,EAEbkD,MAAO,SAASc,GAcd,GAbAvK,KAAKwK,KAAO,EACZxK,KAAK6I,KAAO,EAGZ7I,KAAKmH,KAAOnH,KAAKoH,MAAQ3C,EACzBzE,KAAKmE,MAAO,EACZnE,KAAK+G,SAAW,KAEhB/G,KAAK2G,OAAS,OACd3G,KAAKgE,IAAMS,EAEXzE,KAAKsJ,WAAWlB,QAAQmB,IAEnBgB,EACH,IAAK,IAAIrM,KAAQ8B,KAEQ,MAAnB9B,EAAKuM,OAAO,IACZjF,EAAO1H,KAAKkC,KAAM9B,KACjB0L,OAAO1L,EAAKwM,MAAM,MACrB1K,KAAK9B,GAAQuG,IAMrBkG,KAAM,WACJ3K,KAAKmE,MAAO,EAEZ,IACIyG,EADY5K,KAAKsJ,WAAW,GACLE,WAC3B,GAAwB,UAApBoB,EAAWnD,KACb,MAAMmD,EAAW5G,IAGnB,OAAOhE,KAAK6K,MAGdxD,kBAAmB,SAASyD,GAC1B,GAAI9K,KAAKmE,KACP,MAAM2G,EAGR,IAAIxE,EAAUtG,KACd,SAAS+K,EAAOC,EAAKC,GAYnB,OAXA1D,EAAOE,KAAO,QACdF,EAAOvD,IAAM8G,EACbxE,EAAQuC,KAAOmC,EAEXC,IAGF3E,EAAQK,OAAS,OACjBL,EAAQtC,IAAMS,KAGNwG,EAGZ,IAAK,IAAItN,EAAIqC,KAAKsJ,WAAWxI,OAAS,EAAGnD,GAAK,IAAKA,EAAG,CACpD,IAAIsL,EAAQjJ,KAAKsJ,WAAW3L,GACxB4J,EAAS0B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAO6B,EAAO,OAGhB,GAAI9B,EAAMC,QAAUlJ,KAAKwK,KAAM,CAC7B,IAAIU,EAAW1F,EAAO1H,KAAKmL,EAAO,YAC9BkC,EAAa3F,EAAO1H,KAAKmL,EAAO,cAEpC,GAAIiC,GAAYC,EAAY,CAC1B,GAAInL,KAAKwK,KAAOvB,EAAME,SACpB,OAAO4B,EAAO9B,EAAME,UAAU,GACzB,GAAInJ,KAAKwK,KAAOvB,EAAMG,WAC3B,OAAO2B,EAAO9B,EAAMG,iBAGjB,GAAI8B,GACT,GAAIlL,KAAKwK,KAAOvB,EAAME,SACpB,OAAO4B,EAAO9B,EAAME,UAAU,OAG3B,KAAIgC,EAMT,MAAM,IAAI/F,MAAM,0CALhB,GAAIpF,KAAKwK,KAAOvB,EAAMG,WACpB,OAAO2B,EAAO9B,EAAMG,gBAU9B9B,OAAQ,SAASG,EAAMzD,GACrB,IAAK,IAAIrG,EAAIqC,KAAKsJ,WAAWxI,OAAS,EAAGnD,GAAK,IAAKA,EAAG,CACpD,IAAIsL,EAAQjJ,KAAKsJ,WAAW3L,GAC5B,GAAIsL,EAAMC,QAAUlJ,KAAKwK,MACrBhF,EAAO1H,KAAKmL,EAAO,eACnBjJ,KAAKwK,KAAOvB,EAAMG,WAAY,CAChC,IAAIgC,EAAenC,EACnB,OAIAmC,IACU,UAAT3D,GACS,aAATA,IACD2D,EAAalC,QAAUlF,GACvBA,GAAOoH,EAAahC,aAGtBgC,EAAe,MAGjB,IAAI7D,EAAS6D,EAAeA,EAAa5B,WAAa,GAItD,OAHAjC,EAAOE,KAAOA,EACdF,EAAOvD,IAAMA,EAEToH,GACFpL,KAAK2G,OAAS,OACd3G,KAAK6I,KAAOuC,EAAahC,WAClBlC,GAGFlH,KAAKqL,SAAS9D,IAGvB8D,SAAU,SAAS9D,EAAQ8B,GACzB,GAAoB,UAAhB9B,EAAOE,KACT,MAAMF,EAAOvD,IAcf,MAXoB,UAAhBuD,EAAOE,MACS,aAAhBF,EAAOE,KACTzH,KAAK6I,KAAOtB,EAAOvD,IACM,WAAhBuD,EAAOE,MAChBzH,KAAK6K,KAAO7K,KAAKgE,IAAMuD,EAAOvD,IAC9BhE,KAAK2G,OAAS,SACd3G,KAAK6I,KAAO,OACa,WAAhBtB,EAAOE,MAAqB4B,IACrCrJ,KAAK6I,KAAOQ,GAGPnC,GAGToE,OAAQ,SAASlC,GACf,IAAK,IAAIzL,EAAIqC,KAAKsJ,WAAWxI,OAAS,EAAGnD,GAAK,IAAKA,EAAG,CACpD,IAAIsL,EAAQjJ,KAAKsJ,WAAW3L,GAC5B,GAAIsL,EAAMG,aAAeA,EAGvB,OAFApJ,KAAKqL,SAASpC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACP/B,IAKb,MAAS,SAASgC,GAChB,IAAK,IAAIvL,EAAIqC,KAAKsJ,WAAWxI,OAAS,EAAGnD,GAAK,IAAKA,EAAG,CACpD,IAAIsL,EAAQjJ,KAAKsJ,WAAW3L,GAC5B,GAAIsL,EAAMC,SAAWA,EAAQ,CAC3B,IAAI3B,EAAS0B,EAAMO,WACnB,GAAoB,UAAhBjC,EAAOE,KAAkB,CAC3B,IAAI8D,EAAShE,EAAOvD,IACpBuF,EAAcN,GAEhB,OAAOsC,GAMX,MAAM,IAAInG,MAAM,0BAGlBoG,cAAe,SAAS9B,EAAUd,EAAYE,GAa5C,OAZA9I,KAAK+G,SAAW,CACdpF,SAAUsG,EAAOyB,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhB9I,KAAK2G,SAGP3G,KAAKgE,IAAMS,GAGNyC,IAQJzJ,EA7sBM,CAotBgBC,EAAOD,SAGtC,IACEgO,mBAAqBnG,EACrB,MAAOoG,GAUP1I,SAAS,IAAK,yBAAdA,CAAwCsC,K,cCzuB1C,IAOIqG,EACAC,EARAC,EAAUnO,EAAOD,QAAU,GAU/B,SAASqO,IACL,MAAM,IAAI1G,MAAM,mCAEpB,SAAS2G,IACL,MAAM,IAAI3G,MAAM,qCAsBpB,SAAS4G,EAAWC,GAChB,GAAIN,IAAqBO,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKN,IAAqBG,IAAqBH,IAAqBO,WAEhE,OADAP,EAAmBO,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAON,EAAiBM,EAAK,GAC/B,MAAM/G,GACJ,IAEI,OAAOyG,EAAiB7N,KAAK,KAAMmO,EAAK,GAC1C,MAAM/G,GAEJ,OAAOyG,EAAiB7N,KAAKkC,KAAMiM,EAAK,MAvCnD,WACG,IAEQN,EADsB,oBAAfO,WACYA,WAEAJ,EAEzB,MAAO5G,GACLyG,EAAmBG,EAEvB,IAEQF,EADwB,oBAAjBO,aACcA,aAEAJ,EAE3B,MAAO7G,GACL0G,EAAqBG,GAjB5B,GAwED,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAatL,OACbuL,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAMvL,QACN4L,KAIR,SAASA,IACL,IAAIJ,EAAJ,CAGA,IAAIK,EAAUX,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAIM,EAAMP,EAAMvL,OACV8L,GAAK,CAGP,IAFAR,EAAeC,EACfA,EAAQ,KACCE,EAAaK,GACdR,GACAA,EAAaG,GAAYM,MAGjCN,GAAc,EACdK,EAAMP,EAAMvL,OAEhBsL,EAAe,KACfE,GAAW,EAnEf,SAAyBQ,GACrB,GAAIlB,IAAuBO,aAEvB,OAAOA,aAAaW,GAGxB,IAAKlB,IAAuBG,IAAwBH,IAAuBO,aAEvE,OADAP,EAAqBO,aACdA,aAAaW,GAExB,IAEWlB,EAAmBkB,GAC5B,MAAO5H,GACL,IAEI,OAAO0G,EAAmB9N,KAAK,KAAMgP,GACvC,MAAO5H,GAGL,OAAO0G,EAAmB9N,KAAKkC,KAAM8M,KAgD7CC,CAAgBJ,IAiBpB,SAASK,EAAKf,EAAKgB,GACfjN,KAAKiM,IAAMA,EACXjM,KAAKiN,MAAQA,EAYjB,SAASC,KA5BTrB,EAAQsB,SAAW,SAAUlB,GACzB,IAAIrJ,EAAO,IAAI1C,MAAMD,UAAUa,OAAS,GACxC,GAAIb,UAAUa,OAAS,EACnB,IAAK,IAAInD,EAAI,EAAGA,EAAIsC,UAAUa,OAAQnD,IAClCiF,EAAKjF,EAAI,GAAKsC,UAAUtC,GAGhC0O,EAAMtJ,KAAK,IAAIiK,EAAKf,EAAKrJ,IACJ,IAAjByJ,EAAMvL,QAAiBwL,GACvBN,EAAWU,IASnBM,EAAKzN,UAAUsN,IAAM,WACjB7M,KAAKiM,IAAIxJ,MAAM,KAAMzC,KAAKiN,QAE9BpB,EAAQuB,MAAQ,UAChBvB,EAAQwB,SAAU,EAClBxB,EAAQyB,IAAM,GACdzB,EAAQ0B,KAAO,GACf1B,EAAQ2B,QAAU,GAClB3B,EAAQ4B,SAAW,GAInB5B,EAAQ6B,GAAKR,EACbrB,EAAQ8B,YAAcT,EACtBrB,EAAQ+B,KAAOV,EACfrB,EAAQgC,IAAMX,EACdrB,EAAQiC,eAAiBZ,EACzBrB,EAAQkC,mBAAqBb,EAC7BrB,EAAQmC,KAAOd,EACfrB,EAAQoC,gBAAkBf,EAC1BrB,EAAQqC,oBAAsBhB,EAE9BrB,EAAQsC,UAAY,SAAUjQ,GAAQ,MAAO,IAE7C2N,EAAQuC,QAAU,SAAUlQ,GACxB,MAAM,IAAIkH,MAAM,qCAGpByG,EAAQwC,IAAM,WAAc,MAAO,KACnCxC,EAAQyC,MAAQ,SAAUC,GACtB,MAAM,IAAInJ,MAAM,mCAEpByG,EAAQ2C,MAAQ,WAAa,OAAO,I,oFCvLrB,SAASC,EAAkBC,EAAK9B,IAClC,MAAPA,GAAeA,EAAM8B,EAAI5N,UAAQ8L,EAAM8B,EAAI5N,QAE/C,IAAK,IAAInD,EAAI,EAAGgR,EAAO,IAAIzO,MAAM0M,GAAMjP,EAAIiP,EAAKjP,IAC9CgR,EAAKhR,GAAK+Q,EAAI/Q,GAGhB,OAAOgR,ECHM,SAASC,EAAmBF,GACzC,OCJa,SAA4BA,GACzC,GAAIxO,MAAMkD,QAAQsL,GAAM,OAAO,EAAiBA,GDGzC,CAAkBA,IELZ,SAA0BtE,GACvC,GAAsB,qBAAX1L,QAA0BA,OAAOiD,YAAYtD,OAAO+L,GAAO,OAAOlK,MAAM2O,KAAKzE,GFIvD,CAAgBsE,IGJpC,SAAqCtQ,EAAG0Q,GACrD,GAAK1Q,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAG0Q,GACtD,IAAI1P,EAAIf,OAAOkB,UAAUkE,SAAS3F,KAAKM,GAAGsM,MAAM,GAAI,GAEpD,MADU,WAANtL,GAAkBhB,EAAEoD,cAAapC,EAAIhB,EAAEoD,YAAYtD,MAC7C,QAANkB,GAAqB,QAANA,EAAoBc,MAAM2O,KAAKzQ,GACxC,cAANgB,GAAqB,2CAA2C2P,KAAK3P,GAAW,EAAiBhB,EAAG0Q,QAAxG,GHFyD,CAA2BJ,IILvE,WACb,MAAM,IAAI5O,UAAU,wIJIwE,G,kCKD/E,SAAS,EAAiB+C,GACvC,IAAImM,EAAwB,oBAARC,IAAqB,IAAIA,SAAQxK,EA8BrD,OA5BA,EAAmB,SAA0B5B,GAC3C,GAAc,OAAVA,ICRkC0B,EDQE1B,GCPsB,IAAzDG,SAASS,SAAS3F,KAAKyG,GAAI2K,QAAQ,kBDOQ,OAAOrM,ECR5C,IAA2B0B,EDUtC,GAAqB,oBAAV1B,EACT,MAAM,IAAI/C,UAAU,sDAGtB,GAAsB,qBAAXkP,EAAwB,CACjC,GAAIA,EAAOG,IAAItM,GAAQ,OAAOmM,EAAOxQ,IAAIqE,GAEzCmM,EAAOI,IAAIvM,EAAOwM,GAGpB,SAASA,IACP,OAAO,OAAA7M,EAAA,GAAUK,EAAO5C,UAAW,OAAAoC,EAAA,GAAerC,MAAMwB,aAW1D,OARA6N,EAAQ9P,UAAYlB,OAAOY,OAAO4D,EAAMtD,UAAW,CACjDiC,YAAa,CACX5C,MAAOyQ,EACP9Q,YAAY,EACZ0C,UAAU,EACVD,cAAc,KAGX,OAAA2D,EAAA,GAAe0K,EAASxM,KAGTA,GEhB1B,IAUK,GAAL,SAAK,GACC,EAAF,eADJ,CAAK,MAAgB,KAMd,IAuBK,EAvBC,EAAb,kDACI,WAAY,GAA2B,qDAAV,EAAU,iCAAV,EAAU,yBACnC,uBAAM,GAAN,OAAoB,KAkBL,KAAyB,EAAiB,IAnBtB,EAD3C,2DAKwB,GAChB,KAAI,EAAM,OAAS,GAAnB,CAGA,IAAM,EAAY,EAAM,QACxB,QAAkB,IAAd,EAAJ,CAGA,IAAM,EAAS,IAAI,EAAiB,GAIpC,OAHA,EAAM,SAAQ,SAAC,GACX,EAAO,KAAK,MAET,QAjBf,KAAsC,SAuBtC,SAAY,GACR,gBACA,eACA,eAHJ,CAAY,MAAY,KCvDxB,ICAY,EDAC,EAAb,WACM,SAAF,EAAmB,EAAqB,GAAiB,oBAAtC,YAAqB,iBAD1C,uBAAE,IAAJ,YAAI,MAAJ,SAOc,GACN,OAAI,KAAK,KAAO,EAAM,MAAS,KAAK,OAAS,EAAM,MAAQ,KAAK,UAAY,EAAM,UACvE,EAAa,GAEpB,KAAK,KAAO,EAAM,MAAS,KAAK,OAAS,EAAM,MAAQ,KAAK,UAAY,EAAM,UACvE,EAAa,GAEjB,EAAa,MAd5B,EAAI,IAAJ,OAAI,MAAJ,SAGgByM,GACR,OAAOA,aAAiBC,EAAiBD,EAAQ,IAAIC,EAAeD,EAAME,KAAMF,EAAMG,eAJ9F,KAkBa,EAAb,WACM,SAAF,EAAmB,EAAwB,GAAa,oBAArC,aAAwB,WAD7C,4BAAE,IAAJ,QAAI,MAAJ,SAGiB3M,EAAU,GACnB,IAAM4M,EAAgB,EAAeb,KAAK/L,EAAE6M,OAAOC,UAAU1M,EAAEyM,OACzDE,EAAc,EAAehB,KAAK/L,EAAEgN,KAAKF,UAAU1M,EAAE4M,KAO3D,OAAO,IAAI,EAJP,IAAkB,EAAa,GAAK,EAAE,MAAQ,IAAkB,EAAa,GAAK,EAAE,MAAQ,EAAE,MAE9F,IAAgB,EAAa,GAAK,EAAE,IAAM,IAAgB,EAAa,GAAK,EAAE,IAAM,EAAE,SAVlG,KAgBa,EAAb,WACM,SAAF,EAAmB,EAAoB,GAAkB,oBAAtC,WAAoB,aADzC,4BAAE,IAAJ,QAAI,MAAJ,SAGiB,EAAa,GACtB,GAAI,EAAE,MAAQ,EAAE,IACZ,MAAM,MAAM,kCAEhB,OAAO,IAAI,EAAehN,EAAE,IAAK,EAAY,MAAM,EAAE,MAAO,EAAE,YAPtE,KC+BM,SAAU,EAAc,GACxB,OAAM,GACA,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,QACL,OAAO,EAAI,QACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,OACL,OAAO,EAAI,OACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,eACL,OAAO,EAAI,eACX,KAAC,EAAI,OACL,OAAO,EAAI,OACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,WACL,OAAO,EAAI,WACX,KAAC,EAAI,kBACL,OAAO,EAAI,kBACX,KAAC,EAAI,mBACL,OAAO,EAAI,mBACX,KAAC,EAAI,gBACL,OAAO,EAAI,gBACX,KAAC,EAAI,iBACL,OAAO,EAAI,iBACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,QACL,OAAO,EAAI,QACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,OACL,OAAO,EAAI,OACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,OACL,OAAO,EAAI,OACX,KAAC,EAAI,WACL,OAAO,EAAI,WACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,UACL,OAAO,EAAI,UACX,KAAC,EAAI,QACL,OAAO,EAAI,QACX,KAAC,EAAI,aACL,OAAO,EAAI,aACX,KAAC,EAAI,WACL,OAAO,EAAI,WACX,KAAC,EAAI,SACL,OAAO,EAAI,SACX,KAAC,EAAI,KACL,OAAO,EAAI,KACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,MACL,OAAO,EAAI,MACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,IACL,OAAO,EAAI,IACX,KAAC,EAAI,GACL,OAAO,EAAI,GACX,KAAC,EAAI,gBACL,OAAO,EAAI,gBACX,KAAC,EAAI,aACL,OAAO,EAAI,aACf,QACI,SA9LZ,SAAY,GACRiN,EAAA,UACAA,EAAA,cACAA,EAAA,oBACAA,EAAA,kBACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,YACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,sBACAA,EAAA,uBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,UACAA,EAAA,UACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,kBACAA,EAAA,QACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,QACAA,EAAA,YACAA,EAAA,cACAA,EAAA,YACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,UACAA,EAAA,SACAA,EAAA,eACAA,EAAA,YACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,QACA,sBACA,mBA9DJ,CAAY,MAAG,KAkMf,IAkBW,EAlBW,EAAtB,WACM,SAAF,EAAoB,GAAwB,oBAAxB,gBADtB,uBAAE,IAAJ,cAAI,MAAJ,WAIQ,OAAO,KAAK,aAJpB,MAkBA,SAAW,GACL,EAAF,eADJ,CAAW,MAAa,KAIxB,IAsCK,EAtCQ,EAAb,kDACI,WAAY,GAAwB,kCAChC,cAAM,IAGS,UAA2B,EAAc,IAJxB,EADxC,UAAgC,GAQnB,EAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAQ,kCAClD,cAAM,IADoC,MAAQ,EADxD,uBAAE,IAAJ,SAAI,MAAJ,WAMQ,OAAO,KAAK,QANpB,GAA8B,GAUjB,EAAb,kDACI,WAAY,EAAkC,GAAkB,kCAC5D,cAAM,IADoC,aAAkB,EADpE,4DAMQ,OAAO,KAAK,eANpB,GAAqC,GAUf,EAAtB,kDACI,WAAY,EAAkC,GAAa,kCACvD,cAAM,IADoC,QAAa,EAD/D,wDAMQ,OAAO,KAAK,UANpB,GAA0C,IAU1C,SAAK,GACD,iBADJ,CAAK,MAAiB,KAGtB,IAIK,EAJQ,EAAb,iG,2BACuB,KAA0B,EAAkB,IADnE,YAAoC,IAIpC,SAAK,GACD,iBADJ,CAAK,MAAqB,KAG1B,IAIK,EAJQ,EAAb,iG,2BACuB,KAA8B,EAAsB,IAD3E,YAAwC,IAIxC,SAAK,GACD,iBADJ,CAAK,MAAmB,KAGxB,ICzQWC,EAwBAC,EA2BAC,EAwBAC,EA4BAC,EA8BAC,EAyBAC,EA2BAC,EAmBAC,EAsCAC,EAwBAC,EAwBAC,EAoBAC,EAyCAC,EA8BAC,EAwCAC,EAiBAC,EAqBAC,EAsBAC,EAqBAC,GD7OE,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAA0B,GAAgB,kCACpF,SAAAnR,KAAM,EAAU,EAAQ,SAAG,GAAM,KADS,WAA0B,aAYrD,OAA4B,EAAoB,IAZqB,EAD1F,uBAAE,IAAJ,cAAI,MAAJ,WAMQ,OAAO,KAAK,WANpB,CAAI,IAAJ,cAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,GAAsC,GAgBzB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAY,kCACtD,cAAM,IADoC,OAAY,EAD5D,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,SANpB,GAA+B,ICxR/B,SAAWgQ,GASPA,EAAS/Q,OAHT,SAAgBuQ,EAAMC,GAClB,MAAO,CAAED,KAAMA,EAAMC,UAAWA,IAUpCO,EAASoB,GAJT,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGC,cAAcF,IAAcC,GAAGE,OAAOH,EAAU7B,OAAS8B,GAAGE,OAAOH,EAAU5B,YAf/F,CAkBGO,IAAaA,EAAW,KAM3B,SAAWC,GAYPA,EAAMhR,OAXN,SAAgBwS,EAAKC,EAAKC,EAAOC,GAC7B,GAAIN,GAAGE,OAAOC,IAAQH,GAAGE,OAAOE,IAAQJ,GAAGE,OAAOG,IAAUL,GAAGE,OAAOI,GAClE,MAAO,CAAEjC,MAAOK,EAAS/Q,OAAOwS,EAAKC,GAAM5B,IAAKE,EAAS/Q,OAAO0S,EAAOC,IAEtE,GAAI5B,EAASoB,GAAGK,IAAQzB,EAASoB,GAAGM,GACrC,MAAO,CAAE/B,MAAO8B,EAAK3B,IAAK4B,GAG1B,MAAM,IAAItM,MAAM,8CAAgDqM,EAAM,KAAOC,EAAM,KAAOC,EAAQ,KAAOC,EAAO,MAWxH3B,EAAMmB,GAJN,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGC,cAAcF,IAAcrB,EAASoB,GAAGC,EAAU1B,QAAUK,EAASoB,GAAGC,EAAUvB,MAlBpG,CAqBGG,IAAUA,EAAQ,KAMrB,SAAWC,GASPA,EAASjR,OAHT,SAAgB4S,EAAKC,GACjB,MAAO,CAAED,IAAKA,EAAKC,MAAOA,IAU9B5B,EAASkB,GAJT,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcpB,EAAMmB,GAAGC,EAAUS,SAAWR,GAAGU,OAAOX,EAAUQ,MAAQP,GAAG7M,UAAU4M,EAAUQ,OAfzH,CAkBG3B,IAAaA,EAAW,KAM3B,SAAWC,GAWPA,EAAalR,OAHb,SAAgBgT,EAAWC,EAAaC,EAAsBC,GAC1D,MAAO,CAAEH,UAAWA,EAAWC,YAAaA,EAAaC,qBAAsBA,EAAsBC,qBAAsBA,IAY/HjC,EAAaiB,GANb,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcpB,EAAMmB,GAAGC,EAAUa,cAAgBZ,GAAGU,OAAOX,EAAUY,aAC/EhC,EAAMmB,GAAGC,EAAUc,uBAAyBb,GAAG7M,UAAU4M,EAAUc,yBACnElC,EAAMmB,GAAGC,EAAUe,uBAAyBd,GAAG7M,UAAU4M,EAAUe,wBAnBnF,CAsBGjC,IAAiBA,EAAe,KAMnC,SAAWC,GAYPA,EAAMnR,OARN,SAAgBoT,EAAKC,EAAOC,EAAMC,GAC9B,MAAO,CACHH,IAAKA,EACLC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,IAcfpC,EAAMgB,GAPN,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGE,OAAOH,EAAUgB,MACpBf,GAAGE,OAAOH,EAAUiB,QACpBhB,GAAGE,OAAOH,EAAUkB,OACpBjB,GAAGE,OAAOH,EAAUmB,QArBnC,CAwBGpC,IAAUA,EAAQ,KAMrB,SAAWC,GAUPA,EAAiBpR,OANjB,SAAgB6S,EAAOW,GACnB,MAAO,CACHX,MAAOA,EACPW,MAAOA,IAWfpC,EAAiBe,GAJjB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOqR,EAAMmB,GAAGC,EAAUS,QAAU1B,EAAMgB,GAAGC,EAAUoB,QAhB/D,CAmBGpC,IAAqBA,EAAmB,KAM3C,SAAWC,GAWPA,EAAkBrR,OAPlB,SAAgByT,EAAOC,EAAUC,GAC7B,MAAO,CACHF,MAAOA,EACPC,SAAUA,EACVC,oBAAqBA,IAa7BtC,EAAkBc,GANlB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGU,OAAOX,EAAUqB,SACnBpB,GAAG7M,UAAU4M,EAAUsB,WAAa7B,EAASM,GAAGC,MAChDC,GAAG7M,UAAU4M,EAAUuB,sBAAwBtB,GAAGuB,WAAWxB,EAAUuB,oBAAqB9B,EAASM,MAnBrH,CAsBGd,IAAsBA,EAAoB,KAK7C,SAAWC,GAIPA,EAAgB,QAAc,UAI9BA,EAAgB,QAAc,UAI9BA,EAAgB,OAAa,SAZjC,CAaGA,IAAqBA,EAAmB,KAM3C,SAAWC,GAoBPA,EAAavR,OAhBb,SAAgB6T,EAAWC,EAASC,EAAgBC,EAAcC,GAC9D,IAAI/Q,EAAS,CACT2Q,UAAWA,EACXC,QAASA,GAWb,OATIzB,GAAGS,QAAQiB,KACX7Q,EAAO6Q,eAAiBA,GAExB1B,GAAGS,QAAQkB,KACX9Q,EAAO8Q,aAAeA,GAEtB3B,GAAGS,QAAQmB,KACX/Q,EAAO+Q,KAAOA,GAEX/Q,GAaXqO,EAAaY,GAPb,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGE,OAAOH,EAAUyB,YAAcxB,GAAGE,OAAOH,EAAUyB,aACrDxB,GAAG7M,UAAU4M,EAAU2B,iBAAmB1B,GAAGE,OAAOH,EAAU2B,mBAC9D1B,GAAG7M,UAAU4M,EAAU4B,eAAiB3B,GAAGE,OAAOH,EAAU4B,iBAC5D3B,GAAG7M,UAAU4M,EAAU6B,OAAS5B,GAAGU,OAAOX,EAAU6B,QA7BpE,CAgCG1C,IAAiBA,EAAe,KAMnC,SAAWC,GAUPA,EAA6BxR,OAN7B,SAAgBkU,EAAUC,GACtB,MAAO,CACHD,SAAUA,EACVC,QAASA,IAWjB3C,EAA6BW,GAJ7B,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcnB,EAASkB,GAAGC,EAAU8B,WAAa7B,GAAGU,OAAOX,EAAU+B,UAhB/F,CAmBG3C,IAAiCA,EAA+B,KAKnE,SAAWC,GAIPA,EAAmBtL,MAAQ,EAI3BsL,EAAmB2C,QAAU,EAI7B3C,EAAmB4C,YAAc,EAIjC5C,EAAmB6C,KAAO,EAhB9B,CAiBG7C,IAAuBA,EAAqB,KAO/C,SAAWC,GAOPA,EAAc6C,YAAc,EAM5B7C,EAAc8C,WAAa,EAb/B,CAcG9C,IAAkBA,EAAgB,KAMrC,SAAWC,GAoBPA,EAAW3R,OAhBX,SAAgB6S,EAAOsB,EAASM,EAAUC,EAAMrQ,EAAQsQ,GACpD,IAAIzR,EAAS,CAAE2P,MAAOA,EAAOsB,QAASA,GAatC,OAZI9B,GAAGS,QAAQ2B,KACXvR,EAAOuR,SAAWA,GAElBpC,GAAGS,QAAQ4B,KACXxR,EAAOwR,KAAOA,GAEdrC,GAAGS,QAAQzO,KACXnB,EAAOmB,OAASA,GAEhBgO,GAAGS,QAAQ6B,KACXzR,EAAOyR,mBAAqBA,GAEzBzR,GAgBXyO,EAAWQ,GAVX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IACXpB,EAAMmB,GAAGC,EAAUS,QACnBR,GAAGU,OAAOX,EAAU+B,WACnB9B,GAAGE,OAAOH,EAAUqC,WAAapC,GAAG7M,UAAU4M,EAAUqC,aACxDpC,GAAGE,OAAOH,EAAUsC,OAASrC,GAAGU,OAAOX,EAAUsC,OAASrC,GAAG7M,UAAU4M,EAAUsC,SACjFrC,GAAGU,OAAOX,EAAU/N,SAAWgO,GAAG7M,UAAU4M,EAAU/N,WACtDgO,GAAG7M,UAAU4M,EAAUuC,qBAAuBtC,GAAGuB,WAAWxB,EAAUuC,mBAAoBnD,EAA6BW,MAhCvI,CAmCGR,IAAeA,EAAa,KAM/B,SAAWC,GAePA,EAAQ5R,OAXR,SAAgBmO,EAAOyG,GAEnB,IADA,IAAIjR,EAAO,GACFkR,EAAK,EAAGA,EAAK7T,UAAUa,OAAQgT,IACpClR,EAAKkR,EAAK,GAAK7T,UAAU6T,GAE7B,IAAI3R,EAAS,CAAEiL,MAAOA,EAAOyG,QAASA,GAItC,OAHIvC,GAAGS,QAAQnP,IAASA,EAAK9B,OAAS,IAClCqB,EAAOlC,UAAY2C,GAEhBT,GAUX0O,EAAQO,GAJR,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGU,OAAOX,EAAUjE,QAAUkE,GAAGU,OAAOX,EAAUwC,UArB1F,CAwBGhD,IAAYA,EAAU,KAMzB,SAAWC,GASPA,EAASiD,QAHT,SAAiBjC,EAAOkC,GACpB,MAAO,CAAElC,MAAOA,EAAOkC,QAASA,IAWpClD,EAASmD,OAHT,SAAgBC,EAAUF,GACtB,MAAO,CAAElC,MAAO,CAAEnC,MAAOuE,EAAUpE,IAAKoE,GAAYF,QAASA,IAUjElD,EAASqD,IAHT,SAAarC,GACT,MAAO,CAAEA,MAAOA,EAAOkC,QAAS,KASpClD,EAASM,GANT,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGC,cAAcF,IACjBC,GAAGU,OAAOX,EAAU2C,UACpB/D,EAAMmB,GAAGC,EAAUS,QA/BlC,CAkCGhB,IAAaA,EAAW,KAM3B,SAAWC,GAOPA,EAAiB9R,OAHjB,SAAgBmV,EAAcC,GAC1B,MAAO,CAAED,aAAcA,EAAcC,MAAOA,IAShDtD,EAAiBK,GANjB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IACXiD,GAAgClD,GAAGC,EAAU+C,eAC7ClU,MAAMkD,QAAQiO,EAAUgD,QAZvC,CAeGtD,IAAqBA,EAAmB,KAE3C,SAAWC,GAWPA,EAAW/R,OAVX,SAAgB4S,EAAK0C,GACjB,IAAIpS,EAAS,CACT+Q,KAAM,SACNrB,IAAKA,GAKT,YAHgB,IAAZ0C,QAA6C,IAAtBA,EAAQC,gBAAmD,IAA3BD,EAAQE,iBAC/DtS,EAAOoS,QAAUA,GAEdpS,GASX6O,EAAWI,GANX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,GAAgC,WAAnBA,EAAU6B,MAAqB5B,GAAGU,OAAOX,EAAUQ,YAC5C,IAAtBR,EAAUkD,eAC2B,IAAhClD,EAAUkD,QAAQC,WAAwBlD,GAAGoD,QAAQrD,EAAUkD,QAAQC,mBAAqD,IAArCnD,EAAUkD,QAAQE,gBAA6BnD,GAAGoD,QAAQrD,EAAUkD,QAAQE,mBAhBrL,CAmBGzD,IAAeA,EAAa,KAE/B,SAAWC,GAYPA,EAAWhS,OAXX,SAAgB0V,EAAQC,EAAQL,GAC5B,IAAIpS,EAAS,CACT+Q,KAAM,SACNyB,OAAQA,EACRC,OAAQA,GAKZ,YAHgB,IAAZL,QAA6C,IAAtBA,EAAQC,gBAAmD,IAA3BD,EAAQE,iBAC/DtS,EAAOoS,QAAUA,GAEdpS,GASX8O,EAAWG,GANX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,GAAgC,WAAnBA,EAAU6B,MAAqB5B,GAAGU,OAAOX,EAAUsD,SAAWrD,GAAGU,OAAOX,EAAUuD,eAC3E,IAAtBvD,EAAUkD,eAC2B,IAAhClD,EAAUkD,QAAQC,WAAwBlD,GAAGoD,QAAQrD,EAAUkD,QAAQC,mBAAqD,IAArCnD,EAAUkD,QAAQE,gBAA6BnD,GAAGoD,QAAQrD,EAAUkD,QAAQE,mBAjBrL,CAoBGxD,IAAeA,EAAa,KAE/B,SAAWC,GAWPA,EAAWjS,OAVX,SAAgB4S,EAAK0C,GACjB,IAAIpS,EAAS,CACT+Q,KAAM,SACNrB,IAAKA,GAKT,YAHgB,IAAZ0C,QAA6C,IAAtBA,EAAQM,gBAAsD,IAA9BN,EAAQO,oBAC/D3S,EAAOoS,QAAUA,GAEdpS,GASX+O,EAAWE,GANX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,GAAgC,WAAnBA,EAAU6B,MAAqB5B,GAAGU,OAAOX,EAAUQ,YAC5C,IAAtBR,EAAUkD,eAC2B,IAAhClD,EAAUkD,QAAQM,WAAwBvD,GAAGoD,QAAQrD,EAAUkD,QAAQM,mBAAwD,IAAxCxD,EAAUkD,QAAQO,mBAAgCxD,GAAGoD,QAAQrD,EAAUkD,QAAQO,sBAhBxL,CAmBG5D,IAAeA,EAAa,KAE/B,SAAWC,GAcPA,EAAcC,GAbd,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,SACoB,IAAtBA,EAAU0D,cAAoD,IAA9B1D,EAAU2D,wBACZ,IAA9B3D,EAAU2D,iBAA8B3D,EAAU2D,gBAAgBC,OAAM,SAAUC,GAC/E,OAAI5D,GAAGU,OAAOkD,EAAOhC,MACVlC,EAAWI,GAAG8D,IAAWjE,EAAWG,GAAG8D,IAAWhE,EAAWE,GAAG8D,GAGhEnE,EAAiBK,GAAG8D,QAV/C,CAeG/D,KAAkBA,GAAgB,KACrC,IA+HWgE,GAuBAb,GAwBAc,GA6BAC,GAqBAC,GAcAC,GAgCAC,GAwBAC,GAWAC,GAeAC,GAaAC,GAoBAC,GAiBAC,GAiBAC,GAwBAC,GAmBAC,GAkBAC,GAiCAC,GAOAC,GAwBAC,GA2CAC,GA0EAC,GAsBAC,GAgCAC,GA0BAC,GAsBAC,GAsBAC,GAjvBPC,GAAoC,WACpC,SAASA,EAAmBxC,GACxBrU,KAAKqU,MAAQA,EAoBjB,OAlBAwC,EAAmBtX,UAAU0U,OAAS,SAAUC,EAAUF,GACtDhU,KAAKqU,MAAMtR,KAAK+N,EAASmD,OAAOC,EAAUF,KAE9C6C,EAAmBtX,UAAUwU,QAAU,SAAUjC,EAAOkC,GACpDhU,KAAKqU,MAAMtR,KAAK+N,EAASiD,QAAQjC,EAAOkC,KAE5C6C,EAAmBtX,UAAUuX,OAAS,SAAUhF,GAC5C9R,KAAKqU,MAAMtR,KAAK+N,EAASqD,IAAIrC,KAEjC+E,EAAmBtX,UAAUwX,IAAM,SAAUC,GACzChX,KAAKqU,MAAMtR,KAAKiU,IAEpBH,EAAmBtX,UAAU0X,IAAM,WAC/B,OAAOjX,KAAKqU,OAEhBwC,EAAmBtX,UAAU2X,MAAQ,WACjClX,KAAKqU,MAAM8C,OAAO,EAAGnX,KAAKqU,MAAMvT,SAE7B+V,EAtB6B,IA2BH,WACjC,SAASO,EAAgBC,GACrB,IAAIC,EAAQtX,KACZA,KAAKuX,iBAAmBlZ,OAAOY,OAAO,MAClCoY,IACArX,KAAKwX,eAAiBH,EAClBA,EAAcrC,gBACdqC,EAAcrC,gBAAgB5M,SAAQ,SAAU8M,GAC5C,GAAInE,EAAiBK,GAAG8D,GAAS,CAC7B,IAAIuC,EAAiB,IAAIZ,GAAmB3B,EAAOb,OACnDiD,EAAMC,iBAAiBrC,EAAOd,aAAavC,KAAO4F,MAIrDJ,EAActC,SACnB1W,OAAO8E,KAAKkU,EAActC,SAAS3M,SAAQ,SAAUlJ,GACjD,IAAIuY,EAAiB,IAAIZ,GAAmBQ,EAActC,QAAQ7V,IAClEoY,EAAMC,iBAAiBrY,GAAOuY,MAK9CpZ,OAAOC,eAAe8Y,EAAgB7X,UAAW,OAAQ,CAKrDf,IAAK,WACD,OAAOwB,KAAKwX,gBAEhBjZ,YAAY,EACZyC,cAAc,IAElBoW,EAAgB7X,UAAUmY,kBAAoB,SAAUxY,GACpD,GAAIoV,GAAgClD,GAAGlS,GAAM,CAMzC,GALKc,KAAKwX,iBACNxX,KAAKwX,eAAiB,CAClBxC,gBAAiB,MAGpBhV,KAAKwX,eAAexC,gBACrB,MAAM,IAAI5P,MAAM,0DAEpB,IAAIgP,EAAelV,EAEnB,KADIiD,EAASnC,KAAKuX,iBAAiBnD,EAAavC,MACnC,CACT,IACI8F,EAAmB,CACnBvD,aAAcA,EACdC,MAHAA,EAAQ,IAKZrU,KAAKwX,eAAexC,gBAAgBjS,KAAK4U,GACzCxV,EAAS,IAAI0U,GAAmBxC,GAChCrU,KAAKuX,iBAAiBnD,EAAavC,KAAO1P,EAE9C,OAAOA,EAQP,GALKnC,KAAKwX,iBACNxX,KAAKwX,eAAiB,CAClBzC,QAAS1W,OAAOY,OAAO,SAG1Be,KAAKwX,eAAezC,QACrB,MAAM,IAAI3P,MAAM,kEAEpB,IAAIjD,EACJ,KADIA,EAASnC,KAAKuX,iBAAiBrY,IACtB,CACT,IAAImV,EAAQ,GACZrU,KAAKwX,eAAezC,QAAQ7V,GAAOmV,EACnClS,EAAS,IAAI0U,GAAmBxC,GAChCrU,KAAKuX,iBAAiBrY,GAAOiD,EAEjC,OAAOA,GAGfiV,EAAgB7X,UAAUqY,WAAa,SAAU/F,EAAK0C,GAClDvU,KAAK6X,uBACL7X,KAAKwX,eAAexC,gBAAgBjS,KAAKiO,EAAW/R,OAAO4S,EAAK0C,KAEpE6C,EAAgB7X,UAAUuY,WAAa,SAAUnD,EAAQC,EAAQL,GAC7DvU,KAAK6X,uBACL7X,KAAKwX,eAAexC,gBAAgBjS,KAAKkO,EAAWhS,OAAO0V,EAAQC,EAAQL,KAE/E6C,EAAgB7X,UAAUwY,WAAa,SAAUlG,EAAK0C,GAClDvU,KAAK6X,uBACL7X,KAAKwX,eAAexC,gBAAgBjS,KAAKmO,EAAWjS,OAAO4S,EAAK0C,KAEpE6C,EAAgB7X,UAAUsY,qBAAuB,WAC7C,IAAK7X,KAAKwX,iBAAmBxX,KAAKwX,eAAexC,gBAC7C,MAAM,IAAI5P,MAAM,2DA1FS,IAqGrC,SAAW+P,GAQPA,EAAuBlW,OAHvB,SAAgB4S,GACZ,MAAO,CAAEA,IAAKA,IAUlBsD,EAAuB/D,GAJvB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGU,OAAOX,EAAUQ,MAd5D,CAiBGsD,KAA2BA,GAAyB,KAMvD,SAAWb,GASPA,EAAgCrV,OAHhC,SAAgB4S,EAAKrE,GACjB,MAAO,CAAEqE,IAAKA,EAAKrE,QAASA,IAUhC8G,EAAgClD,GAJhC,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGU,OAAOX,EAAUQ,OAA+B,OAAtBR,EAAU7D,SAAoB8D,GAAGE,OAAOH,EAAU7D,WAfvH,CAkBG8G,KAAoCA,GAAkC,KAMzE,SAAWc,GAWPA,EAAiBnW,OAHjB,SAAgB4S,EAAKmG,EAAYxK,EAASyK,GACtC,MAAO,CAAEpG,IAAKA,EAAKmG,WAAYA,EAAYxK,QAASA,EAASyK,KAAMA,IAUvE7C,EAAiBhE,GAJjB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGU,OAAOX,EAAUQ,MAAQP,GAAGU,OAAOX,EAAU2G,aAAe1G,GAAGE,OAAOH,EAAU7D,UAAY8D,GAAGU,OAAOX,EAAU4G,OAjB3J,CAoBG7C,KAAqBA,GAAmB,KAS3C,SAAWC,GAIPA,EAAW6C,UAAY,YAIvB7C,EAAW8C,SAAW,WAR1B,CASG9C,KAAeA,GAAa,KAC/B,SAAWA,GAQPA,EAAWjE,GAJX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,IAAcgE,EAAW6C,WAAa7G,IAAcgE,EAAW8C,UAN9E,CASG9C,KAAeA,GAAa,KAE/B,SAAWC,GAQPA,EAAclE,GAJd,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGC,cAAc3S,IAAUyW,GAAWjE,GAAGC,EAAU6B,OAAS5B,GAAGU,OAAOX,EAAUzS,QAN/F,CASG0W,KAAkBA,GAAgB,KAKrC,SAAWC,GACPA,EAAmB6C,KAAO,EAC1B7C,EAAmB8C,OAAS,EAC5B9C,EAAmBvS,SAAW,EAC9BuS,EAAmB1V,YAAc,EACjC0V,EAAmB+C,MAAQ,EAC3B/C,EAAmBgD,SAAW,EAC9BhD,EAAmB1S,MAAQ,EAC3B0S,EAAmBiD,UAAY,EAC/BjD,EAAmBkD,OAAS,EAC5BlD,EAAmBmD,SAAW,GAC9BnD,EAAmBoD,KAAO,GAC1BpD,EAAmBqD,MAAQ,GAC3BrD,EAAmBsD,KAAO,GAC1BtD,EAAmBuD,QAAU,GAC7BvD,EAAmBwD,QAAU,GAC7BxD,EAAmBnF,MAAQ,GAC3BmF,EAAmByD,KAAO,GAC1BzD,EAAmB0D,UAAY,GAC/B1D,EAAmB2D,OAAS,GAC5B3D,EAAmB4D,WAAa,GAChC5D,EAAmB6D,SAAW,GAC9B7D,EAAmB8D,OAAS,GAC5B9D,EAAmB+D,MAAQ,GAC3B/D,EAAmBgE,SAAW,GAC9BhE,EAAmBiE,cAAgB,GAzBvC,CA0BGjE,KAAuBA,GAAqB,KAM/C,SAAWC,GAIPA,EAAiB0C,UAAY,EAW7B1C,EAAiBuD,QAAU,EAf/B,CAgBGvD,KAAqBA,GAAmB,KAQ3C,SAAWC,GAIPA,EAAkBhC,WAAa,EAJnC,CAKGgC,KAAsBA,GAAoB,KAM7C,SAAWC,GAQPA,EAAezW,OAHf,SAAgByT,GACZ,MAAO,CAAEA,MAAOA,IANxB,CASGgD,KAAmBA,GAAiB,KAMvC,SAAWC,GAUPA,EAAe1W,OAHf,SAAgBwa,EAAOC,GACnB,MAAO,CAAED,MAAOA,GAAgB,GAAIC,eAAgBA,IAR5D,CAWG/D,KAAmBA,GAAiB,KAEvC,SAAWC,GASPA,EAAa+D,cAHb,SAAuBC,GACnB,OAAOA,EAAU7F,QAAQ,wBAAyB,SAUtD6B,EAAaxE,GAJb,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGU,OAAOX,IAAeC,GAAGC,cAAcF,IAAcC,GAAGU,OAAOX,EAAUwI,WAAavI,GAAGU,OAAOX,EAAUzS,QAf5H,CAkBGgX,KAAiBA,GAAe,KAEnC,SAAWC,GAUPA,EAAMzE,GANN,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,QAASyS,GAAaC,GAAGC,cAAcF,KAAeiE,GAAclE,GAAGC,EAAUyI,WAC7ElE,GAAaxE,GAAGC,EAAUyI,WAC1BxI,GAAGuB,WAAWxB,EAAUyI,SAAUlE,GAAaxE,YAAyB,IAAhBxS,EAAMkT,OAAoB7B,EAAMmB,GAAGxS,EAAMkT,SAR7G,CAWG+D,KAAUA,GAAQ,KAMrB,SAAWC,GAUPA,EAAqB7W,OAHrB,SAAgByT,EAAOqH,GACnB,OAAOA,EAAgB,CAAErH,MAAOA,EAAOqH,cAAeA,GAAkB,CAAErH,MAAOA,IARzF,CAWGoD,KAAyBA,GAAuB,KAMnD,SAAWC,GAkBPA,EAAqB9W,OAjBrB,SAAgByT,EAAOqH,GAEnB,IADA,IAAIC,EAAa,GACRlG,EAAK,EAAGA,EAAK7T,UAAUa,OAAQgT,IACpCkG,EAAWlG,EAAK,GAAK7T,UAAU6T,GAEnC,IAAI3R,EAAS,CAAEuQ,MAAOA,GAUtB,OATIpB,GAAGS,QAAQgI,KACX5X,EAAO4X,cAAgBA,GAEvBzI,GAAGS,QAAQiI,GACX7X,EAAO6X,WAAaA,EAGpB7X,EAAO6X,WAAa,GAEjB7X,GAhBf,CAmBG4T,KAAyBA,GAAuB,KAKnD,SAAWC,GAIPA,EAAsBoC,KAAO,EAI7BpC,EAAsBiE,KAAO,EAI7BjE,EAAsBkE,MAAQ,EAZlC,CAaGlE,KAA0BA,GAAwB,KAMrD,SAAWC,GAYPA,EAAkBhX,OAPlB,SAAgB6S,EAAOoB,GACnB,IAAI/Q,EAAS,CAAE2P,MAAOA,GAItB,OAHIR,GAAGE,OAAO0B,KACV/Q,EAAO+Q,KAAOA,GAEX/Q,GAVf,CAaG8T,KAAsBA,GAAoB,KAK7C,SAAWC,GACPA,EAAW8C,KAAO,EAClB9C,EAAWuC,OAAS,EACpBvC,EAAWiE,UAAY,EACvBjE,EAAWkE,QAAU,EACrBlE,EAAWrT,MAAQ,EACnBqT,EAAWmC,OAAS,EACpBnC,EAAWwC,SAAW,EACtBxC,EAAWoC,MAAQ,EACnBpC,EAAWrW,YAAc,EACzBqW,EAAW2C,KAAO,GAClB3C,EAAWsC,UAAY,GACvBtC,EAAWlT,SAAW,GACtBkT,EAAWqC,SAAW,GACtBrC,EAAWkD,SAAW,GACtBlD,EAAWmE,OAAS,GACpBnE,EAAWoE,OAAS,GACpBpE,EAAWqE,QAAU,GACrBrE,EAAWhW,MAAQ,GACnBgW,EAAW7X,OAAS,GACpB6X,EAAWsE,IAAM,GACjBtE,EAAWuE,KAAO,GAClBvE,EAAWiD,WAAa,GACxBjD,EAAWmD,OAAS,GACpBnD,EAAWoD,MAAQ,GACnBpD,EAAWqD,SAAW,GACtBrD,EAAWsD,cAAgB,GA1B/B,CA2BGtD,KAAeA,GAAa,KAM/B,SAAWC,GAIPA,EAAU1C,WAAa,EAJ3B,CAKG0C,KAAcA,GAAY,KAE7B,SAAWC,GAqBPA,EAAkBnX,OAXlB,SAAgBf,EAAMgV,EAAMpB,EAAOD,EAAK6I,GACpC,IAAIvY,EAAS,CACTjE,KAAMA,EACNgV,KAAMA,EACNC,SAAU,CAAEtB,IAAKA,EAAKC,MAAOA,IAKjC,OAHI4I,IACAvY,EAAOuY,cAAgBA,GAEpBvY,GAnBf,CAsBGiU,KAAsBA,GAAoB,KAE7C,SAAWC,GAwBPA,EAAepX,OAbf,SAAgBf,EAAMyc,EAAQzH,EAAMpB,EAAO8I,EAAgBC,GACvD,IAAI1Y,EAAS,CACTjE,KAAMA,EACNyc,OAAQA,EACRzH,KAAMA,EACNpB,MAAOA,EACP8I,eAAgBA,GAKpB,YAHiB,IAAbC,IACA1Y,EAAO0Y,SAAWA,GAEf1Y,GAeXkU,EAAejF,GATf,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,GACHC,GAAGU,OAAOX,EAAUnT,OAASoT,GAAGE,OAAOH,EAAU6B,OACjDjD,EAAMmB,GAAGC,EAAUS,QAAU7B,EAAMmB,GAAGC,EAAUuJ,uBAC1B,IAArBvJ,EAAUsJ,QAAqBrJ,GAAGU,OAAOX,EAAUsJ,gBAC1B,IAAzBtJ,EAAUyJ,YAAyBxJ,GAAGoD,QAAQrD,EAAUyJ,oBACjC,IAAvBzJ,EAAUwJ,UAAuB3a,MAAMkD,QAAQiO,EAAUwJ,YAnCtE,CAsCGxE,KAAmBA,GAAiB,KAKvC,SAAWC,GAIPA,EAAeyE,MAAQ,GAIvBzE,EAAe0E,SAAW,WAI1B1E,EAAe2E,SAAW,WAY1B3E,EAAe4E,gBAAkB,mBAWjC5E,EAAe6E,eAAiB,kBAahC7E,EAAe8E,gBAAkB,mBAMjC9E,EAAe+E,OAAS,SAIxB/E,EAAegF,sBAAwB,yBASvChF,EAAeiF,aAAe,gBAnElC,CAoEGjF,KAAmBA,GAAiB,KAMvC,SAAWC,GAWPA,EAAkBtX,OAPlB,SAAgBuc,EAAaC,GACzB,IAAItZ,EAAS,CAAEqZ,YAAaA,GAI5B,YAHa,IAATC,GAA4B,OAATA,IACnBtZ,EAAOsZ,KAAOA,GAEXtZ,GAUXoU,EAAkBnF,GAJlB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGuB,WAAWxB,EAAUmK,YAAa5K,EAAWQ,WAA2B,IAAnBC,EAAUoK,MAAmBnK,GAAGuB,WAAWxB,EAAUoK,KAAMnK,GAAGU,UAjB9J,CAoBGuE,KAAsBA,GAAoB,KAE7C,SAAWC,GAcPA,EAAWvX,OAbX,SAAgBmO,EAAOsO,EAAexI,GAClC,IAAI/Q,EAAS,CAAEiL,MAAOA,GAUtB,OATIyD,EAAQO,GAAGsK,GACXvZ,EAAO0R,QAAU6H,EAGjBvZ,EAAO6U,KAAO0E,OAEL,IAATxI,IACA/Q,EAAO+Q,KAAOA,GAEX/Q,GAaXqU,EAAWpF,GAVX,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAOyS,GAAaC,GAAGU,OAAOX,EAAUjE,cACT,IAA1BiE,EAAUmK,aAA0BlK,GAAGuB,WAAWxB,EAAUmK,YAAa5K,EAAWQ,YACjE,IAAnBC,EAAU6B,MAAmB5B,GAAGU,OAAOX,EAAU6B,cAC9B,IAAnB7B,EAAU2F,WAAyC,IAAtB3F,EAAUwC,gBACjB,IAAtBxC,EAAUwC,SAAsBhD,EAAQO,GAAGC,EAAUwC,iBAC3B,IAA1BxC,EAAUsK,aAA0BrK,GAAGoD,QAAQrD,EAAUsK,qBACtC,IAAnBtK,EAAU2F,MAAmB7F,GAAcC,GAAGC,EAAU2F,QAvBrE,CA0BGR,KAAeA,GAAa,KAM/B,SAAWC,GAWPA,EAASxX,OAPT,SAAgB6S,EAAO8J,GACnB,IAAIzZ,EAAS,CAAE2P,MAAOA,GAItB,OAHIR,GAAGS,QAAQ6J,KACXzZ,EAAOyZ,KAAOA,GAEXzZ,GAUXsU,EAASrF,GAJT,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcpB,EAAMmB,GAAGC,EAAUS,SAAWR,GAAG7M,UAAU4M,EAAUwC,UAAYhD,EAAQO,GAAGC,EAAUwC,WAjB9H,CAoBG4C,KAAaA,GAAW,KAM3B,SAAWC,GAOPA,EAAkBzX,OAHlB,SAAgB4c,EAASC,GACrB,MAAO,CAAED,QAASA,EAASC,aAAcA,IAU7CpF,EAAkBtF,GAJlB,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcC,GAAGE,OAAOH,EAAUwK,UAAYvK,GAAGoD,QAAQrD,EAAUyK,eAb7F,CAgBGpF,KAAsBA,GAAoB,KAM7C,SAAWC,GAOPA,EAAa1X,OAHb,SAAgB6S,EAAOlR,EAAQgb,GAC3B,MAAO,CAAE9J,MAAOA,EAAOlR,OAAQA,EAAQgb,KAAMA,IAUjDjF,EAAavF,GAJb,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,OAAO0S,GAAGS,QAAQV,IAAcpB,EAAMmB,GAAGC,EAAUS,SAAWR,GAAG7M,UAAU4M,EAAUzQ,SAAW0Q,GAAGU,OAAOX,EAAUzQ,UAb5H,CAgBG+V,KAAiBA,GAAe,KAMnC,SAAWC,GASPA,EAAe3X,OAHf,SAAgB6S,EAAOiK,GACnB,MAAO,CAAEjK,MAAOA,EAAOiK,OAAQA,IAOnCnF,EAAexF,GAJf,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,YAAqB6F,IAAd4M,GAA2BpB,EAAMmB,GAAGC,EAAUS,cAAgCrN,IAArB4M,EAAU0K,QAAwBnF,EAAexF,GAAGC,EAAU0K,UAZtI,CAeGnF,KAAmBA,GAAiB,KAChC,IAIIoF,IACX,SAAWA,GA6CP,SAASC,EAAUL,EAAMM,GACrB,GAAIN,EAAK9a,QAAU,EAEf,OAAO8a,EAEX,IAAInc,EAAKmc,EAAK9a,OAAS,EAAK,EACxBqb,EAAOP,EAAKlR,MAAM,EAAGjL,GACrB2c,EAAQR,EAAKlR,MAAMjL,GACvBwc,EAAUE,EAAMD,GAChBD,EAAUG,EAAOF,GAIjB,IAHA,IAAIG,EAAU,EACVC,EAAW,EACX3e,EAAI,EACD0e,EAAUF,EAAKrb,QAAUwb,EAAWF,EAAMtb,QAAQ,CACrD,IAAIyb,EAAML,EAAQC,EAAKE,GAAUD,EAAME,IAGnCV,EAAKje,KAFL4e,GAAO,EAEKJ,EAAKE,KAILD,EAAME,KAG1B,KAAOD,EAAUF,EAAKrb,QAClB8a,EAAKje,KAAOwe,EAAKE,KAErB,KAAOC,EAAWF,EAAMtb,QACpB8a,EAAKje,KAAOye,EAAME,KAEtB,OAAOV,EAjEXI,EAAa/c,OAHb,SAAgB4S,EAAKmG,EAAYxK,EAASgP,GACtC,OAAO,IAAIC,GAAiB5K,EAAKmG,EAAYxK,EAASgP,IAW1DR,EAAa5K,GALb,SAAYxS,GACR,IAAIyS,EAAYzS,EAChB,SAAO0S,GAAGS,QAAQV,IAAcC,GAAGU,OAAOX,EAAUQ,OAASP,GAAG7M,UAAU4M,EAAU2G,aAAe1G,GAAGU,OAAOX,EAAU2G,cAAgB1G,GAAGE,OAAOH,EAAUqL,YACpJpL,GAAGqL,KAAKtL,EAAUuL,UAAYtL,GAAGqL,KAAKtL,EAAUwL,aAAevL,GAAGqL,KAAKtL,EAAUyL,YA2B5Fd,EAAae,WAxBb,SAAoBC,EAAU3I,GAU1B,IATA,IAAI4D,EAAO+E,EAASJ,UAChBK,EAAchB,EAAU5H,GAAO,SAAUvR,EAAGI,GAC5C,IAAIga,EAAOpa,EAAEgP,MAAMnC,MAAMH,KAAOtM,EAAE4O,MAAMnC,MAAMH,KAC9C,OAAa,IAAT0N,EACOpa,EAAEgP,MAAMnC,MAAMF,UAAYvM,EAAE4O,MAAMnC,MAAMF,UAE5CyN,KAEPC,EAAqBlF,EAAKnX,OACrBnD,EAAIsf,EAAYnc,OAAS,EAAGnD,GAAK,EAAGA,IAAK,CAC9C,IAAIuH,EAAI+X,EAAYtf,GAChByf,EAAcJ,EAASF,SAAS5X,EAAE4M,MAAMnC,OACxC0N,EAAYL,EAASF,SAAS5X,EAAE4M,MAAMhC,KAC1C,KAAIuN,GAAaF,GAIb,MAAM,IAAI/X,MAAM,oBAHhB6S,EAAOA,EAAKqF,UAAU,EAAGF,GAAelY,EAAE8O,QAAUiE,EAAKqF,UAAUD,EAAWpF,EAAKnX,QAKvFqc,EAAqBC,EAEzB,OAAOnF,GA1Cf,CA6EG+D,KAAiBA,GAAe,KACnC,IA2GI1K,GA3GAmL,GAAkC,WAClC,SAASA,EAAiB5K,EAAKmG,EAAYxK,EAASgP,GAChDxc,KAAKud,KAAO1L,EACZ7R,KAAKwd,YAAcxF,EACnBhY,KAAKyd,SAAWjQ,EAChBxN,KAAK0d,SAAWlB,EAChBxc,KAAK2d,kBAAelZ,EAmGxB,OAjGApG,OAAOC,eAAeme,EAAiBld,UAAW,MAAO,CACrDf,IAAK,WACD,OAAOwB,KAAKud,MAEhBhf,YAAY,EACZyC,cAAc,IAElB3C,OAAOC,eAAeme,EAAiBld,UAAW,aAAc,CAC5Df,IAAK,WACD,OAAOwB,KAAKwd,aAEhBjf,YAAY,EACZyC,cAAc,IAElB3C,OAAOC,eAAeme,EAAiBld,UAAW,UAAW,CACzDf,IAAK,WACD,OAAOwB,KAAKyd,UAEhBlf,YAAY,EACZyC,cAAc,IAElByb,EAAiBld,UAAUqd,QAAU,SAAU9K,GAC3C,GAAIA,EAAO,CACP,IAAInC,EAAQ3P,KAAK8c,SAAShL,EAAMnC,OAC5BG,EAAM9P,KAAK8c,SAAShL,EAAMhC,KAC9B,OAAO9P,KAAK0d,SAASJ,UAAU3N,EAAOG,GAE1C,OAAO9P,KAAK0d,UAEhBjB,EAAiBld,UAAUqe,OAAS,SAAUC,EAAOrQ,GACjDxN,KAAK0d,SAAWG,EAAM5F,KACtBjY,KAAKyd,SAAWjQ,EAChBxN,KAAK2d,kBAAelZ,GAExBgY,EAAiBld,UAAUue,eAAiB,WACxC,QAA0BrZ,IAAtBzE,KAAK2d,aAA4B,CAIjC,IAHA,IAAII,EAAc,GACd9F,EAAOjY,KAAK0d,SACZM,GAAc,EACTrgB,EAAI,EAAGA,EAAIsa,EAAKnX,OAAQnD,IAAK,CAC9BqgB,IACAD,EAAYhb,KAAKpF,GACjBqgB,GAAc,GAElB,IAAIC,EAAKhG,EAAKxN,OAAO9M,GACrBqgB,EAAsB,OAAPC,GAAsB,OAAPA,EACnB,OAAPA,GAAetgB,EAAI,EAAIsa,EAAKnX,QAAiC,OAAvBmX,EAAKxN,OAAO9M,EAAI,IACtDA,IAGJqgB,GAAe/F,EAAKnX,OAAS,GAC7Bid,EAAYhb,KAAKkV,EAAKnX,QAE1Bd,KAAK2d,aAAeI,EAExB,OAAO/d,KAAK2d,cAEhBlB,EAAiBld,UAAUsd,WAAa,SAAUqB,GAC9CA,EAASC,KAAKC,IAAID,KAAKE,IAAIH,EAAQle,KAAK0d,SAAS5c,QAAS,GAC1D,IAAIid,EAAc/d,KAAK8d,iBACnBQ,EAAM,EAAGC,EAAOR,EAAYjd,OAChC,GAAa,IAATyd,EACA,OAAOvO,EAAS/Q,OAAO,EAAGif,GAE9B,KAAOI,EAAMC,GAAM,CACf,IAAIC,EAAML,KAAKM,OAAOH,EAAMC,GAAQ,GAChCR,EAAYS,GAAON,EACnBK,EAAOC,EAGPF,EAAME,EAAM,EAKpB,IAAIhP,EAAO8O,EAAM,EACjB,OAAOtO,EAAS/Q,OAAOuQ,EAAM0O,EAASH,EAAYvO,KAEtDiN,EAAiBld,UAAUud,SAAW,SAAU5I,GAC5C,IAAI6J,EAAc/d,KAAK8d,iBACvB,GAAI5J,EAAS1E,MAAQuO,EAAYjd,OAC7B,OAAOd,KAAK0d,SAAS5c,OAEpB,GAAIoT,EAAS1E,KAAO,EACrB,OAAO,EAEX,IAAIkP,EAAaX,EAAY7J,EAAS1E,MAClCmP,EAAkBzK,EAAS1E,KAAO,EAAIuO,EAAYjd,OAAUid,EAAY7J,EAAS1E,KAAO,GAAKxP,KAAK0d,SAAS5c,OAC/G,OAAOqd,KAAKC,IAAID,KAAKE,IAAIK,EAAaxK,EAASzE,UAAWkP,GAAiBD,IAE/ErgB,OAAOC,eAAeme,EAAiBld,UAAW,YAAa,CAC3Df,IAAK,WACD,OAAOwB,KAAK8d,iBAAiBhd,QAEjCvC,YAAY,EACZyC,cAAc,IAEXyb,EAzG2B,IA4GtC,SAAWnL,GACP,IAAI7N,EAAWpF,OAAOkB,UAAUkE,SAIhC6N,EAAGS,QAHH,SAAiBnT,GACb,MAAwB,qBAAVA,GAMlB0S,EAAG7M,UAHH,SAAmB7F,GACf,MAAwB,qBAAVA,GAMlB0S,EAAGoD,QAHH,SAAiB9V,GACb,OAAiB,IAAVA,IAA4B,IAAVA,GAM7B0S,EAAGU,OAHH,SAAgBpT,GACZ,MAAgC,oBAAzB6E,EAAS3F,KAAKc,IAMzB0S,EAAGE,OAHH,SAAgB5S,GACZ,MAAgC,oBAAzB6E,EAAS3F,KAAKc,IAMzB0S,EAAGqL,KAHH,SAAc/d,GACV,MAAgC,sBAAzB6E,EAAS3F,KAAKc,IASzB0S,EAAGC,cANH,SAAuB3S,GAInB,OAAiB,OAAVA,GAAmC,kBAAVA,GAMpC0S,EAAGuB,WAHH,SAAoBjU,EAAOggB,GACvB,OAAO1e,MAAMkD,QAAQxE,IAAUA,EAAMqW,MAAM2J,IAlCnD,CAqCGtN,KAAOA,GAAK,KCn+Cf,ICDWuN,GDCE,GACT,WACW,EACA,EACA,EACA,EACA,EACA,EACA,GAAwD,oBANxD,aACA,gBACA,eACA,YACA,cACA,YACA,2BAIT,G,WAAJ,SAAF,IAAI,oBACO,iBAAiC,IAAI,MACrC,cAAU,EACV,YAAQ,E,mDAGX,IAAM,EAAQ,IAAI,EAIlB,OAHA,EAAM,YAAN,YAAwB,MAAxB,EAA6C,KAAK,cAClD,EAAM,QAAU,KAAK,QACrB,EAAM,MAAQ,KAAK,MACZ,M,KAIF,GAAb,WAAE,SAAF,IAAI,oBACQ,WAAQ,IAAI,GACZ,gBAAa,IAAI,MAF3B,uBAAE,IAAJ,MAAI,MAAJ,SAIQ,GACA7e,KAAKyG,MAAM,YAAY,KAAK,GACxB,EAAW,WAAa,EAAmB,UAC3C,KAAK,MAAM,SAAU,GAErB,EAAW,WAAa,EAAmB,QAC3C,KAAK,MAAM,OAAQ,KAV/B,CAAI,IAAJ,YAAI,MAAJ,WAeQ,KAAK,WAAW,KAAK,KAAK,MAAM,UAfxC,CAAI,IAAJ,eAAI,MAAJ,WAmBQ,IAAM,EAAW,KAAK,WAAW,WAChB,IAAb,EAKJ,KAAK,MAAQ,EAHT,QAAQ,KAAK,wDAtBzB,CAAI,IAAJ,YAAI,MAAJ,WA6BQ,OAAO,KAAK,MAAM,QA7B1B,CAAI,IAAJ,cAAI,MAAJ,WAiCQ,OAAO,KAAK,MAAM,UAjC1B,CAAI,IAAJ,iBAAI,MAAJ,WAqCQ,OAAO,KAAK,MAAM,cArC1B,CAAI,IAAJ,QAAI,MAAJ,SAwCU,GAA+B,WACjC,KAAK,MAAM,YAAY,SAAQ,SAAC,GAC5B,EAAG,WACK,EAAM,MAAM,MAAM,KADvB,YAC+B,EAAM,MAAM,MAAM,UADjD,cACgE,EAAK,SAAS,EAAM,UADpF,aAEK,EAAM,QAFX,WA1Cf,CAAI,IAAJ,WAAI,MAAJ,SAkDqB,GACb,OAAQ,GACJ,KAAK,EAAmB,MACpB,MAAO,QACX,KAAK,EAAmB,QACpB,MAAO,UACX,KAAK,EAAmB,YACpB,MAAO,cACX,KAAK,EAAmB,KACpB,MAAO,OACX,QACI,MAAO,iBA7DvB,MC3BA,SAAWoY,GACP,YACE,EAAF,eACE,EAAF,UACE,EAAF,mBACE,EAAF,iBACE,EAAF,cACE,EAAF,oBACE,EAAF,cACE,EAAF,eACE,EAAF,gBACE,EAAF,gBAXJ,CAAWA,QAAgB,K,ICftB,GDwDC,G,WAAN,iCACW,gBAAa,IAAI,MACjB,qBAAkB,EAClB,yBAAsB,EACtB,iBAAc,E,mDAGjB,IAAM,EAAW,IAAI,EAKf,OAJN,EAAS,WAAT,YAA0B,MAA1B,EAA0C,KAAK,aAC/C,EAAS,gBAAkB,KAAK,gBAChC,EAAS,oBAAsB,KAAK,oBACpC,EAAS,YAAc,KAAK,YACrB,M,KAIF,GAAb,WACM,SAAF,EAAY,EAAsB,EAAa,GAAY,oBACnD7e,KAAC,UAAY,EACb,KAAC,IAAM,EACX,KAAK,KAAO,MAAM,KAAK,GACvB,KAAK,MAAQ,IAAI,GACjB,KAAK,WAAa,IAAI,MAN5B,uBAAE,IAAJ,UAAI,MAAJ,WAgBQ,IADiB,IAAL,EAAK,uDAAD,EACTZ,EAAI,IAAM,KAAK,SACd,KAAK,cACL,KAAK,MAAM,YAAc,KAAK,MAAM,YAAc,EAClD,KAAK,MAAM,oBAAsB,GAEjC,KAAK,MAAM,oBAAsB,KAAK,MAAM,oBAAsB,EAEtE,KAAK,MAAM,gBAAkB,KAAK,MAAM,gBAAkB,EAC1D,GAAQ,IAxBpB,CAAI,IAAJ,sBAAI,MAAJ,WA6BQ,OAAQ,KAAK,aAAkD,EAAxC,KAAK,KAAK,KAAK,MAAM,mBA7BpD,CAAI,IAAJ,uBAAI,MAAJ,SAgCiC,GACzB,OAAO,IAAI,EAAe,KAAK,IAAK,KAjC5C,CAAI,IAAJ,uBAAI,MAAJ,WAqCQ,OAAO,IAAI,EAAe,KAAK,MAAM,YAAa,KAAK,MAAM,uBArCrE,CAAI,IAAJ,iBAAI,MAAJ,WAyCQ,IAAM,EAAc,KAAK,uBACnB,OAAC,IAAI,EAAS,KAAK,qBAAqB,IAAI,EAAY,EAAa,IAAe,EAAI,OA1CtG,CAAI,IAAJ,UAAI,MAAJ,WA8CQ,OAAO,KAAK,wBAA0B,GAAiB,QA9C/D,CAAI,IAAJ,QAAI,MAAJ,WAkDQ,IAAM,EAAmB,KAAK,sBAC9B,OAAO,IAAqB,GAAiB,eAAiB,IAAqB,GAAiB,cAnD5G,CAAI,IAAJ,aAAI,MAAJ,WAuDQ,OAAO,KAAK,wBAA0B,GAAiB,WAvD/D,CAAI,IAAJ,aAAI,MAAJ,WA2DQ,OAAO,KAAK,wBAA0B,GAAiB,WA3D/D,CAAI,IAAJ,mBAAI,MAAJ,WA+DQ,OAAO,KAAK,wBAA0B,GAAiB,iBA/D/D,CAAI,IAAJ,cAAI,MAAJ,WAmEQ,OAAOY,KAAK,wBAA0B,GAAiB,YAnE/D,CAAI,IAAJ,WAAI,MAAJ,WAuEQ,IAAM,EAAmB,KAAK,sBAC9B,YACyB,IAArB,IACE,GAAoB,KAAO,GAAoB,KAC5C,GAAoB,KAAO,GAAoB,OA3EhE,CAAI,IAAJ,QAAI,MAAJ,WAgFQ,IAAM8e,EAAmB9e,KAAK+e,sBAC9B,YAA4B,IAArB,GAAuD,MAArB,IAjFjD,CAAI,IAAJ,aAAI,MAAJ,WAqFQ,OACI,KAAK,SACL,KAAK,MAAM,gBAAkB,EAAI,KAAK,KAAK,QACG,MAA9C,KAAK,KAAK,KAAK,MAAM,gBAAkB,KAxFnD,CAAI,IAAJ,WAAI,MAAJ,WA6FQ,IAAM,EAAmB,KAAK,sBAC9B,YAA4B,IAArB,GAAkC,GAAoB,KAAO,GAAoB,MA9FhG,CAAI,IAAJ,iBAAI,MAAJ,WAkGQ,IAAM,EAAmB,KAAK,sBAC9B,YACyB,IAArB,IACE,GAAoB,KAAO,GAAoB,KAC5C,GAAoB,KAAO,GAAoB,OAtGhE,CAAI,IAAJ,gBAAI,MAAJ,WA2GQ,OAAO,KAAK,wBAA0B,GAAiB,cA3G/D,CAAI,IAAJ,eAAI,MAAJ,WA+GQ,OAAO,KAAK,WAAa,KAAK,SAAW,KAAK,cAAgB,KAAK,oBAAsB,KAAK,eA/GtG,CAAI,IAAJ,QAAI,MAAJ,WAmHQ,OAAO,KAAK,MAAM,iBAAmB,KAAK,KAAK,SAnHvD,CAAI,IAAJ,iBAAI,MAAJ,WAuHc,MAAmB,KAAK,sBACxB,YACmB,IAArB,GACA,EAAc,KAAsB,EAAI,iBACxC,KAAK,MAAM,gBAAkB,EAAI,KAAK,KAAK,QAC3C,EAAc,KAAK,KAAK,KAAK,MAAM,gBAAkB,MAAQ,EAAI,WA5H7E,CAAI,IAAJ,eAAI,MAAJ,WAiIQ,IAAM,EAAmB,KAAK,sBAC9B,YACyB,IAArB,GACA,EAAc,KAAsB,EAAI,UACxC,KAAK,MAAM,gBAAkB,EAAI,KAAK,KAAK,QAC3C,EAAc,KAAK,KAAK,KAAK,MAAM,gBAAkB,MAAQ,EAAI,mBAtI7E,CAAI,IAAJ,iBAAI,MAAJ,WA4IQ,IADA,IAAI,GAAa,EACV,KAAK,gBACR,GAAa,EACb,KAAK,UAET,OAAO,IAhJf,CAAI,IAAJ,cAAI,MAAJ,WAoJQ,IAAI,GAAa,EACjB,GAAI/e,KAAK,iBAAkB,CAGvB,IAFA,GAAa,EACb,KAAK,QAAQ,IACL,KAAK,UAAY,KAAK,gBAC1B,KAAK,UAEJ,KAAK,SACN,KAAK,QAAQ,GAGrB,OAAO,IA/Jf,CAAI,IAAJ,sBAAI,MAAJ,WAmKc,MAAE,KAAK,iBAAmB,KAAK,SACzB,KAAH,YApKjB,CAAI,IAAJ,gBAAI,MAAJ,WAyKc,MAAY,KAAK,sBACjB,GAAF,KAAK,cAAe,CACZ,KAAH,UACG,IAAF,EAvNlB,SAA4B,GACtB,OAAM,GACJ,IAAK,IACD,OAAO6e,GAAiB,KAC5B,IAAK,IACD,OAAOA,GAAiB,UAC5B,IAAK,IACD,OAAOA,GAAiB,cAC5B,IAAK,IACD,OAAO,GAAiB,YAC5B,IAAK,IACD,OAAO,GAAiB,SAC5B,IAAK,IACD,OAAO,GAAiB,eAC5B,IAAK,IACD,OAAO,GAAiB,SAC5B,IAAK,KACD,OAAO,GAAiB,UAC5B,IAAK,IACD,OAAO,GAAiB,YAC5B,IAAK,IACD,OAAO,GAAiB,YAC5B,QACI,QAgMyB,CAAmB,KAAK,uBACzC,QAAiB,IAArB,EAEU,OADA,KAAL,UACE,EAIT,OADA,KAAD,UACE,IAnLf,CAAI,IAAJ,WAAI,MAAJ,WAuLQ,IAAI,EAAO,GACL,EAAQ,KAAK,uBAGnB,IAFA,KAAK,WAEG,KAAK,iBAAiB,CAC1B,IAAM,EAAY,KAAK,gBACvB,QAAkB,IAAd,EACA,OAAO,IAAI,EAAW,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,0BAEhF,GAAc,EAGlB,GAAI,KAAK,gBAAiB,CACtB,KAAK,UACL,IAAM,EAAM,KAAK,uBACjB,OAAO,IAAI,GAAU,KAAK,qBAAqB,IAAI,EAAY,EAAO,IAAO,GAGjF,OAAO,IAAI,EAAW,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,4BAzMpF,CAAI,IAAJ,iBAAI,MAAJ,WAgNQ,IAHA,IAAI,EAAa,GACX,EAAQ,KAAK,wBAEX,KAAK,UAAY,KAAK,YAAc,KAAK,aAC7C,GAA0B,KAAK,sBAC/B,KAAK,UAGH,MAAW,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBAEjE,EAAM,EAAc,GAE1B,YAAe,IAAR,EAAoB,IAAI,EAAS,EAAU,GAAO,IAAI,EAAgB,EAAU,KAzN/F,CAAI,IAAJ,eAAI,MAAJ,WA6NQ,IAAM,EAAQ,KAAK,uBAEb,EAAmB,KAAK,sBAC9B,QAAyB,IAArB,EAAgC,CAChC,IAAM,EAAM,EAAc,GAE1B,GADA,KAAK,eACO,IAAR,EAAmB,CACnB,IAAM,EAAgB,KAAK,sBAC3B,QAAsB,IAAlB,EAEA,GADgB,EAAc,KACd,EAAI,MAChB,OAAQ,GACJ,KAAK,EAAI,KAEL,OADA,KAAK,UACE,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,EAAI,WAEZ,KAAK,EAAI,QAEL,OADA,KAAK,UACE,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,EAAI,cAEZ,KAAK,EAAI,MAEL,OADA,KAAK,UACE,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,EAAI,YAKxB,OAAO,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,IAIZ,OAAO,IAAI,EAAW,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,4BApQpF,CAAI,IAAJ,kBAAI,MAAJ,WAwQQ,IAAI,EAAc,EAUlB,IATK,KAAK,YACN7e,KAAK,UAAU,IACX,IAAI,GACA,IAAI,EAAY,KAAK,uBAAwB,KAAK,wBAClD,EAAmB,MACnB,kDAIL,KAAK,YAAY,CACpB,IAAM,EAAU,KAAK,2BACL,IAAZ,IACA,EAA4B,GAAd,EAAmB,OAAO,SAAS,GACjD,KAAK,WAGb,OAAO,IAzRf,CAAI,IAAJ,aAAI,MAAJ,WAkSQ,IALA,IAAM,EAAQ,KAAK,uBACf,OAA6B,EAC7B,GAAQ,EACR,GAAU,EACV,EAAW,EACR,KAAK,YAAc,KAAK,kBAAkB,CAM7C,GALI,KAAK,mBACL,GAAQ,GAEZ,OAAwB,IAAb,EAAyB,KAAK,sBAAwB,EAAW,KAAK,sBACjF,KAAK,UACD,GAAW,EAAO,CAClB,KAAK,sBACL,KAAK,UAAU,IACX,IAAI,GACA,IAAI,EAAY,EAAO,KAAK,wBAC5B,EAAmB,MACnB,kDAGR,MAKJ,GAHI,IACA,GAAsB,GAEtB,KAAK,aACL,MAMJ,GAJI,KAAK,UACL,KAAK,UACL,GAAU,GAEV,GAA0C,MAA/B,KAAK,sBAA+B,CAC/C,KAAK,UACL,IAAM,EAAU,KAAK,sBACjB,EAAS,EACG,MAAZ,GAA+B,MAAZ,IACnB,EAAqB,MAAZ,GAAmB,EAAI,EAChC,KAAK,WAET,EAAW,EAAS,KAAK,kBACzB,OAGR,QAAiB,IAAb,EACA,OAAO,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,GAGR,IAAM,EAA6C,MAA/B,KAAK,uBAAgE,MAA/B,KAAK,sBAc/D,OAbI,GACA,KAAK,UAEL,IAAU,IACV,KAAK,sBACL,KAAK,UAAU,IACX,IAAI,GACA,IAAI,EAAY,EAAO,KAAK,wBAC5B,EAAmB,MACnB,yCAIR,GAAS,EACF,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,OAAO,SAAS,KAAO,IAG3B,EACO,IAAI,GACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,OAAO,SAAS,GAChB,GAGD,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,OAAO,SAAS,MA5W5B,CAAI,IAAJ,eAAI,MAAJ,WAiXQ,IAAM,EAAQ,KAAK,uBAGnB,OAFA,KAAK,UACL,KAAK,UACE,IAAI,EACP,KAAK,qBAAqB,IAAI,EAAY,EAAO,KAAK,yBACtD,EAAI,YAtXhB,CAAI,IAAJ,OAAI,MAAJ,WA2XQ,MAAQ,KAAK,UAAY,KAAK,kBAAoB,KAAK,iBAGvD,OAAI,KAAK,QACE,KAAK,iBAEZ,KAAK,gBACE,KAAK,WAEZ,KAAK,WACE,KAAK,iBAEZ,KAAK,WACE,KAAK,aAEZ,KAAK,aACE,KAAK,eAET,KAAK,iBA7YpB,CAAI,IAAJ,SAAI,MAAJ,WAiZQ,OAAO,KAAK,MAjZpB,CAAI,IAAJ,YAAI,MAAJ,WAqZQ,KAAK,WAAW,KAAK,KAAK,MAAM,UArZxC,CAAI,IAAJ,eAAI,MAAJ,WAyZQ,KAAK,WAAW,QAzZxB,CAAI,IAAJ,eAAI,MAAJ,WA6ZQ,IAAM,EAAY,KAAK,WAAW,WAChB,IAAd,EAIJ,KAAK,MAAQ,EAHT,QAAQ,KAAK,gCA/ZzB,CAAI,IAAJ,OAAI,MAAJ,SAqaS,GACD,GAAI,EAAI,EAEJ,MAAM,WAAW,sCAGrB,IAAI,EAAY,KAAK,MAAM,WAAW,OAEtC,GAAI,GAAK,EACL,OAAO,KAAK,MAAM,WAAW,EAAI,GAGrC,EAAG,CACC,GAAI,EAAY,EAAG,CACf,IAAM,EAAY,KAAK,MAAM,WAAW,EAAY,GACpD,GAAI,aAAqB,GAAY,EAAU,WAAa,EAAI,IAC5D,OAAO,EAGf,EAAY,KAAK,MAAM,WAAW,KAAK,KAAK,cACvC,EAAI,GAEb,OAAO,KAAK,MAAM,WAAW,EAAI,KA3bzC,CAAI,IAAJ,OAAI,MAAJ,WA+bQ,IAAM,EAAY,KAAK,KAAK,GAE5B,OADA,KAAK,MAAM,WAAW,QACf,MAjcf,KExEsB,GAAtB,WACI,WAAoB,GAAwB,oBAAxB,gBADtB,uBAAE,IAAJ,cAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,KCEa,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAc,kCACxD,cAAM,IADoC,OAAc,EAD9D,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,eAAe,UAV/B,GAAmC,ICDtB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAqB,GAAW,kCAC1E,cAAM,IADoC,MAAqB,QAAW,EADhF,uBAAE,IAAJ,SAAI,MAAJ,WAMQ,OAAO,KAAK,MANpB,CAAI,IAAJ,SAAI,MAAJ,WAUQ,OAAO,KAAK,MAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,iBAAiB,UAdjC,GAAqC,KHDrC,SAAK,GACD,iBADJ,CAAK,QAAkB,KAGvB,IIIK,GJJiB,GAAtB,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAA2B,GAAmB,IADrE,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGW,GACH,EAAQ,iBAAiB,UAJjC,GAA8C,IKKjC,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,EACA,EACA,GAAiC,kCAEzC,cAAM,IANE,OACA,eACA,WACA,aACA,SAAiC,EAP/C,uBAAE,IAAJ,UAAI,MAAJ,WAaQ,OAAOA,KAAK,OAbpB,CAAI,IAAJ,gBAAI,MAAJ,WAiBQ,OAAO,KAAK,aAjBpB,CAAI,IAAJ,YAAI,MAAJ,WAqBQ,OAAO,KAAK,SArBpB,CAAI,IAAJ,cAAI,MAAJ,WAyBQ,OAAO,KAAK,WAzBpB,CAAI,IAAJ,UAAI,MAAJ,WA6BQ,OAAOA,KAAK,OA7BpB,CAAI,IAAJ,SAAI,MAAJ,SAgCW,GACH,EAAQ,eAAe,UAjC/B,GAAmC,IAqCtB,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,EACA,EACA,GAA6C,kCAErD,cAAM,IANE,eACA,oBACA,eACA,kBACA,iBAA6C,EAP3D,uBAAE,IAAJ,kBAAI,MAAJ,WAaQ,OAAO,KAAK,eAbpB,CAAI,IAAJ,qBAAI,MAAJ,WAiBQ,OAAO,KAAK,kBAjBpB,CAAI,IAAJ,gBAAI,MAAJ,WAqBQ,OAAO,KAAK,aArBpB,CAAI,IAAJ,mBAAI,MAAJ,WAyBQ,OAAO,KAAK,gBAzBpB,CAAI,IAAJ,kBAAI,MAAJ,WA6BQ,OAAO,KAAK,eA7BpB,CAAI,IAAJ,SAAI,MAAJ,SAgCW,GACH,EAAQ,mBAAmB,UAjCnC,GAAuC,ICxC1B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAwB,GAAkC,kCACpG,cAAM,IADoC,OAAwB,eAAkC,EAD1G,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,gBAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,cAAc,UAd9B,GAAkC,IAkBrB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAA0B,kCACpE,cAAM,IADoC,aAA0B,EAD1E,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,wBAAwB,UAVxC,GAA4C,IAc/B,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAsC,kCAChF,cAAM,IADoC,YAAsC,EADtF,uBAAE,IAAJ,eAAI,MAAJ,WAMQ,OAAO,KAAK,YANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,kBAAkB,UAVlC,GAAsC,KF9BtC,SAAK,GACC,EAAF,eADJ,CAAK,QAAa,KAGlB,IAQK,GARiB,GAAtB,iG,2BACuB,eAAgC,GAAc,IADrE,qDAGW,GACH,EAAQ,gBAAgB,UAJhC,GAA6C,KAQ7C,SAAK,GACC,EAAF,eADJ,CAAK,QAAuB,KAG5B,IA8BY,GA9BU,GAAtB,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAgC,kCAC1E,cAAM,IADoC,aAY3B,2BAAoD,GAAwB,IAZjB,EADhF,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,0BAA0B,UAV1C,GAAuD,IAgB1C,GAAb,YAAE,qBAAF,iBACI,WAAY,EAA0B,EAA0C,GAAgC,kCAC5G,cAAM,EAAU,IAD4D,aAAgC,EADlH,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,qBAAqB,UAVrC,GAAyC,KAczC,SAAY,GACN,EAAF,mBACE,EAAF,yBACE,EAAF,iBACA,6BACA,mBACE,EAAF,2BANJ,CAAY,QAAe,KAS3B,IA4BY,GA5BC,GAAb,YAAE,qBAAF,iBACI,WACI,EACA,EACQ,EACA,EACA,GAA2B,kCAEnC,cAAM,EAAU,IAJR,OACA,OACA,UAA2B,EANzC,uBAAE,IAAJ,UAAI,MAAJ,WAYQ,OAAO,KAAK,OAZpB,CAAI,IAAJ,QAAI,MAAJ,WAgBQ,OAAO,KAAK,KAhBpB,CAAI,IAAJ,WAAI,MAAJ,WAoBQ,OAAO,KAAK,QApBpB,CAAI,IAAJ,SAAI,MAAJ,SAuBW,GACH,EAAQ,sBAAsB,UAxBtC,GAA0C,KA4B1C,SAAY,GACR,uBACA,2BAFJ,CAAY,QAAsB,KAKlC,IGzFK,GHyFQ,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACA,EACQ,EACA,GAAmD,kCAE3D,cAAM,EAAU,IAHR,KACA,eAAmD,EALjE,uBAAE,IAAJ,QAAI,MAAJ,WAWQ,OAAO,KAAK,KAXpB,CAAI,IAAJ,gBAAI,MAAJ,WAeQ,OAAO,KAAK,aAfpB,CAAI,IAAJ,SAAI,MAAJ,SAkBW,GACH,EAAQ,8BAA8B,UAnB9C,GAAkD,IAuBrC,GAAb,kDACI,WACI,EACA,EACQ,EACA,GAAc,kCAEtB,cAAM,EAAU,IAHR,aACA,SAAc,EAL9B,4DAWQ,OAAO,KAAK,aAXpB,gCAeQ,OAAO,KAAK,OAfpB,6BAkBW,GACH,EAAQ,eAAe,UAnB/B,GAA6C,KGhH7C,SAAK,GACC,EAAF,eADJ,CAAK,QAAmB,KAGxB,IAYY,GAZU,GAAtB,YAAE,qBAAF,iBACI,WAAY,GAAwB,kCAChC,cAAM,IAOS,qBAA4C,GAAoB,IAR/C,EADtC,uBAAE,IAAJ,SAAI,MAAJ,SAKW,GACH,EAAQ,sBAAsB,UANtC,GAAmD,KAYnD,SAAY,GACN,EAAF,iBACE,EAAF,mBAFJ,CAAY,QAAc,KAK1B,IAkBY,GAlBC,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAA4B,GAAc,kCACpF,cAAM,IADoC,KAA4B,SAAc,EAD1F,uBAAE,IAAJ,QAAI,MAAJ,WAMQ,OAAO,KAAK,KANpB,CAAI,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,mBAAmB,UAdnC,GAAmC,KAkBnC,SAAY,GACN,EAAF,iBACA,qBACA,eAHJ,CAAY,QAAiB,KAM7B,IC5CK,GD4CQ,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,GAAmC,kCAE3C,cAAM,IAHE,OACA,UAAmC,EAJjD,uBAAE,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,WAAI,MAAJ,WAcQ,OAAOA,KAAK,QAdpB,CAAI,IAAJ,SAAI,MAAJ,SAiBW,GACH,EAAQ,eAAe,UAlB/B,GAAmC,IAsBtB,GAAb,kDACI,WAAY,EAAkC,EAA+B,GAAe,kCACxF,cAAM,IADoC,KAA+B,UAAe,EADhG,oDAMQ,OAAO,KAAK,KANpB,iCAUQ,OAAO,KAAK,QAVpB,6BAaW,GACH,EAAQ,eAAe,UAd/B,GAAmC,KClEnC,SAAK,GACC,EAAF,eADJ,CAAK,QAAO,KAGZ,IA8BY,GA9BU,GAAtB,YAAE,qBAAF,iBACI,WAAY,GAAwB,kCAChC,cAAM,IAOS,SAAoB,GAAQ,IARX,EADtC,uBAAE,IAAJ,SAAI,MAAJ,SAKW,GACH,EAAQ,UAAU,UAN1B,GAAuC,IAY1B,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAA0B,GAAqC,kCACzG,cAAM,IADoC,OAA0B,UAAqC,EAD/G,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,WAAI,MAAJ,WAUQ,OAAO,KAAK,QAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,iBAAiB,UAdjC,GAAqC,KAkBrC,SAAY,GACN,EAAF,mBACE,EAAF,eACE,EAAF,uBACA,yBACA,yBALJ,CAAY,QAAmB,KAQ/B,IC3CK,GD2CQ,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAiC,GAAiB,kCAC5F,cAAM,IADoC,KAAiC,UAAiB,EADlG,uBAAE,IAAJ,QAAI,MAAJ,WAMQ,OAAO,KAAK,KANpB,CAAI,IAAJ,WAAI,MAAJ,WAUQ,OAAO,KAAK,QAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,iBAAiB,UAdjC,GAAqC,KC3CrC,SAAK,GACD,iBADJ,CAAK,QAAS,KAGd,IAYY,GAZU,GAAtB,YAAE,qBAAF,iBACI,WAAY,GAAwB,kCAChC,cAAM,IAOS,WAAwB,GAAU,IARjB,EADtC,uBAAE,IAAJ,SAAI,MAAJ,SAKW,GACH,EAAQ,YAAY,UAN5B,GAAyC,KAYzC,SAAY,GACN,EAAF,eADJ,CAAY,QAAY,KAIxB,ICQK,GDRQ,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAA8B,GAAkB,kCAC1F,cAAM,IADoC,SAA8B,WAAkB,EADhG,uBAAE,IAAJ,YAAI,MAAJ,WAMQ,OAAO,KAAK,SANpB,CAAI,IAAJ,YAAI,MAAJ,WAUQ,OAAO,KAAK,SAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,iBAAiB,UAdjC,GAAqC,IAkBxB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAyB,kCACnE,cAAM,IADoC,YAAyB,EADzE,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,YANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,sBAAsB,UAVtC,GAA0C,IClCpB,GAAtB,kDACI,WAAY,GAAwB,uCAC1B,GAFd,mDAKW,GACH,EAAQ,aAAa,UAN7B,GAA0C,IAUpB,GAAtB,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAa,kCACvD,cAAM,IADoC,QAAa,EAD7D,uBAAE,IAAJ,WAAI,MAAJ,WAMQ,OAAO,KAAK,QANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,YAAY,UAV5B,GAAyC,KAczC,SAAK,GACD,iBADJ,CAAK,QAAgB,KAGrB,IAQK,GARQ,GAAb,iG,2BACuB,kBAAsC,GAAiB,IAD9E,qDAGW,GACH,EAAQ,mBAAmB,UAJnC,GAAuC,KAQvC,SAAK,GACC,EAAF,eADJ,CAAK,QAAa,KAGlB,IAoCY,GApCC,GAAb,iG,2BACuB,eAAgC,GAAc,IADrE,qDAGW,GACH,EAAQ,gBAAgB,UAJhC,GAAoC,IAQvB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAiB,kCAC3D,cAAM,IADoC,YAAiB,EADjE,uBAAE,IAAJ,eAAI,MAAJ,WAMQ,OAAO,KAAK,YANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,uBAAuB,UAVvC,GAA2C,IAc9B,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAY,kCACtD,cAAM,IADoC,OAAY,EAD5D,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,UAAU,UAV1B,GAA8B,KAc9B,SAAY,GACN,EAAF,eACA,uBAFJ,CAAY,QAAmB,KAM/B,IAkBK,GAlBiB,GAAtB,kDACI,WACI,EACQ,EACA,GAAuB,kCAE/B,cAAM,IAHE,aACA,YAAuB,EAJvC,4DAUQ,OAAO,KAAK,aAVpB,mCAcQ,OAAO,KAAK,YAdpB,GAAmD,KAkBnD,SAAK,GACD,iBADJ,CAAK,QAAc,KAGnB,IAQK,GARQ,GAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAAuB,GAAe,IAD7D,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGW,GACH,EAAQ,iBAAiB,UAJjC,GAAqC,KAQrC,SAAK,GACC,EAAF,eADJ,CAAK,QAAY,KAGjB,IChHK,GDgHQ,GAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAAqB,GAAa,IADzD,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGWgf,GACHA,EAAQ,eAAe,UAJ/B,GAAmC,IAQtB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAA0B,kCACpE,SAAAhf,KAAM,IADoC,aAA0B,EAD1E,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAOA,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,gBAAgB,UAVhC,GAAoC,IAcvB,GAAb,kDACI,WAAY,EAAkC,EAAwB,GAA2B,kCAC7F,cAAM,IADoC,OAAwB,SAA2B,EADrG,sDAMQ,OAAO,KAAK,OANpB,qCAUQ,OAAO,KAAK,OAVpB,6BAaW,GACH,EAAQ,kBAAkB,UAdlC,GAAsC,KCtItC,SAAK,GACD,iBADJ,CAAK,QAAa,KAGX,ICcF,GDdiB,GAAtB,iG,2BACuB,KAAsB,GAAc,IAD3D,YAA6C,IAIhC,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAc,kCACxD,cAAM,IADoC,OAAc,EAD9D,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,qBAAqB,UAVrC,GAAyC,IAc5B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAwB,GAA0C,kCAC5G,cAAM,IADoC,OAAwB,gBAA0C,EADlH,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,iBAAI,MAAJ,WAUQ,OAAO,KAAK,cAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,+BAA+B,UAd/C,GAAmD,IAkBtC,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAA8B,GAAsB,kCAC9F,cAAM,IADoC,OAA8B,WAAsB,EADpG,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,YAAI,MAAJ,WAUQ,OAAO,KAAK,SAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,0BAA0B,UAd1C,GAA8C,IAkBjC,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAAoC,GAAc,kCAC5F,cAAM,IADoC,aAAoC,SAAc,EADlG,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,oBAAoB,UAdpC,GAAwC,IEzD3B,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,GAA2C,kCAEnD,cAAM,IAJE,OACA,iBACA,eAA2C,EALzD,uBAAE,IAAJ,UAAI,MAAJ,WAWQ,OAAO,KAAK,OAXpB,CAAI,IAAJ,kBAAI,MAAJ,WAeQ,OAAO,KAAK,eAfpB,CAAI,IAAJ,gBAAI,MAAJ,WAmBQ,OAAO,KAAK,aAnBpB,CAAI,IAAJ,SAAI,MAAJ,SAsBW,GACH,EAAQ,oBAAoB,UAvBpC,GAAwC,ICA3B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAwB,GAAsB,kCACxF,cAAM,IADoC,OAAwB,aAAsB,EAD9F,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,cAAI,MAAJ,WAUQ,OAAO,KAAK,WAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,eAAe,UAd/B,GAAmC,IAkBtB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAA4C,kCACtF,cAAM,IADoC,aAA4C,EAD5F,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,cAAc,UAV9B,GAAkC,IAcrB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAsC,kCAChF,cAAM,IADoC,QAAsC,EADtF,uBAAE,IAAJ,WAAI,MAAJ,WAMQ,OAAO,KAAK,QANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,wBAAwB,UAVxC,GAA4C,IAc/B,GAAb,kDACI,WAAY,EAAkC,GAA0C,kCACpF,cAAM,IADoC,UAA0C,EAD5F,yDAMQ,OAAO,KAAK,UANpB,6BASW,GACH,EAAQ,kBAAkB,UAVlC,GAAsC,IF/ChB,GAAtB,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAwB,GAAsC,kCACxG,cAAM,IADoC,OAAwB,gBAAsC,EAD9G,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,iBAAI,MAAJ,WAUQ,OAAO,KAAK,cAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,0BAA0B,UAd1C,GAAuD,KAkBvD,SAAK,GACD,iBADJ,CAAK,QAAmB,KAGxB,IAQK,GARQ,GAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAA4B,GAAoB,IADvE,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGW,GACH,EAAQ,sBAAsB,UAJtC,GAA0C,KAQ1C,SAAK,GACC,EAAF,eADJ,CAAK,QAAoB,KAGzB,IGhCK,GHgCQ,GAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAA6B,GAAqB,IADzE,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGW,GACH,EAAQ,wBAAwB,UAJxC,GAA2C,IIlC9B,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAY,kCACtD,cAAM,IADoC,OAAY,EAD5D,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,UAAU,UAV1B,GAA8B,IAcjB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAsB,GAA4B,kCAC5F,cAAM,IADoC,OAAsB,WAA4B,EADlG,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,YAAI,MAAJ,WAUQ,OAAO,KAAK,SAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,iBAAiB,UAdjC,GAAqC,ICZxB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAwC,GAAc,kCAChG,cAAM,IADoC,QAAwC,SAAc,EADtG,uBAAE,IAAJ,WAAI,MAAJ,WAMQ,OAAO,KAAK,QANpB,CAAI,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,eAAe,UAd/B,GAAmC,ICGtB,GAAb,YAAE,qBAAF,iBACI,WACI,EACQ,EACA,EACA,EACA,EACA,GAA2C,kCAEnD,cAAM,IANE,OACA,WACA,SACA,iBACA,eAA2C,EAPzD,uBAAE,IAAJ,UAAI,MAAJ,WAaQ,OAAO,KAAK,OAbpB,CAAI,IAAJ,YAAI,MAAJ,WAiBQ,OAAO,KAAK,SAjBpB,CAAI,IAAJ,UAAI,MAAJ,WAqBQ,OAAO,KAAK,OArBpB,CAAI,IAAJ,kBAAI,MAAJ,WAyBQ,OAAO,KAAK,eAzBpB,CAAI,IAAJ,gBAAI,MAAJ,WA6BQ,OAAO,KAAK,aA7BpB,CAAI,IAAJ,SAAI,MAAJ,SAgCWgf,GACHA,EAAQC,eAAe,UAjC/B,GAAmC,IAqCtB,GAAb,kDACI,WAAY,EAAkC,EAA0B,GAAwB,kCAC5F,cAAM,IADoC,UAA0B,cAAwB,EADpG,wDAMQ,OAAO,KAAK,UANpB,qCAUQ,OAAO,KAAK,YAVpB,6BAaW,GACH,EAAQ,wBAAwB,UAdxC,GAA4C,ICzC/B,GAAb,YAAE,qBAAF,iBACI,WACI,EACQ,EACA,GAAgC,kCAExC,cAAM,IAHE,aACA,eAAgC,EAJ9C,uBAAE,IAAJ,gBAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,CAAI,IAAJ,gBAAI,MAAJ,WAcQ,OAAO,KAAK,aAdpB,CAAI,IAAJ,SAAI,MAAJ,SAiBW,GACH,EAAQ,aAAa,UAlB7B,GAAiC,KJCjC,SAAK,GACC,EAAF,eADJ,CAAK,QAAiB,KAGtB,IAYY,GAZU,GAAtB,YAAE,qBAAF,iBACM,SAAF,EAAY,GAAwB,kCAChC,cAAM,IAOS,mBAAwC,GAAkB,IARzC,EADtC,uBAAE,IAAJ,SAAI,MAAJ,SAKW,GACH,EAAQ,oBAAoB,UANpC,GAAiD,KAYjD,SAAY,GACN,EAAF,aACE,EAAF,eAFJ,CAAY,QAAgB,KAI5B,IA2BK,GA3BQ,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,GAA4B,kCAEpC,cAAM,IAJE,YACA,SACA,WAA4B,EAL1C,uBAAE,IAAJ,eAAI,MAAJ,WAWQ,OAAO,KAAK,YAXpB,CAAI,IAAJ,UAAI,MAAJ,WAeQ,OAAO,KAAK,OAfpB,CAAI,IAAJ,YAAI,MAAJ,WAmBQ,OAAO,KAAK,SAnBpB,CAAI,IAAJ,SAAI,MAAJ,SAsBW,GACH,EAAQ,wBAAwB,UAvBxC,GAA4C,KA2B5C,SAAK,GACD,iBADJ,CAAK,QAA2B,KAGhC,IAgBK,GAhBiB,GAAtB,kDACI,WAAY,EAAkC,GAAkC,kCAC5E,cAAM,IADoC,aAY3B,+BAA4D,GAA4B,IAZ3B,EADpF,4DAMQ,OAAO,KAAK,aANpB,6BASWD,GACHA,EAAQ,8BAA8B,UAV9C,GAA2D,KAgB3D,SAAK,GACD,iBADJ,CAAK,QAA6B,KAGlC,IAQK,GARQ,GAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAAsC,GAA8B,IAD3F,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGWA,GACHA,EAAQ,sCAAsC,UAJtD,GAAoD,KAQpD,SAAK,GACD,iBADJ,CAAK,QAA8B,KAG5B,IAQF,GARQ,GAAb,iG,2BACuB,KAAuC,GAA+B,IAD7F,qDAGW,GACH,EAAQ,uCAAuC,UAJvD,GAAqD,KAQrD,SAAK,GACD,iBADJ,CAAK,QAA0B,KAG/B,IKvFK,GLuFQ,GAAb,iG,2BACuB,KAAmC,GAA2B,IADrF,qDAGW,GACH,EAAQ,mCAAmC,UAJnD,GAAiD,KKvFjD,SAAK,GACC,EAAF,eADJ,CAAK,QAAY,KAGjB,ICRK,GDQiB,GAAtB,iG,2BACuB,cAA8B,GAAa,IADlE,qDAGW,GACH,EAAQ,eAAe,UAJ/B,GAA4C,IAQ/B,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAAwB,GAA6B,kCAC/F,cAAM,IADoC,OAAwB,WAA6B,EADrG,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,YAAI,MAAJ,WAUQ,OAAO,KAAK,SAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,mBAAmB,UAdnC,GAAuC,IAkB1B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAoC,GAA0B,kCACxG,cAAM,IADoC,aAAoC,eAA0B,EAD9G,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,gBAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,gBAAgB,UAdhC,GAAoC,IAkBvB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAAoC,GAA2B,kCACzG,cAAM,IADoC,aAAoC,SAA2B,EAD/G,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,SAAS,UAdzB,GAA6B,IAkBhB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAA8B,GAAkB,kCAC1F,cAAM,IADoC,OAA8B,OAAkB,EADhG,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAKE,OANpB,CAAI,IAAJ,QAAI,MAAJ,WAUQ,OAAO,KAAK,KAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,aAAa,UAd7B,GAAiC,IAkBpB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAoB,kCAC9D,SAAAlf,KAAM,IADoC,OAAoB,EADpE,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,gBAAgB,UAVhC,GAAoC,IAcvB,GAAb,YAAE,qBAAF,iBACI,WACI,EACQ,EACA,EACA,GAA2B,kCAEnC,SAAAA,KAAM,IAJE,OACA,WACA,SAA2B,EALzC,uBAAE,IAAJ,UAAI,MAAJ,WAWQ,OAAOA,KAAK6O,OAXpB,CAAI,IAAJ,YAAI,MAAJ,WAeQ,OAAO,KAAK,SAfpB,CAAI,IAAJ,UAAI,MAAJ,WAmBQ,OAAO,KAAK,OAnBpB,CAAI,IAAJ,SAAI,MAAJ,SAsBW,GACH,EAAQ,UAAU,UAvB1B,GAA8B,IA2BjB,GAAb,YAAE,qBAAF,iBACI,WACI,EACQ,EACA,EACA,GAA8B,kCAEtC,cAAM,IAJE,OACA,aACA,YAA8B,EAL5C,uBAAE,IAAJ,UAAI,MAAJ,WAWQ,OAAO,KAAKA,OAXpB,CAAI,IAAJ,cAAI,MAAJ,WAeQ,OAAO7O,KAAK,WAfpB,CAAI,IAAJ,aAAI,MAAJ,WAmBQ,OAAO,KAAK,UAnBpB,CAAI,IAAJ,SAAI,MAAJ,SAsBW,GACH,EAAQ,aAAa,UAvB7B,GAAiC,IA2BpB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,GAAsB,kCAChE,cAAM,IADoC,SAAsB,EADtE,uBAAE,IAAJ,YAAI,MAAJ,WAMQ,OAAO,KAAK,SANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,YAAY,UAV5B,GAAgC,IAcnB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAA8B,GAAkB,kCAC1F,cAAM,IADoC,OAA8B,OAAkB,EADhG,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,QAAI,MAAJ,WAUQ,OAAO,KAAK,KAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,UAAU,UAd1B,GAA8B,IAkBjB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAA0B,kCACpE,cAAM,IADoC,aAA0B,EAD1E,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASWgf,GACHA,EAAQ,WAAW,UAV3B,GAA+B,IAclB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAoC,kCAC9E,SAAAhf,KAAM,IADoC,aAAoC,EADpF,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAOA,KAAKmf,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,YAAY,UAV5B,GAAgC,IAcnB,GAAb,kDACI,WACI,EACQ,EACA,EACA,EACA,GAAyC,kCAEjD,cAAM,IALE,aACA,SACA,YACA,aAAyC,EANzD,4DAYQ,OAAO,KAAK,aAZpB,gCAgBQ,OAAO,KAAK,OAhBpB,mCAoBQ,OAAO,KAAK,UApBpB,gCAwBQ,OAAOnf,KAAK,WAxBpB,6BA2BW,GACH,EAAQ,QAAQ,UA5BxB,GAA4B,IAgCf,GAAb,kDACI,WAAY,EAAkC,EAAoC,GAA2B,kCACzG,cAAM,IADoC,aAAoC,SAA2B,EADjH,4DAMQ,OAAO,KAAK,aANpB,gCAUQ,OAAO,KAAK,OAVpB,6BAaW,GACH,EAAQ,YAAY,UAd5B,GAAgC,IAkBnB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAkC,EAAoC,GAA2B,kCACzG,cAAM,IADoC,aAAoC,SAA2B,EAD/G,uBAAE,IAAJ,iBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,UAAI,MAAJ,WAUQ,OAAO,KAAK,OAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,WAAW,UAd3B,GAA+B,IAkBlB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,EAAqC,GAA0B,kCACzG,cAAM,IADoC,OAAqC,eAA0B,EAD/G,uBAAE,IAAJ,UAAI,MAAJ,WAMQ,OAAO,KAAK,OANpB,CAAI,IAAJ,iBAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,CAAI,IAAJ,SAAI,MAAJ,SAaW,GACH,EAAQ,YAAY,UAd5B,GAAgC,IAkBnB,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,EACA,EACA,GAAiC,kCAEzC,cAAM,IANE,aACA,eACA,OACA,OACA,eAAiC,EAP/C,uBAAE,IAAJ,gBAAI,MAAJ,WAaQ,OAAO,KAAK,aAbpB,CAAI,IAAJ,gBAAI,MAAJ,WAiBQ,OAAO,KAAK,aAjBpB,CAAI,IAAJ,QAAI,MAAJ,WAqBQ,OAAO,KAAK,KArBpB,CAAI,IAAJ,QAAI,MAAJ,WAyBQ,OAAO,KAAK,KAzBpB,CAAI,IAAJ,gBAAI,MAAJ,WA6BQ,OAAO,KAAK,aA7BpB,CAAI,IAAJ,SAAI,MAAJ,SAgCW,GACH,EAAQ,SAAS,UAjCzB,GAA6B,IAqChB,GAAb,kDACI,WACI,EACQ,EACA,EACA,GAA2B,kCAEnC,cAAM,IAJE,cACA,OACA,SAA2B,EAL3C,6DAWQ,OAAO,KAAK,cAXpB,8BAeQ,OAAO,KAAK,KAfpB,gCAmBQ,OAAO,KAAK,OAnBpB,6BAsBW,GACH,EAAQ,aAAa,UAvB7B,GAAiC,IA2BpB,GAAb,kDACI,WAAY,EAAkC,GAAiC,kCAC3E,cAAM,IADoC,aAAiC,EADnF,4DAMQ,OAAO,KAAK,aANpB,6BASW,GACH,EAAQ,oBAAoB,UAVpC,GAAwC,IE5W3B,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,GAAwC,kCAEhD,cAAM,IAHE,aACA,eAAwC,EAJtD,uBAAE,IAAJ,gBAAI,MAAJ,WAUQ,OAAO,KAAK,aAVpB,CAAI,IAAJ,gBAAI,MAAJ,WAcQ,OAAO,KAAK,aAdpB,CAAI,IAAJ,SAAI,MAAJ,SAiBW,GACH,EAAQ,uBAAuB,UAlBvC,GAA2C,KDF3C,SAAK,GACD,iBADJ,CAAK,QAAO,KAGZ,IERY,GFQU,GAAtB,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,KAAgB,GAAQ,IAD/C,EAAE,uBAAE,IAAJ,SAAI,MAAJ,SAGW,GACH,EAAQ,UAAU,UAJ1B,GAAuC,IAQ1B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAkC,GAAkB,kCAC5D,cAAM,IADoC,aAAkB,EADlE,uBAAE,IAAJ,gBAAI,MAAJ,WAMQ,OAAO,KAAK,aANpB,CAAI,IAAJ,SAAI,MAAJ,SASW,GACH,EAAQ,eAAe,UAV/B,GAAmC,IActB,GAAb,YAAE,qBAAF,iBACI,WACI,EACQ,EACA,GAAsC,kCAE9C,cAAM,IAHE,UACA,aAAsC,EAJpD,uBAAE,IAAJ,aAAI,MAAJ,WAUQ,OAAO,KAAK,UAVpB,CAAI,IAAJ,cAAI,MAAJ,WAcQ,OAAO,KAAK,WAdpB,CAAI,IAAJ,SAAI,MAAJ,SAiBW,GACH,EAAQ,aAAa,UAlB7B,GAAiC,IGrBpB,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACQ,EACA,EACA,GAAgC,kCAExC,cAAM,IAJE,QACA,SACA,eAAgC,EAL9C,uBAAE,IAAJ,WAAI,MAAJ,WAWQ,OAAO,KAAK,QAXpB,CAAI,IAAJ,UAAI,MAAJ,WAeQ,OAAO,KAAK,OAfpB,CAAI,IAAJ,gBAAI,MAAJ,WAmBQ,OAAOA,KAAK,aAnBpB,CAAI,IAAJ,SAAI,MAAJ,SAsBW,GACH,EAAQ,cAAc,UAvB9B,GAAkC,IA2BrB,GAAb,kDACI,WAAY,EAAkC,GAAsC,kCAChF,cAAM,IADoC,YAAsC,EADxF,2DAMQ,OAAO,KAAK,YANpB,6BASW,GACH,EAAQ,kBAAkB,UAVlC,GAAsC,ICuChB,GAAtB,WAAE,SAAF,IAAI,oBAAF,uBAAE,IAAJ,sBAAI,MAAJ,SACwB,GACZ,aAAgB,GAChB,KAAK,wBAAwB,GAG7B,aAAgB,IAChB,KAAK,8BAA8B,KAP/C,CAAI,IAAJ,0BAAI,MAAJ,SAY4B,MAZ5B,CAAI,IAAJ,gCAAI,MAAJ,SAckC,GACtB,aAAgB,GAChB,KAAK,sCAAsC,GAG3C,aAAgB,GAChB,KAAK,uCAAuC,GAG5C,aAAgB,IAChB,KAAK,mCAAmC,KAxBpD,CAAI,IAAJ,wCAAI,MAAJ,SA6B0C,MA7B1C,CAAI,IAAJ,qCAAI,MAAJ,SA+BuC,MA/BvC,CAAI,IAAJ,yCAAI,MAAJ,SAiC2C,MAjC3C,CAAI,IAAJ,YAAI,MAAJ,SAmCc,GACFof,aAAgB,GAChBpf,KAAK,eAAeof,GAGpBA,aAAgB,IAChBpf,KAAK,aAAa,KAzC9B,CAAI,IAAJ,iBAAI,MAAJ,SA8CmB,MA9CnB,CAAI,IAAJ,eAAI,MAAJ,SAgDiB,MAhDjB,CAAI,IAAJ,kBAAI,MAAJ,SAkDoB,GACR,aAAgB,GAChB,KAAK,qBAAqB,GAG1B,aAAgB,GAChB,KAAK,+BAA+B,GAGpC,aAAgB,GAChB,KAAK,0BAA0B,GAG/B,aAAgB,IAChB,KAAK,oBAAoB,KAhErC,CAAI,IAAJ,uBAAI,MAAJ,SAqEyB,MArEzB,CAAI,IAAJ,iCAAI,MAAJ,SAuEmC,MAvEnC,CAAI,IAAJ,4BAAI,MAAJ,SAyE8B,MAzE9B,CAAI,IAAJ,sBAAI,MAAJ,SA2EwB,MA3ExB,CAAI,IAAJ,4BAAI,MAAJ,SA6E8B,GAClB,aAAgB,GAChB,KAAK,sBAAsB,GAG3B,aAAgB,IAChB,KAAK,wBAAwB,KAnFzC,CAAI,IAAJ,wBAAI,MAAJ,SAwF0B,MAxF1B,CAAI,IAAJ,0BAAI,MAAJ,SA0F4B,MA1F5B,CAAI,IAAJ,YAAI,MAAJ,SA6Fc,MA7Fd,CAAI,IAAJ,mBAAI,MAAJ,SA+FqB,MA/FrB,CAAI,IAAJ,mBAAI,MAAJ,SAkGqB,MAlGrB,CAAI,IAAJ,eAAI,MAAJ,SAqGiB,MArGjB,CAAI,IAAJ,mBAAI,MAAJ,SAuGqB,GACTof,aAAgB,GAChBpf,KAAK,eAAe,GAGpBof,aAAgB,GAChBpf,KAAK,eAAe,GAGpBof,aAAgB,GAChBpf,KAAK,kBAAkB,GAGvBof,aAAgB,GAChBpf,KAAK,kBAAkB,GAGvBof,aAAgB,IAChBpf,KAAK,eAAe,KAzHhC,CAAI,IAAJ,iBAAI,MAAJ,SA8HmB,MA9HnB,CAAI,IAAJ,iBAAI,MAAJ,SAgImB,MAhInB,CAAI,IAAJ,oBAAI,MAAJ,SAkIsB,MAlItB,CAAI,IAAJ,oBAAI,MAAJ,SAoIsB,MApItB,CAAI,IAAJ,iBAAI,MAAJ,SAuImB,MAvInB,CAAI,IAAJ,0BAAI,MAAJ,SAyI4B,MAzI5B,CAAI,IAAJ,qBAAI,MAAJ,SA4IuB,MA5IvB,CAAI,IAAJ,sBAAI,MAAJ,SA+IwB,MA/IxB,CAAI,IAAJ,gBAAI,MAAJ,SAkJkB,MAlJlB,CAAI,IAAJ,0BAAI,MAAJ,SAoJ4B,MApJ5B,CAAI,IAAJ,oBAAI,MAAJ,SAsJsB,MAtJtB,CAAI,IAAJ,iBAAI,MAAJ,SAyJmB,MAzJnB,CAAI,IAAJ,yBAAI,MAAJ,SA4J2B,MA5J3B,CAAI,IAAJ,iBAAI,MAAJ,SA+JmB,MA/JnB,CAAI,IAAJ,gBAAI,MAAJ,SAkKkB,MAlKlB,CAAI,IAAJ,0BAAI,MAAJ,SAoK4B,MApK5B,CAAI,IAAJ,gBAAI,MAAJ,SAuKkB,MAvKlB,CAAI,IAAJ,iBAAI,MAAJ,SAyKmB,GACP,aAAgB,GAChB,KAAK,mBAAmB,GAGxB,aAAgB,GAChB,KAAK,gBAAgB,GAGrB,aAAgB,GAChB,KAAK,SAAS,GAGd,aAAgB,GAChB,KAAK,aAAa,GAGlB,aAAgB,GAChB,KAAK,gBAAgB,GAGrB,aAAgB,GAChB,KAAK,UAAU,GAGf,aAAgB,GAChB,KAAK,aAAa,GAGlB,aAAgB,GAChB,KAAK,YAAY,GAGjBof,aAAgB,GAChBpf,KAAK,UAAU,GAGfof,aAAgB,GAChBpf,KAAK,WAAW,GAGhB,aAAgB,GAChB,KAAK,YAAY,GAGjB,aAAgB,GAChB,KAAK,QAAQ,GAGb,aAAgB,GAChB,KAAK,YAAY,GAGjB,aAAgB,GAChB,KAAK,WAAW,GAGhB,aAAgB,GAChB,KAAK,YAAY,GAGjB,aAAgB,GAChB,KAAK,SAAS,GAGd,aAAgB,GAChB,KAAK,aAAa,GAGlB,aAAgB,IAChB,KAAK,oBAAoB,KA/OrC,CAAI,IAAJ,qBAAI,MAAJ,SAoPuB,MApPvB,CAAI,IAAJ,kBAAI,MAAJ,SAsPoB,MAtPpB,CAAI,IAAJ,WAAI,MAAJ,SAwPa,MAxPb,CAAI,IAAJ,eAAI,MAAJ,SA0PiB,MA1PjB,CAAI,IAAJ,kBAAI,MAAJ,SA4PoB,MA5PpB,CAAI,IAAJ,YAAI,MAAJ,SA8Pc,MA9Pd,CAAI,IAAJ,eAAI,MAAJ,SAgQiB,MAhQjB,CAAI,IAAJ,cAAI,MAAJ,SAkQgB,MAlQhB,CAAI,IAAJ,YAAI,MAAJ,SAoQc,MApQd,CAAI,IAAJ,aAAI,MAAJ,SAsQe,MAtQf,CAAI,IAAJ,cAAI,MAAJ,SAwQgB,MAxQhB,CAAI,IAAJ,UAAI,MAAJ,SA0QY,MA1QZ,CAAI,IAAJ,cAAI,MAAJ,SA4QgB,MA5QhB,CAAI,IAAJ,aAAI,MAAJ,SA8Qe,MA9Qf,CAAI,IAAJ,cAAI,MAAJ,SAgRgB,MAhRhB,CAAI,IAAJ,WAAI,MAAJ,SAkRa,MAlRb,CAAI,IAAJ,eAAI,MAAJ,SAoRiB,MApRjB,CAAI,IAAJ,sBAAI,MAAJ,SAsRwB,MAtRxB,CAAI,IAAJ,kBAAI,MAAJ,SAwRoB,GACR,aAAgB,GAChB,KAAK,sBAAsB,GAG3B,aAAgB,IAChB,KAAK,0BAA0B,KA9R3C,CAAI,IAAJ,4BAAI,MAAJ,SAmS8B,GAClB,aAAgB,GAChB,KAAK,sBAAsB,GAG3B,aAAgB,GAChB,KAAK,qBAAqB,GAG1B,aAAgB,GAChB,KAAK,sBAAsB,GAG3B,aAAgB,GAChB,KAAK,8BAA8B,GAGnC,aAAgB,IAChB,KAAK,eAAe,KArThC,CAAI,IAAJ,uBAAI,MAAJ,SA0TyB,MA1TzB,CAAI,IAAJ,wBAAI,MAAJ,SA4T0B,MA5T1B,CAAI,IAAJ,gCAAI,MAAJ,SA8TkC,MA9TlC,CAAI,IAAJ,iBAAI,MAAJ,SAgUmB,MAhUnB,CAAI,IAAJ,wBAAI,MAAJ,SAkU0B,GACd,aAAgB,GAChB,KAAK,mBAAmB,GAGxB,aAAgB,GAChB,KAAK,eAAe,GAGpB,aAAgB,IAChB,KAAK,UAAU,KA5U3B,CAAI,IAAJ,qBAAI,MAAJ,SAiVuB,MAjVvB,CAAI,IAAJ,iBAAI,MAAJ,SAmVmB,MAnVnB,CAAI,IAAJ,iBAAI,MAAJ,SAqVmB,MArVnB,CAAI,IAAJ,YAAI,MAAJ,SAuVc,GACF,aAAgB,GAChB,KAAK,YAAY,GAGjB,aAAgB,GAChB,KAAK,iBAAiB,GAGtB,aAAgB,IAChB,KAAK,iBAAiB,KAjWlC,CAAI,IAAJ,mBAAI,MAAJ,SAsWqB,MAtWrB,CAAI,IAAJ,mBAAI,MAAJ,SAwWqB,MAxWrB,CAAI,IAAJ,cAAI,MAAJ,SA0WgB,GACJ,aAAgB,GAChB,KAAK,iBAAiB,GAGtB,aAAgB,GAChB,KAAK,uBAAuB,GAG5B,aAAgB,IAChB,KAAK,aAAa,KApX9B,CAAI,IAAJ,mBAAI,MAAJ,SAyXqB,MAzXrB,CAAI,IAAJ,wBAAI,MAAJ,SA2X0B,MA3X1B,CAAI,IAAJ,eAAI,MAAJ,SA6XiB,GACL,aAAgB,GAChB,KAAK,YAAY,GAGjB,aAAgB,GAChB,KAAK,uBAAuB,GAG5B,aAAgB,GAChB,KAAK,UAAU,GAGf,aAAgB,GAChB,KAAK,iBAAiB,GAGtB,aAAgB,GAChB,KAAK,eAAe,GAGpB,aAAgB,GAChB,KAAK,gBAAgB,GAGrB,aAAgB,GAChB,KAAK,kBAAkB,GAGvB,aAAgB,IAChB,KAAK,gBAAgB,KA3ZjC,CAAI,IAAJ,cAAI,MAAJ,SAgagB,GACJ,aAAgB,GAChB,KAAK,mBAAmB,GAGxB,aAAgB,IAChB,KAAK,gBAAgB,KAtajC,CAAI,IAAJ,qBAAI,MAAJ,SA4auB,MA5avB,CAAI,IAAJ,kBAAI,MAAJ,SA8aoB,MA9apB,CAAI,IAAJ,yBAAI,MAAJ,SAib2B,MAjb3B,CAAI,IAAJ,YAAI,MAAJ,SAmbc,MAnbd,CAAI,IAAJ,mBAAI,MAAJ,SAqbqB,MArbrB,CAAI,IAAJ,iBAAI,MAAJ,SAubmB,MAvbnB,CAAI,IAAJ,kBAAI,MAAJ,SAyboB,MAzbpB,CAAI,IAAJ,oBAAI,MAAJ,SA2bsB,QA3btB,MF3EA,SAAY,GACR,YACAqf,EAAA,kBACAA,EAAA,wBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,cACAA,EAAA,gBARJ,CAAY,QAAkB,KG8G9B,IC1GK,GD0GQ,GAAb,WACM,SAAF,EAA6B,EAA8B,GAAY,oBAA1C,iBAA8B,aAD7D,uBAAE,IAAJ,SAAI,MAAJ,SAGmB,GAAe,IAAL,EAAK,uDAAD,EACnB,EAAQ,KAAK,MAAM,KAAK,GAC9B,OAAO,KAAK,iBAAiB,EAAO,KAL5C,CAAI,IAAJ,mBAAI,MAAJ,SAQ6B,EAAc,GACnC,OAAO,aAAiB,GAAY,EAAM,WAAa,IAT/D,CAAI,IAAJ,gBAAI,MAAJ,SAY0B,GAClB,IAAM,EAAQ,KAAK,MAAM,KAAK,GACxB,OAAC,aAAiB,GAAmB,EAAM,kBAAoB,IAd7E,CAAI,IAAJ,cAAI,MAAJ,WAkBc,OAAC,KAAK,OAAO,EAAI,aAlB/B,CAAI,IAAJ,cAAI,MAAJ,WAsBQ,OAAO,KAAK,OAAO,EAAI,aAtB/B,CAAI,IAAJ,QAAI,MAAJ,WA0BQ,OAAO,KAAK,OAAO,EAAI,OA1B/B,CAAI,IAAJ,QAAI,MAAJ,SA6B4B,GACpB,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAAc,MAE/C,MADA,KAAK,UAAU,IAAI,IAAI,GAAmB,EAAO,EAAmB,MAAO,IACrE,IAAI,MAAJ,WACE,EAAM,MAAM,KADd,YACsB,EAAM,MAAM,UADlC,YAC+C,EAAM,IAAI,KADzD,YACiE,EAAM,IAAI,UAD3E,cAC0F,MAjCxG,CAAI,IAAJ,OAAI,MAAJ,SAqCiB,EAA0B,GACnC,KAAO,MAAgB,KAAK,SACxB,MAvCZ,CAAI,IAAJ,wBAAI,MAAJ,SA2CkC,GAC1B,IAAK,KAAK,mBAAmB,GAAM,CAC/B,IAAM,EAAG,qCAAiC,GAC1C,KAAK,MAAM,MA9CvB,CAAI,IAAJ,qBAAI,MAAJ,SAkD+B,GACvB,QAAK,KAAK,OAAO,KAGjB,KAAK,MAAM,QACJ,KAvDf,CAAI,IAAJ,+BAAI,MAAJ,SA0DyC,GACjC,IAAK,KAAK,0BAA0B,GAAa,CAC7C,IAAM,EAAG,mDAA+C,GACxD,KAAK,MAAM,MA7DvB,CAAI,IAAJ,WAAI,MAAJ,SAiEwB,GAChB,IACI,KAAK,UAAU,YACfrf,KAAK,MAAM,YACX,IAAM,EAAW,IAEjB,OADA,KAAK,MAAM,eACJ,EACT,MAAO,GAGL,OAFA,KAAK,UAAU,oBACf,KAAK,MAAM,kBA1EvB,CAAI,IAAJ,4BAAI,MAAJ,SA+EsC,GAC9B,QAAK,KAAK,cAAc,KAGxB,KAAK,MAAM,QACJ,KApFf,CAAI,IAAJ,YAAI,MAAJ,WAwFQ,IAAM,EAAO,KAAK,MAAM,KAAK,GAC7B,GAAI,aAAgB,EAEhB,OADA,KAAK,MAAM,OACJ,IAAI,GAAS,EAAK,cAAe,EAAK,iBAGjD,OAAO,KAAK,MADA,qCA7FpB,CAAI,IAAJ,mBAAI,MAAJ,WAkGQ,IAAM,EAAO,KAAK,MAAM,KAAK,GAC7B,KAAM,aAAgB,GAClB,OAAO,KAAK,MAAM,iCAGtB,GADA,KAAK,MAAM,OACP,KAAK,mBAAmB,EAAI,mBAAoB,CAChD,IAAM,EAAS,KAAK,qBACd,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,oBACxB,IAAI,GAAgB,EAAe,MAAM,EAAK,cAAe,GAAM,EAAK,gBAAiB,GAEpG,OAAO,IAAI,GAAgB,EAAK,cAAe,EAAK,gBAAiB,IAAI,SA7GjF,CAAI,IAAJ,mBAAI,MAAJ,WAiHQ,GAAK,KAAK,OAAO,EAAI,mBAArB,CAGA,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,KAAD,sBAAsB,EAAI,mBAC/B,IAAI,EAAO,KAAK,MAAM,OACtB,KAAM,aAAgB,GAClB,OAAO,KAAK,MAAM,0BAEtB,IAAM,EAAM,EAAK,YACb,EAAc,EACd,KAAK,mBAAmB,EAAI,aAC5B,EAAO,KAAK,MAAM,KAAK,cACH,GAChB,KAAK,MAAM,OACX,EAAM,EAAK,aACJ,KAAK,OAAO,EAAI,WACvB,KAAK,MAAM,OACX,EAAM,KAEN,KAAK,MAAM,4BAGnB,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,oBACxB,IAAI,GAAgB,EAAe,MAAM,EAAO,GAAM,EAAK,MA1I1E,CAAI,IAAJ,4BAAI,MAAJ,SA8IQ,GAEA,IAAM,EAAO,KAAK,YACZ,EAAc,KAAK,mBAKzB,OAAO,IAAI,OAHS,IAAhB,EACM,EAAK,cACL,EAAe,MAAM,EAAK,cAAe,EAAY,eACrB,EAAM,KAtJxD,CAAI,IAAJ,mCAAI,MAAJ,WA0JQ,OAAO,KAAK,0BAA0B,MA1J9C,CAAI,IAAJ,oCAAI,MAAJ,WA8JQ,OAAO,KAAK,0BAA0B,MA9J9C,CAAI,IAAJ,cAAI,MAAJ,WAkKQ,IAAM,EAAU,IAAI,MAIpB,OAHI,KAAK,mBAAmB,EAAI,SAC5B,EAAQ,KAAR,QAAO,EAAS,KAAK,yCAElB,IAtKf,CAAI,IAAJ,gBAAI,MAAJ,WA0KQ,IAAM,EAAW,IAAI,MAIrB,OAHIA,KAAKsf,mBAAmBvP,EAAI,WAC5B,EAAS,KAAT,QAAQ,EAAS,KAAK,0CAEnB,IA9Kf,CAAI,IAAJ,oBAAI,MAAJ,WAkLQ,IAAM,EAAO,KAAK,YAClB,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAO,IAAI,MACZ,KAAK,OAAO,EAAI,mBACjB,EAAK,KAAL,QAAI,EAAS,KAAK,wBAEtB,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAiB,EAAe,MAAM,EAAK,cAAe,GAAM,EAAM,KA1LzF,CAAI,IAAJ,sBAAI,MAAJ,WA8LQ,OAAI,KAAK,mBAAmB,EAAI,KACrB,GAAoB,IAE3B,KAAK,mBAAmB,EAAI,QACrB,GAAoB,OAExB,KAAK,cApMpB,CAAI,IAAJ,qBAAI,MAAJ,WAwMQ,OAAO,KAAK,SAAS,KAAK,gBAAgB,KAAK,SAxMvD,CAAI,IAAJ,6BAAI,MAAJ,SA2MuC,GAAoC,MAC7D,EAAK,iBAAG,QAAH,IAAG,OAAH,EAAG,EAAY,qBAAf,QAAgC,KAAK,MAAM,KAAK,GAAG,cAC9D,KAAK,sBAAsB,EAAI,cAC/B,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cACzB,EAAU,KAAK,sBACrB,OAAO,IAAI,GAAgB,EAAe,MAAM,EAAO,GAAM,EAAY,KAhNjF,CAAI,IAAJ,2BAAI,MAAJ,WAoNQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,OACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBACxB,IAAK,KAAK,OAAO,EAAI,OAAQ,CACzB,GAAI,aAAsB,GAAqB,CAC3C,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAc,EAAe,MAAM,EAAO,QAAM,EAAW,EAAW,WAErF,KAAK,MAAM,mCAEf,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAU,KAAK,sBACf,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAc,EAAe,MAAM,EAAO,GAAM,EAAY,KApO/E,CAAI,IAAJ,wBAAI,MAAJ,WAwOQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,QACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAe,EAAe,MAAM,EAAO,GAAM,KA9OpE,CAAI,IAAJ,eAAI,MAAJ,WAkPQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAC9B,GAAI,aAAiB,GAAW,CAC5B,KAAK,MAAM,OACX,IAAM,EAAO,EAAM,UACnB,OAAoB,IAAhB,EAAK,OACE,IAAI,GAAsB,EAAM,cAAe,GAEnD,IAAI,GAAS,EAAM,cAAe,GAE7C,GAAI,aAAiB,EAEjB,OADA/P,KAAK,MAAM,OACJ,IAAI,GAAkB,EAAM,cAAe,EAAM,aAE5D,GAAI,aAAiB,EAEjB,OADA,KAAK,MAAM,OACJ,IAAI,GAAkB,EAAM,cAAe,EAAM,aAE5D,GAAI,aAAiB,GAEjB,OADA,KAAK,MAAM,OACJ,IAAI,GAAe,EAAM,cAAe,EAAM,aAEzD,GAAI,KAAK,cAAc,GAAmB,OACtC,OAAO,KAAK,2BAEhB,GAAI,KAAK,cAAc,GAAmB,QACtC,OAAO,KAAK,wBAEhB,IAAM,EAAa,KAAK,qBACxB,OAAIA,KAAK,OAAO,EAAI,cACT,KAAK,2BAA2B,QAExB,IAAf,EACO,KAAK,oBAGT,IArRf,CAAI,IAAJ,cAAI,MAAJ,WAyRQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,GAAI,KAAK,mBAAmB,EAAI,OAAQ,CACpC,IAAM,EAAO,KAAK,cAClB,OAAO,IAAI,GAAgB,EAAe,MAAM,EAAO,EAAK,eAAgB,GAAa,IAAK,GAElG,GAAI,KAAK,mBAAmB,EAAI,iBAAkB,CAC9C,IAAM,EAAa,KAAK,kBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAqB,EAAe,MAAM,EAAO,GAAM,GAEtE,OAAO,KAAK,iBApSpB,CAAI,IAAJ,gBAAI,MAAJ,WAwSQ,OACI,KAAK,OAAO,EAAI,WAChB,KAAK,OAAO,EAAI,QAChB,KAAK,OAAO,EAAI,MAChB,KAAK,OAAO,EAAI,MAChB,KAAK,OAAO,EAAI,OA7S5B,CAAI,IAAJ,mBAAI,MAAJ,WAkTQ,OAAI,KAAK,mBAAmB,EAAI,UACrB,GAAoB,MAE3B,KAAK,mBAAmB,EAAI,OACrB,GAAoB,IAE3B,KAAK,mBAAmB,EAAI,KACrB,GAAoB,QAE3BA,KAAKsf,mBAAmBvP,EAAI,KACrB,GAAoB,QAE3B/P,KAAK,mBAAmB,EAAI,KACrB,GAAoB,QAExB,KAAK,MAAM,mCAjU1B,CAAI,IAAJ,mBAAI,MAAJ,WAqUQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAK,KAAK,mBACV,EAAc,KAAK,cACzB,OAAO,IAAI,GAAgB,EAAe,MAAM,EAAO,EAAY,eAAgB,EAAI,KAxU/F,CAAI,IAAJ,YAAI,MAAJ,WA4UQ,IAAM,EAAS,KAAK,cACpB,IAAK,KAAK,gBACN,OAAO,EAGX,IAAM,EAAe,KAAK,uBACtB,KAAK,iBAAiB,KAAK,MAC3B,KAAK,cAAc,KAAK,OAG5B,OAAO,IAAI,GACP,EAAe,MAAM,EAAO,cAAe,EAAa,EAAa,OAAS,GAAG,eACjF,EACA,KAzVZ,CAAI,IAAJ,cAAI,MAAJ,WA8Vc,OAAC,KAAK,OAAO,EAAI,OAAS,KAAK,OAAO,EAAI,QAAU,KAAK,OAAO,EAAI,MA9VlF,CAAI,IAAJ,iBAAI,MAAJ,WAkWQ,OAAIA,KAAK,mBAAmB,EAAI,MACrB,GAAkB,KAEzB,KAAK,mBAAmB,EAAI,OACrB,GAAkB,MAEzB,KAAK,mBAAmB,EAAI,IACrB,GAAkB,GAEtB,KAAK,MAAM,iCA3W1B,CAAI,IAAJ,iBAAI,MAAJ,WA+WQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAK,KAAK,iBACV,EAAY,KAAK,YACvB,OAAO,IAAI,GAAc,EAAe,MAAM,EAAO,EAAU,eAAgB,EAAI,KAlX3F,CAAI,IAAJ,eAAI,MAAJ,WAsXQ,OAAO,KAAK,OAAO,EAAI,OAAS,KAAK,OAAO,EAAI,SAtXxD,CAAI,IAAJ,mBAAI,MAAJ,WA0XQ,OAAI,KAAK,mBAAmB,EAAI,MACrB,GAAe,KAEtB,KAAK,mBAAmB,EAAI,OACrB,GAAe,MAEnB,KAAK,MAAM,sCAhY1B,CAAI,IAAJ,iBAAI,MAAJ,WAoYQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAK,KAAK,mBACV,EAAO,KAAK,YAClB,OAAO,IAAI,GAAc,EAAe,MAAM,EAAO,EAAK,eAAgB,EAAI,KAvYtF,CAAI,IAAJ,wBAAI,MAAJ,WA2YQ,IAAM,EAAO,KAAK,eAAiB,KAAK,iBAAmB,KAAK,YAChE,IAAK,KAAK,cACN,OAAO,EAGX,IAAM,EAAa,KAAK,uBAAuB,KAAK,eAAe,KAAK,MAAO,KAAK,YAAY,KAAK,OAErG,OAAO,IAAI,GACP,EAAe,MAAM,EAAK,cAAe,EAAW,EAAW,OAAS,GAAG,eAC3E,EACA,KArZZ,CAAI,IAAJ,6BAAI,MAAJ,WA0ZQ,OACI,KAAK,OAAO,EAAI,QAChB,KAAK,OAAO,EAAI,aAChB,KAAK,OAAO,EAAI,OAChB,KAAK,OAAO,EAAI,YAChB,KAAK,OAAO,EAAI,UAChB,KAAK,OAAO,EAAI,gBAha5B,CAAI,IAAJ,gCAAI,MAAJ,WAqaQ,OAAI,KAAK,mBAAmB,EAAI,OACrB,GAAgB,MAEvB,KAAK,mBAAmB,EAAI,YACrB,GAAgB,SAEvB,KAAK,mBAAmB,EAAI,MACrB,GAAgB,KAEvB,KAAK,mBAAmB,EAAI,WACrB,GAAgB,UAEvB,KAAK,mBAAmB,EAAI,SACrB,GAAgB,KAEvBA,KAAKsf,mBAAmBvP,EAAI,cACrB,GAAgB,UAEpB,KAAK,MAAM,iCAvb1B,CAAI,IAAJ,wBAAI,MAAJ,SA2bQ,EACA,EACA,GAEA,IAAM,EAAK,KAAK,gCACV,EAAQ,KAAK,wBACnB,OAAO,IAAI,GAAqB,EAAe,MAAM,EAAO,EAAM,eAAgB,EAAY,EAAM,EAAI,KAjchH,CAAI,IAAJ,kBAAI,MAAJ,WAqcQ,IAAM,EAAa,KAAK,qBAClB,EAAmB,KAAK,wBAC9B,GAAI,aAA4B,GAAgB,CAC5C,IAAM,EAA8B,IAAtB,EAAW,OAAe,EAAiB,cAAgB,EAAW,GAAG,cACvF,GAAI,KAAK,mBAAmB,EAAI,QAAS,CACrC,IAAM,EAAc,KAAK,uCACzB,OAAO,IAAI,GACP,EAAe,MAAM,EAAO,EAAY,EAAY,OAAS,GAAG,eAChE,EACA,GAAuB,OACvB,GAGR,GAAI,KAAK,mBAAmB,EAAI,UAAW,CACvC,IAAM,EAAe,KAAK,wCAC1B,OAAO,IAAI,GACP,EAAe,MAAM,EAAO,EAAa,EAAa,OAAS,GAAG,eAClE,EACA,GAAuB,SACvB,GAGR,GAAI,KAAK,mBAAmB,EAAI,IAAK,CACjC,IAAM,EAAO,KAAK,YAClB,OAAO,IAAI,GACP,EAAe,MAAM,EAAO,EAAK,eACjC,EACA,EACA,GAGR,OAAI,KAAK,6BACE,KAAK,sBAAsB,EAAO,EAAY,GAElD,EAGX,IAAM,EAA8B,IAAtB,EAAW,OAAe,EAAiB,cAAgB,EAAW,GAAG,cACvF,OAAK,KAAK,6BAOH,KAAK,sBAAsB,EAAO,EAAY,GAN1C,IAAI,GACP,EAAe,MAAM,EAAO,EAAiB,eAC7C,EACA,KA/ehB,CAAI,IAAJ,qBAAI,MAAJ,WAsfQ,IAAM,EAAO,KAAK,YACZ,EAAc,IAAI,MACpB,EAAM,EAAK,cAMf,OALI,KAAK,mBAAmB,EAAI,mBAC5B,EAAY,KAAZ,QAAW,EAAS,KAAK,wBACzB,EAAM,KAAK,MAAM,KAAK,GAAG,cACzB,KAAK,sBAAsB,EAAI,mBAE5B,IAAI,GAAkB,EAAe,MAAM,EAAK,cAAe,GAAM,EAAM,KA9f1F,CAAI,IAAJ,8BAAI,MAAJ,SAigBwC,GAChC,IAAI,OAA8C,EAClD,GAAI,KAAK,OAAO,GAAM,CAClB,IAAM,EAAa,KAAK,MAAM,KAAK,GAAG,cACtC/P,KAAK,sBAAsB,GAC3B,EAAa,KAAK,uBAAuB,GAE7C,OAAO,IAxgBf,CAAI,IAAJ,uBAAI,MAAJ,WA4gBQ,IAAM,EAAO,KAAK,YAClB,GAAI,KAAK,mBAAmB,EAAI,mBAAoB,CAChD,IAAM,EAAc,KAAK,sBACnB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,oBACxB,IAAI,GAA8B,EAAe,MAAM,EAAK,cAAe,GAAM,EAAM,GAElG,OAAO,IAAI,GAAoB,EAAK,cAAe,KAnhB3D,CAAI,IAAJ,kBAAI,MAAJ,WAuhBQ,IAAM,EAAa,KAAK,uBACxB,GAAI,KAAK,mBAAmB,EAAI,iBAAkB,CAG9C,GAAI,KAAK,OAAO,EAAI,KAAM,CACtB,IAAM,EAAO,KAAK,YACZ,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAmB,EAAe,MAAM,EAAW,cAAe,GAAM,EAAY,GAEnG,IAAM,EAAS,KAAK,kBACd,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADAA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GACP,EAAe,MAAM,EAAW,cAAe,GAC/C,EACA,GAGR,OAAO,IA1iBf,CAAI,IAAJ,qBAAI,MAAJ,WA8iBQ,OAAO,KAAK,SAAS,KAAK,gBAAgB,KAAK,SA9iBvD,CAAI,IAAJ,yBAAI,MAAJ,SAijBmC,GAC3B,IAAM,EAAa,KAAK,qBAClB,EAAa,KAAK,qBAClB,EAAM,EAAW,EAAW,OAAS,GAAG,cAC9C,OAAO,IAAI,GAAsB,EAAe,MAAM,EAAO,GAAM,EAAY,KArjBvF,CAAI,IAAJ,oBAAI,MAAJ,WAyjBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,KACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBAClB,EAAO,IAAI,MACbA,KAAK,mBAAmB,EAAI,QAC5B,EAAK,KAAL,QAAI,EAAS,KAAK,wBAEtB,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAQ,EAAe,MAAM,EAAO,GAAM,EAAY,KAnkBzE,CAAI,IAAJ,uBAAI,MAAJ,WAukBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,QACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAMuf,EAAavf,KAAK,kBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAW,EAAe,MAAM,EAAO,GAAM,KA7kBhE,CAAI,IAAJ,wBAAI,MAAJ,WAilBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,SACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBACxB,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAS,KAAK,kBACd,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAY,EAAe,MAAM,EAAO,GAAM,EAAY,KAzlB7E,CAAI,IAAJ,2BAAI,MAAJ,WA6lBc,MAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,YACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAe,EAAe,MAAM,EAAO,GAAM,KAnmBpE,CAAI,IAAJ,qBAAI,MAAJ,WAumBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjCA,KAAK,6BAA6B,GAAmB,MACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBACxBA,KAAKwf,sBAAsBzP,EAAI,OAC/B,IAAM,EAAS,KAAK,kBACd,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAS,EAAe,MAAM,EAAO,GAAM,EAAY,KA/mB1E,CAAI,IAAJ,sBAAI,MAAJ,WAmnBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,6BAA6B,GAAmB,OACrD,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAa,KAAK,kBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAEzB,OADN,KAAK,sBAAsB,EAAI,kBACxB,IAAI,GAAU,EAAe,MAAM,EAAO,GAAM,KAznB/D,CAAI,IAAJ,qBAAI,MAAJ,SA4nB+B,GAAoC,MACrD,EAAK,iBAAG,QAAH,IAAG,OAAH,EAAG,EAAY,qBAAf,QAAgC,KAAK,MAAM,KAAK,GAAG,cAC9D,KAAK,sBAAsB,EAAI,iBAC/B,IAAM,EAAO,KAAK,YACZ,EAAc,IAAI,MACpB,EAAM,EAAK,cAMf,OALI,KAAK,mBAAmB,EAAI,mBAC5B,EAAY,KAAX,MAAD,EAAW,EAAS,KAAK,wBACzB,EAAM,KAAK,MAAM,KAAK,GAAG,cACzB,KAAK,sBAAsB,EAAI,mBAE5B,IAAI,GAAS,EAAe,MAAM,EAAO,GAAM,EAAY,EAAM,KAvoBhF,CAAI,IAAJ,wBAAI,MAAJ,SA0oBkC,GAAoC,MACxD,EAAK,iBAAG,QAAH,IAAG,OAAH,EAAG,EAAY,qBAAf,QAAgC,KAAK,MAAM,KAAK,GAAG,cAC9D,KAAK,sBAAsB,EAAI,cAC/B,IAAM,EAAO,KAAK,YACZ,EAAc,IAAI,MACpB,EAAM,EAAK,cAMT,OALF,KAAK,mBAAmB,EAAI,mBAC5B,EAAY,KAAZ,QAAW,EAAS,KAAK,wBACzB,EAAM,KAAK,MAAM,KAAK,GAAG,cACzB,KAAK,sBAAsB,EAAI,mBAE5B,IAAI,GAAY,EAAe,MAAM,EAAO,GAAM,EAAY,EAAM,KArpBnF,CAAI,IAAJ,2BAAI,MAAJ,SAwpBqC,GAC7B,KAAK,sBAAsB,EAAI,YAC/B,IAAM,EAAa,KAAK,kBACxB,OAAO,IAAI,GACP,EAAe,MAAM,EAAW,cAAe,EAAW,eAC1D,EACA,KA9pBZ,CAAI,IAAJ,uBAAI,MAAJ,WAkqBgC,MAClB,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,QAC/B,IAAM,EAAa,KAAK,qBACxB,OAAO,IAAI,GAAW,EAAe,MAAM,EAArB,iBAA4B,QAA5B,IAA4B,OAA5B,EAA4B,EAAY,qBAAxC,QAAyD,GAAQ,KAtqB/F,CAAI,IAAJ,mBAAI,MAAJ,WAyqB4B,WACd,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,IAC/B,IAAM,EAAa,KAAK,kBACxB,KAAK,sBAAsB,EAAI,MAC/B,IAAM,EAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAC1D,EAAS,IAAI,MACb,KAAD,MACD,kBAAM,EAAK,OAAO,EAAI,UACtB,WACI,IAAM,EAAQ,EAAK,MAAM,KAAK,GAAG,cACjC,EAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAa,EAAK,kBACxB,EAAK,sBAAsB,EAAI,MAC/B,IAAM,EAAW,EAAK,uBAAuB,EAAK,MAAM,KAAK,GAAG,eAChE,EAAO,KAAK,IAAI,GAAW,EAAe,MAAM,EAAO,EAAS,eAAgB,EAAY,OAGpG,IAAI,OAAgD,EAChD/P,KAAK,mBAAmB,EAAI,QAC5B,EAAe,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,gBAElE,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,KACxB,IAAI,GAAO,EAAe,MAAM,EAAO,GAAM,EAAY,EAAU,EAAQ,KAjsB1F,CAAI,IAAJ,sBAAI,MAAJ,WAqsBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAa,KAAK,kBACxB,KAAK,sBAAsB,EAAI,IAC/B,IAAM,EAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAC1D,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,KACxB,IAAI,GAAU,EAAe,MAAM,EAAO,GAAM,EAAY,KA5sB3E,CAAI,IAAJ,uBAAI,MAAJ,WAgtBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,QAC/B,IAAM,EAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAChE,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAa,KAAK,kBACxB,OAAO,IAAI,GAAW,EAAe,MAAM,EAAO,EAAW,eAAgB,EAAU,KArtB/F,CAAI,IAAJ,oBAAI,MAAJ,WAytBc,MAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,KAAD,sBAAsB,EAAI,KAC/B,IAAM,EAAa,KAAK,kBACxB,KAAK,sBAAsB,EAAI,YACzB,MAAmB,KAAK,kBACxB,KAAD,sBAAsB,EAAI,IAC/B,IAAM,EAAa,KAAK,kBACpB,OAA2C,EAC3C,KAAK,mBAAmB,EAAI,MAC5B,EAAS,KAAK,2BAEZ,KAAD,sBAAsB,EAAI,IACzB,MAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAC1D,EAAM,KAAK,MAAM,KAAK,GAAG,cAEzB,OADA,KAAD,sBAAsB,EAAI,KACxB,IAAI,GACP,EAAe,MAAM,EAAO,GAC5B,EACA,EACA,EACA,EACA,KA9uBZ,CAAI,IAAJ,wBAAI,MAAJ,WAmvBQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,SACzB,MAAc,KAAK,sBACzB,KAAK,sBAAsB,EAAI,IAC/B,IAAM,EAAa,KAAK,kBAClB,KAAD,sBAAsB,EAAI,IACzB,MAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAC1D,EAAM,KAAK,MAAM,KAAK,GAAGyf,cAEzB,OADA,KAAD,sBAAsB,EAAI,KACxB,IAAI,GAAY,EAAe,MAAM,EAAO,GAAM,EAAa,EAAY,KA5vB1F,CAAI,IAAJ,sBAAI,MAAJ,WAgwBc,MAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,KAAD,sBAAsB,EAAI,OACzB,MAAW,KAAK,uBAAuB,KAAK,MAAM,KAAK,GAAG,eAC1D,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,KACxB,IAAI,GAAmB,EAAe,MAAM,EAAO,GAAM,KArwBxE,CAAI,IAAJ,iBAAI,MAAJ,WAywBc,GAAF,KAAK,cAAc,GAAmB,KACtC,OAAO,KAAK,oBAEhB,GAAI,KAAK,cAAc,GAAmB,QACtC,OAAO,KAAK,uBAEhB,GAAI,KAAK,cAAc,GAAmB,SACtC,OAAO,KAAK,wBAEhB,GAAI,KAAK,cAAc,GAAmB,YACtC,OAAO,KAAK,2BAEhB,GAAI,KAAK,cAAc,GAAmB,MACtC,OAAO,KAAK,qBAEhB,GAAI,KAAK,cAAc,GAAmB,OACtC,OAAO,KAAK,sBAEhB,GAAI,KAAK,OAAO,EAAI,QAChB,OAAO,KAAK,uBAEhB,GAAI,KAAK,OAAO,EAAI,IAChB,OAAO,KAAK,mBAEhB,GAAI,KAAK,OAAO,EAAI,OAChB,OAAO,KAAK,sBAEhB,GAAI,KAAK,OAAO,EAAI,QAChB,OAAO,KAAK,uBAEhB,GAAI,KAAK,OAAO,EAAI,KAChB,OAAO,KAAK,oBAEhB,GAAI,KAAK,OAAO,EAAI,SAChB,OAAO,KAAK,wBAEhB,GAAI,KAAK,OAAO,EAAI,OAChB,OAAO,KAAK,sBAEhB,IAAM,EAAa,KAAK,qBACxB,GAAI,KAAK,OAAO,EAAI,iBAChB,OAAO,KAAK,mBAAmB,GAEnC,GAAI,KAAK,OAAO,EAAI,cAChB,OAAO,KAAK,sBAAsB,GAEtC,QAAmB,IAAf,EACA,OAAO,KAAK,qBAEhB,GAAIzf,KAAK,OAAO,EAAI,YAChB,OAAO,KAAK,yBAAyB,GAEzC,GAAI,aAAsB,GACtB,OAAO,IAAI,GAAkB,EAAW,cAAe,EAAW,UAAW,IAAI,OAErF,GAAI,aAAsB,GAA0B,CAChD,IAAM,EAAO,EAAW,UACxB,GAAI,aAAgB,GAChB,OAAO,IAAI,GACP,EAAW,cACX,EAAK,UACL,IAAI,MAAsB,EAAW,cAIjD,OAAO,KAAK,MAAM,mDA10B1B,CAAI,IAAJ,0BAAI,MAAJ,WA80BQ,IAAM,EAAa,KAAK,kBACxB,OAAO,IAAI,GAAuB,EAAW,cAAe,KA/0BpE,CAAI,IAAJ,gBAAI,MAAJ,WAm1BQ,IAAM,EAAO,KAAK,YAClB,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAa,KAAK,0BAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,WACxB,IAAI,GAAa,EAAe,MAAM,EAAK,cAAe,GAAM,EAAM,KAx1BrF,CAAI,IAAJ,mBAAI,MAAJ,WA41BQ,OAAO,KAAK,SAAS,KAAK,cAAc,KAAK,SA51BrD,CAAI,IAAJ,oBAAI,MAAJ,WA+1B6B,WACf,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,UAC/B,IAAM,EAAY,IAAI,EAA4B,KAAK,iBACnD,GAAiB,EAYrB,OAXA,KAAK,MACD,kBAAM,KACN,WACI,IAAM,EAAW,EAAK,wBACL,IAAb,EAIJ,EAAU,KAAK,GAHX,GAAiB,KAMtB,IAAI,GACP,EAAe,MAAM,EAAO,EAAU,EAAU,OAAS,GAAG,eAC5D,KAj3BZ,CAAI,IAAJ,gBAAI,MAAJ,WAs3BQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAQ,KAAK,6BACnB,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAO,KAAK,YACZ,EAAa,KAAK,qBAClB,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADM,KAAD,sBAAsB,EAAI,WACxB,IAAI,GAAa,EAAe,MAAM,EAAO,GAAM,EAAO,EAAM,KA73B/E,CAAI,IAAJ,mBAAI,MAAJ,WAi4BQ,OAAO,KAAK,SAAS,KAAK,cAAc,KAAK,SAj4BrD,CAAI,IAAJ,oBAAI,MAAJ,WAo4B6B,WACf,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,UAC/B,IAAM,EAAY,IAAI,EAA4B,KAAK,iBAEnD,GAAiB,EAarB,OAZA,KAAK,MACD,kBAAM,KACN,WACI,IAAM,EAAW,EAAK,wBACL,IAAb,EAIJ,EAAU,KAAK,GAHX,GAAiB,KAOtB,IAAI,GACP,EAAe,MAAM,EAAO,EAAU,EAAU,OAAS,GAAG,eAC5D,KAx5BZ,CAAI,IAAJ,iBAAI,MAAJ,WA45B0B,WACZ,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAO,KAAK,YACZ,EAAS,IAAI,MACf,KAAK,mBAAmB,EAAI,mBACvB,KAAK,OAAO,EAAI,mBACjB,EAAO,KAAP,QAAM,EAAS,KAAK,gCAExB,KAAK,sBAAsB,EAAI,mBAEnC,IAAM,EAAO,KAAK,mBAAmB,EAAI,OAAS,KAAK,iBAAc,EACrE,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAe,IAAI,MACrB,OAA8C,EAC9C,GAAY,EAChB,KAAK,MACD,kBAAO,EAAK,OAAO,EAAI,OAAS,KAChC,WACI,IAAM,EAAc,EAAK,wBACL,IAAhB,OAIe,IAAf,EAIJ,GAAY,EAHR,EAAa,EAAK,4BAA4B,EAAI,OAJlD,EAAa,KAAK,MAU9B,IAAM,EAAM,KAAK,WAAW,GAC5B,OAAO,IAAI,GAAc,EAAe,MAAM,EAAO,GAAM,EAAM,EAAQ,EAAM,EAAc,KA57BrG,CAAI,IAAJ,mBAAI,MAAJ,WAg8BQ,OAAI,KAAK,OAAO+P,EAAI,WACT,KAAK,iBAEZ,KAAK,OAAO,EAAI,WACT,KAAK,iBAEZ,KAAK,OAAO,EAAI,UACT,KAAK,oBAEZ,KAAK,OAAO,EAAI,UACT,KAAK,oBAEZ,KAAK,OAAO,EAAI,WACT,KAAK,sBADV,IA58Bd,CAAI,IAAJ,qBAAI,MAAJ,WAk9B8B,WAChB,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC7B,OAA8C,EAC9C,OAAiD,EACjD,OAAgD,EAC9C,EAAe,IAAI,MACnB,EAAkB,IAAI,MACxB,EAAM,EACN,GAAY,EA4DhB,OA3DA,KAAK,MACD,kBAAO,EAAK,OAAO,EAAI,OAAS,KAChC,WACI,IAAM,EAAc,EAAK,mBACzB,QAAoB,IAAhB,EAIJ,GAAI,EAAK,OAAO,EAAI,gBAChB,EAAgB,KAAK,EAAK,4BAM9B,QAHmB,IAAf,GAA4B,EAAK,OAAO,EAAI,QAC5C,EAAK,MAAM,uDAEI,IAAf,GAA4B,EAAK,OAAO,EAAI,YAEzB,KADnB,EAAa,EAAK,4BAA4B,EAAI,UAE9C,EAAM,EAAW,oBAOzB,QAHsB,IAAlB,GAA+B,EAAK,OAAO,EAAI,WAC/C,EAAK,MAAM,0DAEO,IAAlB,GAA+B,EAAK,OAAO,EAAI,eAEzB,KADtB,EAAgB,EAAK,4BAA4B,EAAI,aAEjD,EAAM,EAAc,oBAO5B,QAHqB,IAAjB,GAA8B,EAAK,OAAO,EAAI,UAC9C,EAAK,MAAM,yDAEM,IAAjB,GAA8B,EAAK,OAAO,EAAI,cAEzB,KADrB,EAAe,EAAK,4BAA4B,EAAI,YAEhD,EAAM,EAAa,oBAI3B,GAAI,EAAK,OAAO,EAAI,WAApB,CACI,IAAM,EAAY,EAAK,sBACL,IAAd,GACA,EAAa,KAAK,QAI1B,GAAI,EAAK,OAAO,EAAI,gBAApB,CACI,IAAM,EAAiB,EAAK,2BACL,IAAnB,GACA,EAAgB,KAAK,QAI7B,GAAY,OAnDR,EAAa,KAAK,MAsDvB,IAAI,GACP,EAAe,MAAM,EAAO,GAC5B,EACA,EACA,EACA,EACA,KA5hCZ,CAAI,IAAJ,aAAI,MAAJ,SAgiCuB,GACf,KAAK,sBAAsB,EAAI,KACf,KAAK,YACT,YAAc,EAAK,WAC3B,KAAK,MAAM,mBAEf,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,EAAI,WACxB,IAxiCf,CAAI,IAAJ,iBAAI,MAAJ,WA4iCQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAa,KAAK,qBAClB,EAAO,KAAK,YACZ,EAAS,KAAK,cACd,EAAW,KAAK,gBACtB,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAO,KAAK,qBACZ,EAAM,KAAK,WAAW,GAC5B,OAAO,IAAI,GAAc,EAAe,MAAM,EAAO,GAAM,EAAM,EAAY,EAAQ,EAAU,KArjCvG,CAAI,IAAJ,sBAAI,MAAJ,WAyjCQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,gBAC/B,IAAM,EAAO,KAAK,YAClB,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAe,KAAK,uBACpB,EAAa,KAAK,4BAA4B,EAAI,OAClD,EAAM,KAAK,WAAW,GAC5B,OAAO,IAAI,GAAmB,EAAe,MAAM,EAAO,GAAM,EAAM,EAAc,KAhkC5F,CAAI,IAAJ,yBAAI,MAAJ,SAmkCsC,EAAwB,GACtD,IAAM,EAAO,IAAI,EAAiB,KAOlC,OANA,KAAK,MACD,kBAAM,OACN,WACI,EAAK,KAAK,QAGX,IA3kCf,CAAI,IAAJ,YAAI,MAAJ,SA8kCyB,EAAwB,GAAc,WACjD,EAAO,IAAI,EAAiB,KAQlC,OAPA,KAAK,MACD,kBAAM,EAAK,OAAO,MAClB,WACI,EAAK,sBAAsB,GAC3B,EAAK,KAAK,QAGX,IAvlCf,CAAI,IAAJ,sBAAI,MAAJ,WA2lCQ,OAAO,KAAK,UAAoB,KAAK,UAAU,KAAK,MAAO,EAAI,SA3lCvE,CAAI,IAAJ,qBAAI,MAAJ,WA+lCQ,OAAO,KAAK,UAAyB,KAAK,eAAe,KAAK,MAAO,EAAI,aA/lCjF,CAAI,IAAJ,8BAAI,MAAJ,WAmmCQ,OAAO,KAAK,UAAkC,KAAK,wBAAwB,KAAK,MAAO,EAAI,aAnmCnG,CAAI,IAAJ,6BAAI,MAAJ,WAumCQ,OAAO,KAAK,UAA2B,KAAK,iBAAiB,KAAK,MAAO,EAAI,SAvmCrF,CAAI,IAAJ,sBAAI,MAAJ,WA2mCQ,OAAO,KAAK,UAA0B,KAAK,gBAAgB,KAAK,MAAO,EAAI,SA3mCnF,CAAI,IAAJ,sBAAI,MAAJ,WA+mCQ,OAAO,KAAK,UAA0B,KAAK,gBAAgB,KAAK,MAAO,EAAI,SA/mCnF,CAAI,IAAJ,uCAAI,MAAJ,WAmnCQ,OAAO,KAAK,UAAgC,KAAK,iCAAiC,KAAK,MAAO,EAAI,SAnnC1G,CAAI,IAAJ,wCAAI,MAAJ,WAsnCQ,OAAO,KAAK,UAAiC,KAAK,kCAAkC,KAAK,MAAO,EAAI,SAtnC5G,CAAI,IAAJ,qBAAI,MAAJ,WA0nCQ,OAAO,KAAK,UAAyB,KAAK,eAAe,KAAK,MAAO,EAAI,aA1nCjF,CAAI,IAAJ,qBAAI,MAAJ,WA8nCQ,IAAK,KAAK,OAAO,EAAI,WACjB,OAAO,IAAI,MAEf,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAQ,KAAK,sBAEnB,OADA,KAAK,sBAAsB,EAAI,YACxB,EAAM,KAAI,SAAC,GAAD,OAAU,IAAI,GAAc,EAAK,cAAe,QApoCzE,CAAI,IAAJ,uBAAI,MAAJ,WAuoCgC,WAClB,EAAe,IAAI,MACrB,GAAmB,EAYvB,OAXA,KAAK,MACD,kBAAM,KACN,WACI,IAAM,EAAc,EAAK,wBACL,IAAhB,EAIJ,EAAa,KAAK,GAHd,GAAmB,KAMxB,IArpCf,CAAI,IAAJ,YAAI,MAAJ,WAypCQ,IAAM,EAAO,KAAK,MAAM,KAAK,GAC7B,GAAI,aAAgB,EAEhB,OADA,KAAK,MAAM,OACJ,IAAI,GAAc,EAAK,cAAe,EAAK,iBAEtD,KAAK,sBAAsB,EAAI,KAC/B,IAAM,EAAU,IAAI,MACd,EAAW,IAAI,MAQrB,OAPI,KAAK,mBAAmB,EAAI,mBAC5B,EAAQ,KAAR,QAAO,EAAS,KAAK,yCACjB,KAAK,mBAAmB,EAAI,OAC5B,EAAS,KAAT,QAAQ,EAAS,KAAK,0CAE1B,KAAK,sBAAsB,EAAI,mBAE5B,IAAI,GAAY,EAAK,cAAe,EAAS,KAxqC5D,CAAI,IAAJ,iBAAI,MAAJ,WA4qCQ,IAAM,EAAQ,KAAK,sBACnB,KAAK,sBAAsB,EAAI,OAC/B,IAAM,EAAO,KAAK,YAClB,OAAO,IAAI,GAAc,EAAe,MAAM,EAAM,GAAG,cAAe,EAAK,eAAgB,EAAO,KA/qC1G,CAAI,IAAJ,0BAAI,MAAJ,WAmrCQ,IAAM,EAAU,KAAK,OAAO,EAAI,UAC1B,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC7B,GACA,KAAK,sBAAsB,EAAI,UAEnC,IAAM,EAAQ,KAAK,iBACnB,OAAO,IAAI,GAAuB,EAAe,MAAM,EAAO,EAAM,eAAgB,EAAS,KAzrCrG,CAAI,IAAJ,yBAAI,MAAJ,WA6rCQ,GAAI,KAAK,mBAAmB,EAAI,iBAAkB,CAC9C,IAAM,EAAS,KAAK,qBAEpB,OADA,KAAK,sBAAsB,EAAI,kBACxB,EAEX,OAAO,IAAI,QAlsCnB,CAAI,IAAJ,0BAAI,MAAJ,WAssCQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC7B,OAAwC,EAO5C,GANI,KAAK,mBAAmB,EAAI,MAC5B,EAAY,GAAiB,IAE7B,KAAK,mBAAmB,EAAI,OAC5B,EAAY,GAAiB,UAEf,IAAd,EACA,OAAO,KAAK,MAAM,+CAEtB,IAAM,EAAO,KAAK,YACZ,EAAS,KAAK,yBACpB,OAAO,IAAI,GAAuB,EAAO,EAAW,EAAM,KAntClE,CAAI,IAAJ,8BAAI,MAAJ,SAutCQ,EACA,EACA,GAEA,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,GAC3B,IAAM,EAAa,KAAK,0BACxB,QAAmB,IAAf,EAA0B,CAC1B,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAE/B,OADA,KAAK,sBAAsB,GACpB,IAAI,EAAe,EAAe,MAAM,EAAO,GAAM,GAEhE,OAAO,KAAK,MAAM,+CAnuC1B,CAAI,IAAJ,oBAAI,MAAJ,WAsuC6B,WACf,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAU,IAAI,MACpB,KAAK,MACD,kBACI,EAAK,OAAO,EAAI,KAChB,EAAK,OAAO,EAAI,MAChB,EAAK,OAAO,EAAI,oBAChB,EAAK,OAAO,EAAI,kBAChB,EAAK,OAAO,EAAI,cACpB,WACI,GAAI,EAAK,OAAO,EAAI,KAAO,EAAK,OAAO,EAAI,KACvC,EAAQ,KAAK,EAAK,gCAGtB,GAAI,EAAK,OAAO,EAAI,mBAApB,CACI,IAAM,EAAS,EAAK,4BAChB,GACA,EAAI,kBACJ,EAAI,oBAER,EAAQ,KAAK,QAGjB,GAAI,EAAK,OAAO,EAAI,iBAApB,CACI,IAAM,EAAS,EAAK,4BAChB,GACA,EAAI,gBACJ,EAAI,kBAER,EAAQ,KAAK,QAGjB,GAAI,EAAK,OAAO,EAAI,WAApB,CACI,IAAM,EAAS,EAAK,4BAChB,GACA,EAAI,UACJ,EAAI,YAER,EAAQ,KAAK,YAKzB,IAAM,EAAc,EAAc,UAA8B,GAChE,YAAoB,IAAhB,EACO,KAAK,MAAM,oCAEf,IAAI,GAAiB,EAAO,KAtxC3C,CAAI,IAAJ,0BAAI,MAAJ,WAyxCmC,WACrB,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,IAAI,KAAK,OAAO,EAAI,KAApB,CAGA,IAAM,EAAQ,IAAI,EAAgC,KAAK,qBAQvD,OAPA,KAAK,MACD,kBAAM,EAAK,OAAO,EAAI,SACtB,WACI,EAAK,sBAAsB,EAAI,MAC/B,EAAM,KAAK,EAAK,wBAGjB,IAAI,GAAuB,EAAO,MAtyCjD,CAAI,IAAJ,gBAAI,MAAJ,WA0yCQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAa,KAAK,0BACxB,OAAO,IAAI,QACQ,IAAf,EAA2B,EAAQ,EAAe,MAAM,EAAO,EAAW,eAC1E,KA9yCZ,CAAI,IAAJ,iBAAI,MAAJ,WAmzCQ,IAAM,EAAQ,KAAK,MAAM,KAAK,GAAG,cACjC,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAO,KAAK,YAClB,KAAK,sBAAsB,EAAI,WAC/B,IAAM,EAAW,KAAK,gBAChB,EAAM,KAAK,WAAW,GAC5B,OAAO,IAAI,GAAc,EAAe,MAAM,EAAO,GAAM,EAAM,KAzzCzE,CAAI,IAAJ,QAAI,MAAJ,WA4zCS,WACK,EAAQ,KAAK,MAAM,KAAK,GAAG,cAC3B,EAAa,IAAI,MACjB,EAAa,IAAI,MACnB,GAAY,EAChB,KAAK,MACD,kBAAO,KACP,WACI,GAAI,EAAK,cAAT,CACI,IAAM,EAAY,EAAK,sBACL,IAAd,GACA,EAAW,KAAK,QAIxB,GAAI,EAAK,cAAT,CACI,IAAM,EAAuB,EAAK,sBACL,IAAzB,GACA,EAAW,KAAK,QAIxB,EAAK,MAAM,2BACX,GAAY,KAGpB,IAAM,EAAM,KAAK,MAAM,KAAK,GAAG,cAC/B,OAAO,IAAI,GAAY,EAAe,MAAM,EAAO,GAAM,EAAY,OAv1C7E,MC1GA,SAAK,GACD,iBADJ,CAAK,QAAoB,KAGzB,IAoBK,GApBQ,GAAb,aAAE,oBACqB,2BAA8C,GAAqB,KAGpE,GAClB,WAA4B,GAAsB,oBAAtB,cAGnB,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAY,EAA0C,GAAY,kCAC9D,SAAA/P,KAAM,IAD4C,OAAY,EADpE,OAAF,GAAwC,IAMlB,GAAtB,YAAE,qBAAF,iBACM,SAAF,EAAY,EAAwC,GAAkB,kCAClE,SAAAA,KAAM,IAD0C,aAAkB,EADxE,OAAF,GAA+C,KAM/C,SAAK,GACD0f,IAAA,aADJ,CAAK,QAAmB,KAGjB,IC3BF,GD2BQ,GAAb,iG,2BACc,qBAA4C,GAAoB,IAD9E,YAAsC,IAIzB,GAAb,YAAE,qBAAF,iBACI,WAAY,EAAwC,GAAgC,kCAChF,cAAM,IAD0C,kBAAgC,EADtF,OAAF,GAA0C,KC/B1C,SAAK,GACD,iBADJ,CAAK,QAAa,KAGlB,IAmBK,GAnBiB,GAAtB,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACmB,eAAgC,GAAc,IADrE,EAAE,OAAF,GAAyC,IAI5B,GACT,WAA4B,EAAoC,GAAgB,oBAApD,kBAAoC,aAGvD,GAAb,YAAE,qBAAF,iBACI,WACI,EACA,EACgB,EACA,GAAsB,kCAEtC,SAAA1f,KAAM,EAAO,IAHG,aACA,eAAsB,EAL5C,OAAF,GAAqC,KAWrC,SAAK,GACD2f,IAAA,aADJ,CAAK,QAAoB,KAGlB,IAIF,GAJQ,GAAb,iG,2BACuB,mBAAqB,GAAqB,IADjE,YAAuC,KAIvC,SAAK,GACD,iBADJ,CAAK,QAAkB,KAGvB,IAKK,GALQ,GAAb,iG,2BACuB,oBAAsB,GAAmB,IADhE,YAAqC,KAKrC,SAAK,GACC,EAAF,eADJ,CAAK,QAAkB,KAGvB,IAaK,GAbQ,GAAb,YAAE,qBAAF,iBAGI,WACI,EACA,EACgB,EACA,GAAqB,kCAErC,SAAA3f,KAAM,EAAO,IAHG,cACA,iBAND,sBAAsB,GAAmB,IAMnB,EAP3C,OAAF,GAAqC,KAarC,SAAK,GACD4f,IAAA,aADJ,CAAK,QAAyB,KAG9B,IC7CK,GD6CQ,GAAb,YAAE,qBAAF,iBAGI,WAAYC,EAAwB,GAA0B,kCAC1D,cAAMA,EAAO,mCAAoCC,GAAa,IAH/C,2BAAwD,GAA0B,IAEvC,EAHhE,OAAF,GAA4C,IAQ/B,GAAb,kDACI,WAAYD,EAAwB,EAAoC,GAA6B,kCACjG,cAAMA,EAAOE,IADuD,aAA6B,EADzG,UAAmC,IEjEtB,GACT,WAA4B,EAAkD,GAA8B,oBAAhF,uBAAkD,oBAGrE,GAAb,WACI,WAA4B,GAA8C,IAAjB,EAAiB,uDAAH,EACnE,GADsE,oBAA9C,WAA6B,WACjD,EAAM,EACN,MAAM,IAAI,MAAM,iCAEhB,QAAQ,IAAR,GAAqB,EAAM,EAC3B,MAAM,IAAI,MAAJ,cAAiB,EAAjB,qCAAiD,IANnE,wDAWQ,OAAO,KAAK,MAAQ,QAX5B,KAea,GAAb,WACI,WACoB,EACAC,GAA2C,oBAD3C,eACA,KAAAA,WAEhBC,EAAcC,SAASlgB,KAAK,QAAS,6CACrC,EAAc,SAAS,KAAK,SAAU,8CAN9C,+DAmCuB,GACf,OACI,EAAc,2BACV,KAAK,QACL,EAAM,SACN,SAAC,EAAG,GAAJ,OAAU,GAAK,KACf,SAAC,EAAG,GAAJ,OAAU,GAAK,MAEnB,EAAc,2BACV,KAAK,SACL,EAAM,UACN,SAAC,EAAG,GAAJ,OAAU,GAAK,KACf,SAAC,EAAG,GAAJ,OAAU,GAAK,OA/C/B,oCAoDkB,GACV,OAAO,EAAM,mBAAmB,SArDxC,gCAS4B,EAAyC,GAE7D,GADiB,YAAO,MAAP,EAAwB,IAAI,IAAI,EAAK,KAAI,SAAC,GAAD,OAAW,EAAM,gBAAgB,iBAC3E,SAAW,EAAK,OAC5B,MAAM,IAAI,MAAM,KAZ5B,iDAiBQ,EACA,EACA,EACA,GAEA,OACI,EAAmB,QACf,SAAC,GAAD,YAMU,IALN,EAAmB,MACf,SAAC,GAAD,OACI,EAAkB,kBAAoB,EAAkB,iBACxD,EAAW,EAAkB,YAAY,IAAK,EAAkB,YAAY,MAC5E,EAAW,EAAkB,YAAY,IAAK,EAAkB,YAAY,WAE1F,SAAW,EAAmB,WA/B5C,KCYa,GACT,WACoB,EACA,EACA,GAA0B,oBAF1B,aACA,yBACA,0BAIX,GAAb,WAAE,SAAF,IAAI,oBAEgB,iBAAc,IAAI,GAClB,cAAW,IAAI,GAAkB,KAAK,YAAa,kBACnD,8BAA2B,IAAI,GAC3CA,KAAK,YACL,oCAEY,6BAA0B,IAAI,GAAc,GAAI,IAChD,sBAAmB,IAAI,GACnC,KAAK,YACL,0BACA,KAAK,yBACL,GAEY,gBAAa,IAAI,GAAc,KAAK,YAAa,MAAO,IACxD,mBAAgB,IAAI,GAAc,KAAK,YAAa,SAAU,IAG9D,yBAAsB,IAAI,IAC1B,4BAAyB,IAAI,IAC7B,uBAAoB,IAAI,IACxB,uBAAoB,IAAI,IAGxB,wBAAqB,IAAI,IACzB,kBAAe,IAAI,IACnB,wBAAqB,IAAI,IACzB,sBAAmB,IAAI,IACvB,kBAAe,IAAI,IACnB,yBAAsB,IAAI,IAC1B,qBAAkB,IAAI,IAEtB,uBAAoB,IAAI,IACxB,qBAAkB,IAAI,IACtB,4BAAyB,IAAI,IAC7B,uBAAoB,IAAI,IACxB,uBAAoB,IAAI,IAGxB,WAAQ,IAAI,MACZ,cAAW,IAAI,MACf,gBAAa,IAAI,MACjB,gBAAa,IAAI,MACjB,cAAW,IAAI,MAGf,eAAY,IAAI,MAChB,gBAAa,IAAI,MACjB,sBAAmB,IAAI,MACvB,eAAY,IAAI,MAChB,yBAAsB,IAAI,MAnD5C,uBAAE,IAAJ,cAAI,MAAJ,SAqDgB,GACR,OAAO,KAAK,SAAS,QAAO,SAAC,GAAD,OAAa,EAAQ,QAAU,OAtDnE,CAAI,IAAJ,sBAAI,MAAJ,WAyDuB,WACf,OAAO,KAAK,WAAW,QAAO,SAAC,GAAD,OAAe,EAAU,QAAU,EAAK,iBA1D9E,CAAI,IAAJ,gBAAI,MAAJ,SA6DkB,GACV,OAAO,KAAK,WAAW,QAAO,SAAC,GAAD,OAAe,EAAU,QAAU,OA9DzE,CAAI,IAAJ,qBAAI,MAAJ,SAiEuB,GACf,OAAO,KAAK,iBAAiB,QAAO,SAAC,GAAD,OAAoB,EAAe,QAAU,OAlEzF,CAAI,IAAJ,eAAI,MAAJ,SAqEiB,GACT,OAAO,KAAK,UAAU,QAAO,SAAC,GAAD,OAAc,EAAS,QAAU,OAtEtE,CAAI,IAAJ,yBAAI,MAAJ,SAyE2B,GACnB,OAAO,KAAK,oBAAoB,QAAO,SAAC,GAAD,OAAc,EAAS,QAAU,OA1EhF,CAAI,IAAJ,mBAAI,MAAJ,SA6EqB,GACb,KAAK,SAAS,KAAK,GACnB,KAAK,MAAM,KAAK,KA/ExB,CAAI,IAAJ,oBAAI,MAAJ,SAkFsB,GACR,KAAD,WAAW,KAAK,GACf,KAAD,MAAM,KAAK,KApFxB,CAAI,IAAJ,oBAAI,MAAJ,SAuFsB,GACd,KAAK,WAAW,KAAK,GACrB,KAAK,MAAM,KAAK,KAzFxB,CAAI,IAAJ,kBAAI,MAAJ,SA4FoB,GACZ,KAAK,SAAS,KAAK,GACnB,KAAK,MAAM,KAAK,KA9FxB,CAAI,IAAJ,oBAAI,MAAJ,SAiGsB,GACd,KAAK,WAAW,KAAK,KAlG7B,CAAI,IAAJ,yBAAI,MAAJ,SAqG2B,GACnB,KAAK,iBAAiB,KAAK,KAtGnC,CAAI,IAAJ,mBAAI,MAAJ,SAyGqB,GACb,KAAK,UAAU,KAAK,KA1G5B,CAAI,IAAJ,6BAAI,MAAJ,SA6G+B,GACjB,KAAD,oBAAoB,KAAK,KA9GtC,CAAI,IAAJ,aAAI,MAAJ,SAiHkB,GACV,QAAa,IAAT,EACA,MAAM,IAAI,MAAM,uBAEpB,OAAO,IArHf,CAAI,IAAJ,kBAAI,MAAJ,SAwHuB,GACf,GAAI,EAAK,OAAS,EACd,MAAM,MAAM,+BAEhB,GAAI,EAAK,OAAS,EACd,MAAM,MAAM,yCAEV,OAAC,EAAK,KA/HpB,CAAI,IAAJ,cAAI,MAAJ,SAyIgB,GACF,OAAC,KAAK,SAAS,QAAO,SAAC,GAAD,OAAa,EAAQ,aAAe,OA1IxE,CAAI,IAAJ,gBAAI,MAAJ,SA8IQ,EACA,EACA,EACA,GAAsB,WAWtB,OAAO,KAAK,gBAAgB,KAAK,WATV,SAAC,EAA4B,GAChD,OACI,EAAU,aAAe,GACzB,EAAU,WAAW,SAAW,EAAO,QACvC,EAAU,WAAW,QAAO,SAAC,EAAGrC,GAAJ,OAAU,EAAK,aAAa,EAAG,EAAO,OAAK,SAAW,EAAO,cACzE,IAAf,GAA4B,EAAU,aAAe,IACtD,EAAU,QAAU,GAGgC,KAAK,MAAO,KA5JhF,CAAI,IAAJ,eAAI,MAAJ,SA+JyB,EAAoB,GACrC,OAAI,aAAkB,IAAmB,aAAkB,GAChD,EAAO,YAAY,mBAAmB,EAAO,aAEjD,IAAW,IAnK1B,CAAI,IAAJ,kBAAI,MAAJ,SAuKQ,EACA,EACA,GAEA,IAAK,EAAQ,mBAAqB,EAAQ,iBAAiB,GACvD,OAAO,IAAI,MAGf,IAAM,EAAU,EAAK,QAAO,SAAC,GAAD,OAAa,EAAU,EAAS,EAAQ,UAEpE,OAAI,EAAQ,OAAS,GAAK,EAAQ,iBAAiB,KAI9C,EAAQ,mBAAqB,EAAQ,MAAM,iBAAiB,GAHtD,GAQN,EAAQ,oBACR,EAAQ,iBAAiB,IAAmB,EAAQ,iBAAiB,IAElE,EAAQ,kBACD,KAAK,gBACR,EACA,EACA,IAAI,GAAc,KAAK,YAAa,EAAQ,kBAAmB,EAAQ,oBAGxE,EAGJ,KAAK,gBACR,EACA,EACA,IAAI,GAAc,EAAQ,MAAM,MAAO,EAAQ,kBAAmB,EAAQ,sBA1MtF,CAAI,IAAJ,kBAAI,MAAJ,SA+MQ,EACA,EACA,GAIA,OAAO,KAAK,gBAAgB,EAFL,SAAC,EAAY,GAAb,OACnB,EAAQ,aAAe,GAAc,EAAQ,QAAU,GACV,KAAK,MAAO,KArNrE,CAAI,IAAJ,eAAI,MAAJ,SAwNiB,EAAoB,GAC7B,OAAO,KAAK,gBAAgB,KAAK,UAAW,EAAY,KAzNhE,CAAI,IAAJ,cAAI,MAAJ,SA6NQ,EACA,EACA,EACA,GAAsB,WAWtB,OAAO,KAAK,gBAAgB,KAAK,SATV,SAAC,EAAuB,GAC3C,OACI,EAAO,aAAe,GACtB,EAAO,QAAU,IAChB,GACI,EAAO,WAAW,SAAW,EAAO,QACjC,EAAO,WAAW,QAAO,SAAC,EAAG,GAAJ,OAAU,EAAK,aAAa,EAAG,EAAO,OAAK,SAAW,EAAO,SAG5C,KAAK,MAAO,KA3O9E,CAAI,IAAJ,yBAAI,MAAJ,SA+OQ,EACA,EACA,EACA,GAAsB,WAYtB,OAAO,KAAK,gBAAgB,KAAK,oBAVV,SAAC,EAAkC,GACtD,OACI,EAAO,aAAe,IACrB,GACI,EAAO,WAAW,SAAW,EAAO,QACjC,EAAO,WAAW,QAAO,SAAC,EAAG,GAAJ,OAAU,EAAK,aAAa,EAAG,EAAO,OAAK,SAChE,EAAO,SACnB,EAAO,QAAU,GAG4C,KAAK,MAAO,KA9PzF,CAAI,IAAJ,gBAAI,MAAJ,SAiQkB,EAAoB,GAC9B,OAAO,KAAK,gBAAgB,KAAK,WAAY,EAAY,KAlQjE,CAAI,IAAJ,gBAAI,MAAJ,SAqQkB,EAAoB,GAC9B,OAAO,KAAK,gBAAgB,KAAK,WAAY,EAAY,KAtQjE,CAAI,IAAJ,WAAI,MAAJ,SAyQa,EAAoB,GACzB,OAAO,KAAK,gBAAgB,KAAK,MAAO,EAAY,KA1Q5D,CAAI,IAAJ,qBAAI,MAAJ,SA6QuB,EAAoB,GAInC,OAAO,KAAK,gBAAgB,KAAK,iBAHV,SAAC,EAA8B,GAClD,OAAO,EAAO,gBAAgB,aAAe,GAAc,EAAO,QAAU,GAEd,KAAK,MAAO,MAjRtF,EAAI,IAAJ,4BAAI,MAAJ,SAkIqC,EAA4B,GACzD,OAA+B,IAA3B,EAAQ,QAAQ,QAA4C,IAA5B,EAAQ,SAAS,QAG9C,EAAQ,mBAAmB,EAAU,iBAtIpD,KCtCa,GAAb,YAAE,qBAAF,iBACM,SAAF,EACI,EACA,EACgB,EACA,GAAgB,kCAEhC,cAAMkiB,EAAOE,IAHG,UACA,SAAgB,EALtC,OAAF,GAAoC,IAWvB,GAAb,kDACI,WACI,EACA,EACgB,EACA,GAA6B,kCAE7C,cAAM,EAAO,IAHG,OACA,eAA6B,EALrD,UAA8C,ICVjC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,SAAA/f,OADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,iBAAI,MAAJ,SAKmBof,GACX,IAAMe,EAAQngB,KAAKogB,YAAYC,SAASjB,EAAKkB,gBAAiB,IAAI,GAActgB,KAAK6f,OAAO,GAAM,IAClG,GAAIM,EAAMrf,OAAS,EACf,MAAM,IAAIsE,MAAJ,8CAAiDga,EAAKkB,gBAAtD,qBAEV,GAAIH,EAAMrf,OAAS,EACf,MAAM,IAAIsE,MAAJ,8CAAiDga,EAAKkB,gBAAtD,kCAEVtgB,KAAKogB,YAAYG,aAAanR,IAAIgQ,EAAMe,EAAM,MAbtD,CAAI,IAAJ,eAAI,MAAJ,SAgBiB,GAAiB,WACpB,EAAS,IAAI,GACf,KAAK,MACL,IAAI,GACA,EACK,aACA,KAAI,SAAC,GAAD,OACD,GAAmB,iCAAiC,EAAK,YAAa,EAAS,EAAK,UAE5F,EACK,cACA,KAAI,SAAC,GAAD,OACD,GAAmB,iCAAiC,EAAK,YAAa,EAAU,EAAK,YAIrG,KAAK,YAAY,aAAa,IAAI,EAAM,OAhChD,GAAwC,IC2C3B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACpE,EAAJ,cADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,UAAI,MAAJ,SAKoB,GACN,MAAS,KAAK,YAAY,mBAAmB,IAAI,GACjD,OAAC,KAAK,YAAY,WAAW,KAP3C,CAAI,IAAJ,aAAI,MAAJ,SAUuB,GACT,OAAC,KAAK,YAAY,gBAAgB,KAAK,YAAY,YAAY,MAX7E,CAAI,IAAJ,kBAAI,MAAJ,SAc4B,GAAgC,WACpD,EAAW,SAAQ,SAAC,GAAD,OAAU,EAAK,OAAO,QAfjD,CAAI,IAAJ,0BAAI,MAAJ,SAkB4B,GACpB,EAAK,gBAAgB,OAAO,QAnBpC,CAAI,IAAJ,uBAAI,MAAJ,SAsByB,GACjBf,EAAK,gBAAgB,OAAO,MAC5Bpf,KAAKogB,YAAYI,mBAAmBpR,IAAIgQ,EAAMpf,KAAK,QAAQ,EAAK,oBAxBxE,CAAI,IAAJ,wBAAI,MAAJ,SA2B0B,GAClB,EAAK,UAAU,OAAO,MACtB,EAAK,WAAW,OAAO,MACvB,IAAM,EAAW,KAAK,QAAQ,EAAK,WAC7B,EAAY,KAAK,QAAQ,EAAK,YAGpC,GAFA,KAAK,gBAAgB,EAAU,KAEzB,aAAoB,IACtB,MAAM,IAAI,MAAJ,qCAEJ,MAAiB,EAAS,WAC1B,OAAE,EAAK,SACT,KAAK,GAAgB,MACrB,KAAK,GAAgB,SACjB,GACuB,SAAnB,GACmB,YAAnB,GACmB,YAAnB,GACmB,cAAnB,GACmB,SAAnB,EAEA,MAAM,IAAI,MAAJ,qCAEV,MACJ,KAAK,GAAgB,KACrB,KAAK,GAAgB,UACrB,KAAK,GAAgB,KACrB,KAAK,GAAgB,UACjB,GACuB,SAAnB,GACmB,YAAnB,GACmB,cAAnB,GACmB,SAAnB,EAEA,MAAM,IAAI,MAAJ,qCAIlBA,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,cAjEtE,CAAI,IAAJ,gCAAI,MAAJ,SAoEkC,GAAkC,WAC5DA,KAAK,gBAAgB,EAAK,iBAC1B,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OAAW,EAAM,OAAO,MACrD,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,cAvEtE,CAAI,IAAJ,iBAAI,MAAJ,SA0EmB,GACXA,KAAK,gBAAgB,EAAK,iBAC1B,EAAK,gBAAgB,OAAO,MAC5B,EAAK,UAAU,OAAO,MACtB,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,cA9EtE,CAAI,IAAJ,qBAAI,MAAJ,SAiFuB,GACf,EAAK,UAAU,OAAO,MACtB,IAAMyH,EAAO,KAAK,QAAQ,EAAK,WAC/B,KAAM,aAAgB,IAClB,MAAM,IAAI,MAAJ,kDAEV,IAAM,EAAiB,EAAK,WACtB,OAAE,EAAK,SACD,KAAH,GAAe,MACpB,KAAK,GAAe,KAChB,GAAuB,SAAnB,GAAgD,YAAnB,EAC7B,MAAM,IAAI,MAAJ,0CAIlB,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,QAAQ,EAAK,cAhGxE,CAAI,IAAJ,kBAAI,MAAJ,SAmGoB,GAA6C,2BAAxB,EAAwB,iCAAxB,EAAwB,kBACzD,IAAM,EAAM,YAAO,MAAP,EAA4B,IAAI,IAAgB,KAC5D,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAJ,oCAEV,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAJ,uCAEV,GAAI,EAAO,KAAO,EACd,MAAM,IAAI,MAAJ,uCAA0C,EAAK,WAA/C,oBAAqE,EAAO,GAAG,eA5GjG,CAAI,IAAJ,gBAAI,MAAJ,SAgHkB,GAAqC,WAC/C,OACW,EAAK,WAAW,KAAI,SAAC,GAAD,OAAW,EAAK,QAAQ,EAAM,iBAlHrE,CAAI,IAAJ,aAAI,MAAJ,SAuHe,GAAqC,WAC5C,EAAK,UAAU,OAAO,MAChB,EAAD,WAAW,SAAQ,SAAC,GAAD,OAA2C,EAAK,OAAO,MAC/E,IAAM,EAAO,KAAK,QAAQ,EAAK,WAC/B,KAAK,gBAAL,YAAqB,GAArB,SAA8B,KAAK,cAAc,MACjD,KAAK,YAAY,mBAAmB,IAAI,EAAM,KA5HtD,CAAI,IAAJ,iBAAI,MAAJ,SA+HmB,GACX,KAAK,WAAW,KAhIxB,CAAI,IAAJ,iBAAI,MAAJ,SAmImB,GACX,EAAK,WAAW,OAAO,QApI/B,CAAI,IAAJ,mBAAI,MAAJ,SAuIqB,GACbzH,KAAK,WAAW,KAxIxB,CAAI,IAAJ,mBAAI,MAAJ,SA2IqB,GACb,EAAK,WAAW,OAAO,QA5I/B,CAAI,IAAJ,mBAAI,MAAJ,SA+IqB,GACb,EAAK,YAAY,OAAO,MACxB,IAAM,EAAO,KAAK,QAAQ,EAAK,aAC/B,KAAM,aAAgB,IAClB,MAAM,IAAI,MAAJ,kDAEV,OAAQ,EAAK,aACT,KAAK,GAAa,IACd,GAAwB,YAApB,EAAK,WACL,MAAM,IAAI,MAAJ,6CAIlB,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,QAAQ,EAAK,gBA5JxE,CAAI,IAAJ,wBAAI,MAAJ,SA+J0B,GAClB,EAAK,gBAAgB,OAAO,MAC5B,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,QAAQ,EAAK,oBAjKxE,CAAI,IAAJ,qBAAI,MAAJ,SAoKuB,GACf,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,cArKtE,CAAI,IAAJ,kBAAI,MAAJ,SAwKoB,GACZ,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,WAzKtE,CAAI,IAAJ,yBAAI,MAAJ,SA4K2B,GACnB,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,gBA7KtE,CAAI,IAAJ,YAAI,MAAJ,SAgLc,GACN,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,WAjLtE,CAAI,IAAJ,iBAAI,MAAJ,SAoLmB,GACX,GAAI,aAAmB,GACnB,OAAO,EAAQ,UAEnB,OAAQ,GACJ,KAAK,GAAoB,IACrB,OAAO,KAAK,YAAY,WAAW,WACvC,KAAK,GAAoB,OACrB,OAAO,KAAK,YAAY,cAAc,WAC1C,QACI,MAAM,IAAI,MAAM,uBA9LhC,CAAI,IAAJ,mBAAI,MAAJ,SAkMqB,GAAqC,MAClD,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,YAC9D,YAAK,uBAAL,SAAsB,OAAO,MAC7B,IAAM,EAAa,EAAK,gBAClB,OACa,IAAf,EACM,KAAK,YAAY,WAAW,KAAK,YAAY,mBAAmB,IAAI,SACpE,EACJ,EAAU,EAAK,aACM,UAAjB,OAAN,QAAM,IAAN,WAAQ,aACR,QAAQ,IAAI,GAEhB,IAAM,EAAU,GAAc,WAC1B,KAAK,YACL,KAAK,MACL,EAAK,gBACLA,KAAK,eAAe,IACpB,EACA,IAEJ,KAAK,YAAY,gBAAgB,IAAI,EAAS,KAtNtD,CAAI,IAAJ,mBAAI,MAAJ,SAyNqB,GACb,KAAK,iBAAiB,KA1N9B,CAAI,IAAJ,iBAAI,MAAJ,SA6NmB,GACX,KAAK,iBAAiB,KA9N9B,CAAI,IAAJ,kBAAI,MAAJ,SAiOoB,GAAoB,MAChC,KAAK,YAAY,mBAAmB,IAAI,EAAM,KAAK,WAAW,YAC9D,YAAK,uBAAL,SAAsB,OAAO,QAnOrC,CAAI,IAAJ,oBAAI,MAAJ,SAsOsB,GAAsB,WACpC,EAAK,eAAe,SAAQ,SAAC,GAAD,OAAgB,EAAW,OAAO,MAC9D,IAAM,EAAS,EAAK,eAAe,KAAI,SAAC,GAAD,OAAgB,EAAK,QAAQ,MAC9D,EAAY,KAAK,YAAY,gBAC/B,KAAK,YAAY,cACb,EAAK,UAAU,UACf,OACA,EACA,IAAI,GAAc,KAAK,OAAO,GAAM,KAG5C,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAU,YACxD,KAAK,YAAY,aAAa,IAAI,EAAM,KAlPhD,CAAI,IAAJ,oBAAI,MAAJ,SAqPsB,GAEd,IADA,IAAI,EAAa,KAAK,QACb,aAAsB,KAAoB,aAAsB,IAErE,EAAa,EAAW,MAE5B,KAAM,aAAsB,IACxB,MAAM,IAAI,MAAJ,UAAa,EAAb,mCAGV,IAAM,EAAS,KAAK,YAAY,gBAC5B,KAAK,YAAY,aAAa,EAAM,IAAI,GAAc,GAAY,GAAO,KAEvE,OAAO,iBAAiB,IAC1B,MAAM,IAAI,MAAJ,gBAAmB,EAAnB,8BAEJ,OAAC,IArQf,CAAI,IAAJ,uBAAI,MAAJ,SAwQyB,GACX,MAAO,EAAK,UAAU,UAC5B,IACI,IAAM,EAAW,KAAK,YAAY,gBAC9B,KAAK,YAAY,aAAa,EAAK,UAAU,UAAW,IAAI,GAAc,KAAK,OAAO,GAAO,KAIjG,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAS,WACvD,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,IACI,IAAM,EAAW,KAAK,YAAY,gBAC9B,KAAK,YAAY,UAAU,QAAO,SAAC,GAAD,OAAc,EAAS,aAAe,MAI5E,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAS,WACvD,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAS,MAEzD,MAAO,IAGT,IACI,IAAM,EAAS,KAAK,YAAY,gBAC5B,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAM,KAI7E,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,QAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,IACI,IAAM,EAAS,KAAK,YAAY,gBAC5B,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAM,KAI7E,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,QAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,IACI,IAAM,EAAS,KAAK,YAAY,gBAC5B,KAAK,YAAY,uBAAuB,GAAM,EAAM,GAAI,IAAI,GAAc,KAAK,OAAO,GAAM,KAIhG,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAO,WACrD,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,IACI,IAAM,EAAS,KAAK,kBAAkB,GAGtC,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAO,WACrD,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,MAAM,IAAI,MAAJ,6CAAgD,EAAhD,SApUd,CAAI,IAAJ,iCAAI,MAAJ,SAuUmC,GAC3B,IAAM,EAAO,EAAK,UAAU,UAC5B,IACI,IAAM,EAAW,KAAK,YAAY,gBAC9B,KAAK,YAAY,uBACb,GACA,EACA,IAAI,MACJ,IAAI,GAAc,KAAK,OAAO,GAAO,KAK7C,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAS,WACvD,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,IACI,IAAM,EAAkB,KAAK,YAAY,gBACrC,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAM,KAI7E,OAFA,KAAK,YAAY,mBAAmB,IAAI,EAAM,QAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAEhD,MAAO,IAGT,MAAM,IAAI,MAAJ,6CAAgD,EAAhD,SAlWd,CAAI,IAAJ,4BAAI,MAAJ,SAqW8B,GACtB,IAAM,EAAO,EAAK,UACZ,EAAS,EAAK,YAEpB,GADA,EAAO,OAAO,MACV,aAAgB,GAAqB,CAErC,IAAM,EAAO,EAAK,UAAU,UAC5B,IACI,IAAM,EAAY,GAAc,aAC5B,EACA,KAAK,YACL,IAAI,MAAkB,KAAK,QAAQ,SACnC,EACA,IAAI,GAAc,KAAK,OAAO,GAAM,IAKxC,OAHA,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,QAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,EAAU,YAE1D,MAAO,KAIb,EAAK,OAAO,MACZ,IAAM,EAAW,KAAK,QAAQ,GAC9B,KAAK,YAAY,mBAAmB,IAAI,EAAM,GAC9C,KAAK,YAAY,mBAAmB,IAAI,EAAM,KA/XtD,CAAI,IAAJ,sBAAI,MAAJ,SAkYwB,GAChB,EAAK,gBAAgB,OAAO,MAC5B,EAAK,UAAU,OAAO,IAAI,GAAmB,KAAK,YAAa,KAAK,YApY5E,GAA8C,IC3BjC,GAAb,WAAE,SAAF,IAAI,oBAAF,4BAAE,IAAJ,yBAAI,MAAJ,SAC0C,EAAc,GAEhD,GAAqB,IADP,EAAY,UAAU,QAAO,SAAC,GAAD,OAAc,EAAS,aAAe,KACvE,OACN,MAAM,IAAI,MAAJ,UAAa,EAAb,+BAJlB,CAAI,IAAJ,eAAI,MAAJ,SAQwB,EAA0B,EAAc,GACxD,KAAK,uBAAuB,EAAM,GAClC,IAAM,EAAa,EAAY,cAAc,EAAM,GACnD,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,oBAAuB,EAAvB,oBAAuC,EAAW,OAAlD,8BAEV,GAAI,EAAW,OAAS,EACpB,MAAM,IAAIoF,MAAJ,uBAA0B,EAA1B,YAEV,OAAO,EAAW,KAjB1B,CAAI,IAAJ,eAAI,MAAJ,SAoBwB,EAA0B,EAAc,GACxD,KAAK,uBAAuB,EAAM,GAClC,IAAM,EAAa,EAAY,cAAc,EAAM,GACnD,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,oBAAuB,EAAvB,oBAAuC,EAAW,OAAlD,8BAEV,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,uBAA0B,EAA1B,YAEV,OAAO,EAAW,KA7B1B,CAAI,IAAJ,oBAAI,MAAJ,SAgC6B,EAA0B,EAAc,GAE7D,GADA,KAAK,uBAAuB,EAAM,KAC5B,EAAQ,iBAAiB,IAC3B,MAAM,IAAI,MAAJ,2BAA8B,EAA9B,kCAEV,IAAM,EAAkB,EAAY,mBAAmB,EAAM,GAC7D,GAAI,EAAgB,OAAS,EACzB,MAAM,IAAIA,MAAJ,yBAA4B,EAA5B,oBAA4C,EAAgB,OAA5D,8BAEV,GAAI,EAAgB,OAAS,EACzB,MAAM,IAAIA,MAAJ,4BAA+B,EAA/B,YAEV,OAAO,EAAgB,KA5C/B,CAAI,IAAJ,cAAI,MAAJ,SA+CuB,EAA0B,GACzC,IAAM,EAAW,EAAY,UAAU,QAAO,SAAC,GAAD,OAAc,EAAS,aAAe,KACpF,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,gBAAmB,EAAnB,qBAEV,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,yBAA4B,EAA5B,MAEV,OAAO,EAAS,KAvDxB,CAAI,IAAJ,cAAI,MAAJ,SA0DuB,EAA0B,EAAc,GACvD,IAAM,EAAS,EAAY,aAAa,EAAM,GAC9C,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAJ,gBAAmB,EAAnB,qBAEV,GAAI,EAAO,OAAS,EAChB,MAAM,IAAIA,MAAJ,yBAA4B,EAA5B,MAEV,OAAO,EAAO,KAlEtB,CAAI,IAAJ,oBAAI,MAAJ,SAqE6B,EAA0B,EAAwB,GACvE,OAAS,aAAiB,KAAoB,aAAiB,IAE3D,EAAQ,EAAM,MAElB,KAAM,aAAiB,IACnB,MAAM,IAAI,MAAJ,UAAa,EAAb,mCAGV,IAAM,EAAS,KAAK,YAAY,EAAa,EAAM,IAAI,GAAc,GAAO,GAAO,IACnF,KAAM,EAAO,iBAAiB,IAC1B,MAAM,IAAI,MAAJ,gBAAmB,EAAnB,8BAEV,OAAO,IAlFf,CAAI,IAAJ,eAAI,MAAJ,SAsFQ,EACA,EACA,EACA,EACA,GAEA,KAAK,uBAAuB,EAAM,GAClC,IAAM,EAAa,EAAY,cAAc,EAAM,EAAQ,EAAY,GAEvE,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,oBAAuB,EAAvB,oBAAuC,EAAW,OAAlD,8BAEV,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,uBAA0B,EAA1B,YAGV,OAAO,EAAW,KAtG1B,CAAI,IAAJ,uBAAI,MAAJ,SA0GQ,EACA,EACA,GAEA,IAAM,EAAO,EAAK,UAAU,UAC5B,KAAK,uBAAuB,EAAM,GAElC,IAAI,EAAyB,EAAY,SACnC,EAAiB,EAAK,UAC5B,QAAuB,IAAnB,EAA8B,CAC9B,EAAe,OAAO,IAAI,GAAmB,EAAa,EAAQ,QAClE,IAAM,EAAY,EAAY,aAAa,IAAI,GAC/C,QAAkB,IAAd,EACA,MAAM,IAAI,MAAJ,mCAAsC,EAAtC,kBAEV,EAAa,EAEjB,IAAM,EAAa,EAAc,kBAC7B,EACA,EAAQ,MACR,EAAK,YAAY,KAAI,SAAC,GAAD,OAAW,EAAM,mBAE1C,OAAO,KAAK,aAAa,EAAM,EAAa,EAAY,EAAY,KAhI5E,CAAI,IAAJ,cAAI,MAAJ,SAmIuB,EAA0B,GACnC,MAAO,EAAY,aAAa,IAAI,GACpC,QAAO,IAAT,EACA,MAAM,IAAI,MAAJ,iCAEJ,OAAC,IAxIf,CAAI,IAAJ,oBAAI,MAAJ,SA4IQ,EACA,EACA,GAA4B,WAE5B,OAAO,EAAO,SAAQ,SAAC,GACnB,EAAM,UAAU,OAAO,IAAI,GAAmB,EAAa,IAC3D,IAAM,EAAO,EAAK,YAAY,EAAa,EAAM,WACjD,OAAO,EAAM,WAAW,KAAI,kBAAM,UAnJ9C,CAAI,IAAJ,2BAAI,MAAJ,SAwJQ,EACA,EACA,EACA,EACA,GAEA,OAAS,aAAiB,KAAuB,CAC7C,GAAI,aAAiB,GACjB,MAAM,IAAI,MAAJ,oCAAuC,EAAvC,MAEV,EAAQ,EAAM,MAElB,IAAM,EAAW,EAAY,YACzB,EACA,EACA,EACA,IAAI,GAAc,EAAM,iBAAiB,GAAO,IAEpD,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,uCAA0C,EAA1C,MAEV,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,oCAAuC,EAAvC,MAEV,OAAO,EAAS,KAhLxB,CAAI,IAAJ,aAAI,MAAJ,SAoLQ,EACA,EACA,EACA,EACA,EACA,GAEA,IAAM,EAAW,EAAK,KAAI,SAAC,GACvB,EAAS,OAAO,IAAI,GAAyB,EAAa,IAC1D,IAAM,EAAO,EAAY,mBAAmB,IAAI,GAChD,QAAa,IAAT,EACA,MAAM,IAAI,MAAM,gCAEpB,OAAO,KAGX,GADe,OAAf,QAAe,IAAf,KAAiB,OAAO,IAAI,GAAyB,EAAa,SAC1C,IAApB,EAA+B,CAC/B,IAAM,EAAO,EAAY,mBAAmB,IAAI,GAC1C,EAAW,IAAI,MACrB,GAAI,aAAgB,GAChB,EAAS,KAAT,QAAQ,EACD,EAAK,YAAY,QACf,KAAI,SAAC,GAAD,OAAW,EAAM,mBACrB,SAAQ,SAAC,GAAD,OACL,EAAY,YACR,EACA,EACA,EACA,IAAI,GAAc,GAAoB,GAAO,aAI1D,MAAI,aAAgB,IAKvB,MAAM,IAAI,MAAJ,sCAAyC,EAAzC,MAJN,EAAS,KAAT,QAAQ,EACD,EAAY,YAAY,EAAM,EAAY,EAAU,IAAI,GAAc,GAAM,GAAO,MAK9F,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,uCAA0C,EAA1C,MAEV,GAAI,EAAS,OAAS,EAClB,MAAM,IAAI,MAAJ,oCAAuC,EAAvC,MAEV,OAAO,EAAS,GAEpB,OAAO,KAAK,yBAAyB,EAAa,EAAO,EAAM,EAAY,OAnOnF,KCda,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,SAAApF,OADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,iBAAI,MAAJ,SAKmBof,GAAmB,WACxBlhB,EAAOkhB,EAAKqB,UAAUA,UACtBC,EAAatB,EAAKuB,gBAClBC,EAAkB,IAAI,GACxB,KAAK,MACL,EACA,IAAI,GACA,EACK,YACA,KAAI,SAAC,GAAD,OACD,GAAmB,iCAAiC,EAAK,YAAa,EAAM,EAAK,UAEzF,EACK,cACA,KAAI,SAAC,GAAD,OACD,GAAmB,iCAAiC,EAAK,YAAa,EAAM,EAAK,WAG7F,EAAW,QAAO,SAAC,GAAD,MAAiD,eAAlC,EAAU,UAAU,aAA4B,OAAS,GAE9F,IAEI,MADA,GAAc,aAAa,KAAK,YAAa,EAAM,IAAI,GAAc,KAAK,OAAO,GAAO,IAClF,IAAI,MAAJ,8BAAiC,EAAjC,eACR,MAAO,IAGH,GAAF,EAAgB,eAAiB,KAAK,aAAa,GACnD,MAAM,IAAI,MAAJ,sCAC6B,EAD7B,mEAIV,KAAK,YAAY,kBAAkB,GACnC,KAAK,YAAY,kBAAkB,IAAI,EAAiB,GACxD,KAAK,YAAY,kBAAkB,IAAI,EAAM,KAtCrD,CAAI,IAAJ,eAAI,MAAJ,SAyCyB,GAA0B,WACrC,EAAW,EAAU,YAAY,SACvC,OACwB,IAApB,EAAS,QACT,EACK,KAAI,SAAC,GAAD,OAAc,EAAK,kBAAkB,EAAS,gBAAgB,eAClE,QAAO,SAAC,EAAM,GAAP,OAAmB,GAAQ,KAAS,KA/C5D,CAAI,IAAJ,oBAAI,MAAJ,SAmD8B,GACtB,OAAQ,GACJ,IAAK,aACL,IAAK,aACL,IAAK,cACD,OAAO,EACX,QACI,OAAO,OA1DvB,GAA8C,ICHjC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,SAAA5gB,OADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,iBAAI,MAAJ,SAWmB,GACX,IAAM,EAAO,EAAK,UAAU,UACtB,EAAkB,IAAI,GAAgB,KAAK,MAAO,GACxD,IAII,MAHA,KAAK,YAAY,gBACb,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAO,KAExE,IAAI,MAAJ,8BAAiC,EAAjC,eACR,MAAO,IAKT,KAAK,YAAY,kBAAkB,GACnC,KAAK,YAAY,kBAAkB,IAAI,EAAiB,GACxD,KAAK,YAAY,kBAAkB,IAAI,EAAM,OA1BrD,GAA8C,ICUjC,GAAb,YAAE,qBAAF,iBACI,WAAoB,EAA2C,GAAsB,kCACjF,gBADgB,cAA2C,UAAsB,EADvF,uBAAE,IAAJ,gBAAI,MAAJ,SAKkB,GAAkB,MAC5B,YAAK,uBAAL,SAAsB,OAAO,QANrC,CAAI,IAAJ,oBAAI,MAAJ,SASsB,GAAsB,WACpC,EAAK,aAAa,SAAQ,SAAC,GAAD,OAAY,EAAO,OAAO,QAV5D,CAAI,IAAJ,0BAAI,MAAJ,SAa4B,GAA4B,WAC1C,EAAO,EAAK,UAAU,UACtB,EAAkC,EAAK,YAAY,SAAQ,SAAC,GAC9D,EAAM,UAAU,OAAO,IAAI,GAAmB,EAAK,YAAa,EAAK,QACrE,IAAM,EAAO,EAAK,YAAY,aAAa,IAAI,EAAM,WACrD,QAAa,IAAT,EACA,MAAM,IAAI,MAAJ,mCAAsC,EAAtC,oBAEV,OAAO,EAAM,WAAW,KAAI,kBAAM,QAEhC,EAAU,IAAI,GAAc,KAAK,MAAO,EAAM,GACpD,KAAK,YAAY,gBAAgB,GACjC,KAAK,YAAY,gBAAgB,IAAI,EAAM,KAzBnD,CAAI,IAAJ,wCAAI,MAAJ,SA4B0C,GAClC,EAAK,gBAAgB,OAAO,QA7BpC,CAAI,IAAJ,qCAAI,MAAJ,SAgCuC,GAC/B,EAAK,gBAAgB,OAAO,QAjCpC,CAAI,IAAJ,yCAAI,MAAJ,SAoC2C,GACnC,EAAK,gBAAgB,OAAO,QArCpC,CAAI,IAAJ,0BAAI,MAAJ,SAwC4B,GAA4B,WAChD,EAAK,WAAW,SAAQ,SAAC,GAAD,OAAU,EAAK,OAAO,UAzCtD,GAA4C,ICA/B,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,gBADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,iBAAI,MAAJ,SAKmB,GAAmB,WACxB,EAAO,EAAK,UAAU,UACtB,EAA4B,GAAc,kBAC5C,KAAK,YACL,KAAK,MACL,EAAK,YAAY,KAAI,SAAC,GAAD,OAAW,EAAM,mBAEtC,EAAyB,KAAK,YAAY,SAExC,EAAiB,EAAK,UAC5B,QAAuB,IAAnB,EAA8B,CAC9B,EAAe,OAAO,IAAI,GAAmB,KAAK,YAAa,KAAK,QACpE,IAAM,EAAY,KAAK,YAAY,aAAa,IAAI,GACpD,QAAkB,IAAd,EACA,MAAM,IAAI,MAAH,4CAAD,OAAsD,EAAtD,MAEV,EAAa,EAEX,IAEF,MADA,GAAc,qBAAqB,EAAM,KAAK,YAAa,IAAI,GAAc,KAAK,OAAO,GAAO,IAC1F,IAAI,MAAM,iCAClB,MAAO,IAGT,IAAM,EAAY,IAAI,GAAgB,KAAK,MAAO,EAAM,EAAQ,GAChE,EAAK,YAAY,SAAQ,SAAC,GACtB,IAAM,EAAa,EAAM,eACzB,EACK,WACA,SAAQ,SAAC,GAAD,OACL,EAAK,YAAY,iBACb,IAAI,GACA,EACA,EAAK,UACL,EAAM,YACN,GAAc,YAAY,EAAK,YAAa,EAAW,mBAK3E,KAAK,YAAY,kBAAkB,GACnC,KAAK,YAAY,kBAAkB,IAAI,EAAM,OA9CrD,GAA8C,ICRjC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,SAAAA,OADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,sBAAI,MAAJ,SAKwBof,GAChB,IAAMlhB,EAAOkhB,EAAKqB,UAAUA,UACtBI,EAAmB7gB,KAAK6f,MAAMC,YAAYgB,QAC3CC,QAAO,SAACC,GAAD,OAAYA,EAAOC,gBAAgBlB,aAAe7hB,KACzDgjB,KAAI,SAACF,GAAD,OAAYA,EAAOC,mBAC5B,GAAgC,IAA5BJ,EAAiB/f,OACjB,MAAM,IAAIsE,MAAJ,wCAA2ClH,EAA3C,sBAEV,IAEI,MADA,GAAcijB,kBAAkBnhB,KAAKogB,YAAaliB,EAAM,IAAI,GAAc8B,KAAK6f,OAAO,GAAO,IACvF,IAAIza,MAAJ,qBAAwBlH,EAAxB,+BACR,MAAO,IAGT,IAAM,EAAuB,IAAI,GAAqB,KAAK,MAAO,EAAiB,IACnF,KAAK,YAAY,uBAAuB,GACxC8B,KAAKogB,YAAY,uBAAuB,IAAI,EAAsB,GAClEpgB,KAAKogB,YAAY,uBAAuBhR,IAAI,EAAM,OAtB1D,GAAmD,ICDtC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,SAAApP,OADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,gBAAI,MAAJ,SAKkBof,GACV,IAAMlhB,EAAOkhB,EAAKqB,UAAUA,UAC5BrB,EAAKgC,gBAAgBC,OAAO,IAAI,GAAyBrhB,KAAKogB,YAAapgB,KAAK6f,QAChF,IAAMyB,EAAmBthB,KAAKogB,YAAYmB,WACtC,KAAK,YAAY,mBAAmB,IAAI,EAAK,gBAAgB,kBAE3D,EAAW,IAAI,GAAe,KAAK,MAAO,GAAM,EAAO,GAC7D,KAAK,YAAY,iBAAiB,GAClC,KAAK,YAAY,iBAAiB,IAAI,EAAM,KAbpD,CAAI,IAAJ,oBAAI,MAAJ,SAgBsB,GAAsB,WACpC,EAAK,eAAe,SAAQ,SAAC,GAAD,OAAc,EAAS,OAAO,UAjBlE,GAAiD,ICQpC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACpE,EAAJ,cADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,gBAAI,MAAJ,SAKkB,GAAkB,WAC5B,EAAK,UAAU,OAAO,IAAI,GAAmB,KAAK,YAAa,KAAK,QAC9D,MAAO,KAAK,YAAY,aAAa,IAAI,EAAK,WAC9C,QAAO,IAAT,EACA,MAAM,IAAI,MAAJ,UAAa,EAAK,WAAW,GAAG,UAAhC,oBAEV,EAAK,WAAW,SAAQ,SAAC,GACrB,IAAM,EAAa,EAAK,UACxB,GAAI,aAAgB,IAAyC,SAApB,EAAK,WAC1C,EAAKnB,YAAY,2BACb,IAAI,GACA,EAAK,MACL,EACA,EACA,IAAI,MACA,EAAK,YAAY,gBAAgB,EAAK,YAAY,YAAY,mBAP9E,CAcA,GAAgC,IAA5B,EAAK,YAAY,OAAc,CAC/B,IAAM,EAAW,IAAI,GAAe,EAAK,MAAO,GAAY,EAAM,GAGlE,OAFA,EAAK,YAAY,iBAAiB,QAClC,EAAK,YAAY,iBAAiB,IAAI,EAAM,GAGhD,EAAK,YAAY,2BACb,IAAI,GACA,EAAK,MACL,EACA,EACA,GAAc,kBAAkB,EAAK,YAAa,EAAK,MAAO,EAAK,qBAtCvF,CAAI,IAAJ,oBAAI,MAAJ,SA6CsB,GAAsB,WACpC,EAAK,eAAe,SAAQ,SAAC,GAAD,OAAc,EAAS,OAAO,UA9ClE,GAAiD,ICWpC,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,gBADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,eAAI,MAAJ,SAKiB,GAAiB,WAC1B,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OACzB,EAAc,OAAO,IAAI,GAAyB,EAAK,YAAa,EAAK,WAE7E,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OACzB,EAAU,OAAO,IAAI,GAAyB,EAAK,YAAa,EAAK,WAEzE,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OACzB,EAAc,OAAO,IAAI,EAAoB,EAAK,YAAa,EAAK,WAExE,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OACzB,EAAU,OAAO,IAAI,EAAoB,EAAK,YAAa,EAAK,aAhB5E,CAAI,IAAJ,iBAAI,MAAJ,SAoBmB,GAAmB,MACxB,EAAO,EAAK,UAAU,UACtB,EAAa,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAO,IAC7F,GAA0B,IAAtB,EAAW,OACX,MAAM,IAAI,MAAJ,sCAAyC,EAAzC,MAEV,YAAK,iBAAL,SAAgB,OAAO,IAAI,EAAoB,KAAK,YAAa,EAAW,OA1BpF,CAAI,IAAJ,iBAAI,MAAJ,SA6BmB,GACX,IAAM,EAAO,EAAK,UAAU,UACtB,EAAa,KAAK,YAAY,cAAc,EAAM,IAAI,GAAc,KAAK,OAAO,GAAO,IAC7F,GAA0B,IAAtB,EAAW,OACX,MAAM,IAAI,MAAJ,qCAAwC,EAAxC,MAEV,EAAK,cAAc,OAAO,IAAI,GAAuB,KAAK,YAAa,EAAW,OAnC1F,CAAI,IAAJ,gBAAI,MAAJ,SAsCkB,GAAkB,MAC5B,YAAK,uBAAL,SAAsB,OAAO,IAAI,GAAuB,KAAK,YAAa,KAAK,UAvCvF,CAAI,IAAJ,iBAAI,MAAJ,SA0CmB,GACX,IAAM,EAAY,GAAc,qBAC5B,EACA,KAAK,YACL,IAAI,GAAc,KAAK,OAAO,GAAO,IAEzC,KAAK,cAAc,EAAK,kBAAmB,KAhDnD,CAAI,IAAJ,gBAAI,MAAJ,SAoDQ,EACA,EACA,EACA,GAAqD,WAE/C,EAAa,EACd,QAAO,SAAC,GAAD,OAAiB,aAAuB,MAC/C,KAAI,SAAC,GAAD,OAAiB,KACpB,EAAa,EACd,QAAO,SAAC,GAAD,OAAiB,aAAuB,MAC/C,KAAI,SAAC,GAAD,OAAiB,KACpB,EAAa,EACd,QAAO,SAAC,GAAD,OAAiB,aAAuB,MAC/C,KAAI,SAAC,GAAD,OAAiB,KACpB,EAAY,EACb,QAAO,SAAC,GAAD,OAAiB,aAAuB,MAC/C,KAAI,SAAC,GAAD,OAAiB,KACpB,EAAY,EACb,QAAO,SAAC,GAAD,OAAiB,aAAuB,MAC/C,KAAI,SAAC,GAAD,OAAiB,KAC1B,EAAW,SAAQ,SAAC,GAAD,OACf,EAAY,OAAO,IAAI,GAAyB,EAAK,YAAa,OAEtE,EAAW,SAAQ,SAAC,GAAD,OACf,EAAY,OAAO,IAAI,GAAyB,EAAK,YAAa,OAEtE,EAAW,SAAQ,SAAC,GAAD,OACf,EAAY,OAAO,IAAI,GAAyB,EAAK,YAAa,OAEtE,EAAU,SAAQ,SAAC,GAAD,OACd,EAAY,OAAO,IAAI,GAA4B,EAAK,YAAa,OAEzE,EAAU,SAAQ,SAAC,GAAD,OACd,EAAY,OAAO,IAAI,GAA4B,EAAK,YAAa,YAE3C,IAA1B,GACA,IAEJ,EAAW,SAAQ,SAAC,GAAD,OACf,EAAc,OAAO,IAAI,EAAoB,EAAK,YAAa,OAEnE,EAAW,SAAQ,SAAC,GAAD,OAAe,EAAU,OAAO,IAAI,EAAoB,EAAK,YAAa,OAC7F,EAAW,SAAQ,SAAC,GAAD,OAAe,EAAU,OAAO,IAAI,EAAoB,EAAK,YAAa,YAC5D,IAA7B,GACA,EAAyB,IAAI,EAAoB,KAAK,YAAa,MAhG/E,CAAI,IAAJ,sBAAI,MAAJ,SAoGwB,GAChB,IAAM,EAAO,EAAK,UAAU,UAC5B,KAAM,KAAK,iBAAiB,IACxB,MAAM,IAAI,MAAM,gDAEpB,IAAM,EAAkB,KAAK,YAAY,mBAAmB,EAAM,IAAI,GAAc,KAAK,OAAO,GAAO,IACvG,GAA+B,IAA3B,EAAgB,OAChB,MAAM,IAAI,MAAJ,qCAAwC,EAAxC,MAEV,KAAK,cAAc,EAAK,kBAAmB,EAAgB,MA7GnE,CAAI,IAAJ,qBAAI,MAAJ,SAgHuB,GAAuB,WACtC,KAAM,KAAK,iBAAiB,IACxB,MAAM,IAAI,MAAM,6CAEpB,IAAM,EAAa,KAAK,MACxB,KAAK,cACD,EAAK,kBACL,GACA,WACI,EAAK,qBAAqB,SAAQ,SAAC,GAAD,OAC9B,EAAe,OAAO,IAAI,GAA8B,EAAK,YAAa,UAGlF,SAAC,GACG,EAAK,qBAAqB,SAAQ,SAAC,GAAD,OAAoB,EAAe,OAAO,aA9H5F,GAAyC,ICL5B,GAAb,WACM,SAAF,EAA4B,EAAkC,GAAgC,oBAAlE,mBAAkC,oBAC1D,IAAM,EAAS,IAAI,GAAkB,KAAK,YAAY,YAAa,WAC7D,EAAS,IAAI,GAAkB,KAAK,YAAY,YAAa,aAC7D,EAAS,IAAI,GAAkB,KAAK,YAAY,YAAa,QAC7D,EAAQ,IAAI,GAAkB,KAAK,YAAY,YAAa,WAC5D,EAAS,IAAI,GAAkB,KAAK,YAAY,YAAa,QAEnE,KAAK,aAAe,IAAI,MAAyB,EAAQ,EAAQ,EAAQ,EAAO,GAEhF,KAAK,UAAY,IAAI,IAA+B,CAChD,CAAC,OAAQ,GACT,CAAC,QAAS,GACV,CAAC,KAAM,KAGX,KAAK,UAAY,IAAI,IAA+B,CAAC,CAAC,OAAQ,KAE9D,KAAK,iBAAmB,IAAI,MAExB,CAAC,SAAU,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACpE,CAAC,SAAU,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,EAAQ,KAC5E,CAAC,OAAQ,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KAClE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACjE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,EAAO,KACxE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACjE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,EAAO,KACxE,CAAC,YAAa,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACvE,CAAC,QAAS,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACnE,CAAC,QAAS,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACnE,CAAC,QAAS,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACnE,CAAC,QAAS,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACnE,CAAC,WAAY,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACtE,CAAC,YAAa,CAAC,KAAK,YAAY,SAAU,IAAI,QAE9C,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAuB,KAAK,YAAY,oBAChF,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,KACjE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,EAAO,KACxE,CAAC,MAAO,CAAC,KAAK,YAAY,SAAU,IAAI,MAAyB,EAAO,EAAO,KAC/E,CAAC,SAAU,CAAC,KAAK,YAAY,SAAU,IAAI,MAAuB,KAAK,YAAY,oBAEnF,CAAC,QAAS,CAAC,EAAO,IAAI,MAAuB,KAAK,YAAY,4BAC9D,CAAC,SAAU,CAAC,EAAO,IAAI,MAAyB,KAChD,CAAC,OAAQ,CAAC,EAAQ,IAAI,MAAyB,KAC/C,CAAC,MAAO,CAAC,EAAQ,IAAI,MAAyB,KAC9C,CAAC,MAAO,CAAC,EAAQ,IAAI,MAAyB,KAC9C,CAAC,MAAO,CAAC,EAAQ,IAAI,MAAyB,KAC9C,CAAC,SAAU,CAAC,EAAQ,IAAI,MAAyB,KACjD,CAAC,SAAU,CAAC,EAAQ,IAAI,MAAyB,KACjD,CAAC,SAAU,CAAC,EAAQ,IAAI,MAAyB,KACjD,CAAC,SAAU,CAAC,EAAO,IAAI,MAAyB,EAAO,KACvD,CAAC,MAAO,CAAC,EAAQ,IAAI,MAAyB,KAC9C,CAAC,MAAO,CAAC,EAAO,IAAI,MAAyB,KAC7C,CAAC,MAAO,CAAC,EAAQ,IAAI,MAAyB,KAC9C,CAAC,MAAO,CAAC,EAAO,IAAI,MAAyB,KAE7C,CAAC,YAAa,CAAC,EAAQ,IAAI,MAAyB,KACpD,CAAC,UAAW,CAAC,EAAO,IAAI,MAAyB,KACjD,CAAC,OAAQ,CAAC,EAAQ,IAAI,MAAyB,KAC/C,CAAC,OAAQ,CAAC,EAAQ,IAAI,MAAyB,MA3DzD,uBAAE,IAAJ,WAAI,MAAJ,SA8EqB,GACb,KAAK,mBACL,EAAQ,OAAO,IAAI,GAAoB,KAAK,YAAa,KAAK,iBAhFtE,CAAI,IAAJ,mBAAI,MAAJ,WAoFQ,KAAK,uBACL,KAAK,4BACL,KAAK,2BACL,KAAK,6BAvFb,CAAI,IAAJ,uBAAI,MAAJ,WA0FgC,WACxB,KAAK,aAAa,SAAQ,SAAC,GAAD,OAAW,EAAK,YAAY,iBAAiB,QA3F/E,CAAI,IAAJ,4BAAI,MAAJ,WA8FqC,WAC7B,KAAK,iBAAiB,SAAQ,SAAC,GAC3B,IAAM,EAAY,IAAI,GAAgB,EAAK,YAAY,YAAa,EAAM,GAAI,EAAM,GAAG,GAAI,EAAM,GAAG,IACpG,EAAK,YAAY,kBAAkB,QAjG/C,CAAI,IAAJ,2BAAI,MAAJ,WAqGoC,WAC5B,KAAK,UAAU,SAAQ,SAAC,EAAO,GAAR,OAAgB,EAAK,YAAY,UAAU,KAAK,IAAI,GAAe,EAAK,SAtGvG,CAAI,IAAJ,2BAAI,MAAJ,WAyGoC,WAC5B,KAAK,UAAU,SAAQ,SAAC,EAAO,GAAR,OACnB,EAAK,YAAY,iBAAiB,IAAI,GAAe,EAAK,YAAY,YAAa,GAAK,EAAO,UA3G3G,EAAI,IAAJ,MAAI,MAAJ,SAyEe,EAA0B,EAAsB,GAClC,IAAI,EAAmB,EAAa,GAC5C,SAAS,KA3E9B,CAAI,IAAJ,mCAAI,MAAJ,SAgHQ,EACA,EACA,GAAsB,MAEhB,EAAO,EAAK,UAAU,UACtB,EAAa,EAAY,cAAc,EAAM,IAAI,GAAc,GAAO,GAAM,IAClF,GAA0B,IAAtB,EAAW,OACX,MAAM,IAAI,MAAJ,oBAAuB,EAAvB,kBAEV,GAAI,EAAW,OAAS,EACpB,MAAM,IAAI,MAAJ,oBAAuB,EAAvB,6BAEV,IAAM,EAAc,EAAK,iBACzB,OAAO,IAAI,GACP,EAAW,GACX,IAAI,GAAJ,iBAAsB,QAAtB,IAAsB,OAAtB,EAAsB,EAAa,gBAAnC,QAA+C,EAA/C,OAAkD,QAAlD,IAAkD,OAAlD,EAAkD,EAAa,eA/H3E,KCuBa,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAoB,EAAkC,GAAsB,kCACxE,gBADgB,cAAkC,UAAsB,EAD9E,uBAAE,IAAJ,yBAAI,MAAJ,SAKmC,GAC3B,GAAI,aAAgB,IAAiC,aAAgB,GAAqB,CACtF,IAAM,EAAO,EAAK,UAAU,UACtB,EAAS,KAAK,YAAY,uBAC5B,GACA,EACA,GACA,IAAI,GAAc,KAAK,OAAO,GAAO,IAEzC,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAJ,gBAAmB,EAAnB,qBAEV,GAAI,EAAO,OAAS,EAChB,MAAM,IAAI,MAAJ,yBAA4B,EAA5B,MAEV,OAAO,EAAO,GAGlB,MAAM,IAAI,MAAM,0BAvBxB,CAAI,IAAJ,eAAI,MAAJ,SA0BiB,GAAiB,WAC1B,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OAAe,EAAU,OAAO,QA3BrE,CAAI,IAAJ,iBAAI,MAAJ,SA8BmB,GAAmB,MACxB,EAAY,GAAc,aAC5B,KAAK,YACL,EAAK,UAAU,UACf,IAAI,GAAc,KAAK,OAAO,GAAM,IAExC,UAAAhB,EAAK,iBAAL,SAAgB,OAAO,IAAI,EAAwBpf,KAAKogB,YAAa,MApC7E,CAAI,IAAJ,qBAAI,MAAJ,SAuCuB,GAAuB,iBACtChB,EAAK,kBAAkB,SAAQ,SAAC,GAAD,OAAiB,EAAY,OAAO,MACnE,EAAK,qBAAqB,SAAQ,SAAC,GAAD,OAAoB,EAAe,OAAO,MAC5E,YAAK,uBAAL,SAAsB,OAAO,IAAI,EAAwB,KAAK,YAAa,KAAK,QAChF,YAAK,0BAAL,SAAyB,OAAO,IAAI,EAAwB,KAAK,YAAa,KAAK,QACnF,YAAK,yBAAL,SAAwB,OAAO,IAAI,EAAwB,KAAK,YAAa,KAAK,UA5C1F,CAAI,IAAJ,sBAAI,MAAJ,SA+CwB,GAAwB,aAClC,EAAiB,GAAc,kBACjC,KAAK,YACL,EAAK,UAAU,UACf,IAAI,GAAc,KAAK,OAAO,GAAM,IAExC,EAAK,kBAAkB,SAAQ,SAAC,GAAD,OAC3B,EAAY,OAAO,IAAI,EAAwB,EAAK,YAAa,OAErE,UAAAA,EAAK,uBAAL,SAAsB,OAAO,IAAI,EAAwB,KAAK,YAAa,MAxDnF,CAAI,IAAJ,iBAAI,MAAJ,SA2DmB,GAAmB,aACxB,EAAY,GAAc,qBAC5B,EACA,KAAK,YACL,IAAI,GAAc,KAAK,OAAO,GAAM,IAExC,EAAK,kBAAkB,SAAQ,SAAC,GAAD,OAC3B,EAAY,OAAO,IAAI,EAAwB,EAAK,YAAa,OAErE,UAAAA,EAAK,uBAAL,SAAsB,OAAO,IAAI,EAAwB,KAAK,YAAa,MApEnF,CAAI,IAAJ,yBAAI,MAAJ,SAuE2B,GAA2B,WAC9C,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OACzB,EAAU,OAAO,IAAI,EAAwB,EAAK,YAAa,IAAI,GAAiB,EAAK,cAzErG,CAAI,IAAJ,qBAAI,MAAJ,SA6EuB,GAAuB,MAAApf,KAChC,EAAS,EAAK,YAAY,KAAI,SAAC,GAEjC,OADA,EAAM,OAAO,IAAI,GAAyB,EAAK,YAAa,EAAK,QAC1D,EAAK,YAAY,WAAW,EAAK,YAAY,mBAAmB,IAAI,OAEzE,EAAY,GAAc,aAC5B,EAAK,UAAU,UACf,KAAK,YACL,OACA,EACA,IAAI,GAAc,KAAK,OAAO,GAAM,IAExC,KAAK,YAAY,aAAa,IAAI,EAAM,KAzFhD,CAAI,IAAJ,kBAAI,MAAJ,SA4FoB,GACZof,EAAKoC,gBAAgBH,OAAO,IAAI,GAAyBrhB,KAAKogB,YAAa,KAAK,QAChF,IAAM,EAAS,KAAK,YAAY,WAAW,KAAK,YAAY,mBAAmB,IAAI,EAAK,kBACxF,KAAM,aAAkB,IAAkB,EAAO,YAAc,aAAkB,IAE7E,MADA,QAAQ,IAAI,GACN,IAAI,MAAM,2CAEpB,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAnGxF,CAAI,IAAJ,WAAI,MAAJ,SAsGa,GAAa,WAElB,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,QAChFhB,EAAK,UAAU,SAAQ,SAAC,GAAD,OACnB,EAAS,OAAO,IAAI,GAAyB,EAAK,YAAa,EAAK,aA1GhF,CAAI,IAAJ,eAAI,MAAJ,SA8GiB,GAETA,EAAK,QAAQ,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,QACxE,EAAK,UAAU,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAjHlF,CAAI,IAAJ,kBAAI,MAAJ,SAoHoB,GAEZ,EAAK,UAAU,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAtHlF,CAAI,IAAJ,YAAI,MAAJ,SAyHc,GACN,GAAmC,aAA/B,EAAK,YAAY,UACjB,MAAM,IAAI,MAAM,OAEpB,KAAK,YAAY,oBAAoB,IACjC,EACA,GAAc,WACV,KAAK,YACL,KAAK,MACL,EAAK,UACL,EAAK,YAAY,WACjB,EACA,EAAK,cArIrB,CAAI,IAAJ,eAAI,MAAJ,SA0IiB,GACT,KAAK,YAAY,oBAAoB,IACjC,EACA,GAAc,WACV,KAAK,YACL,KAAK,MACL,EAAK,UACL,EAAK,cAAc,WACnB,EACA,EAAK,iBAnJrB,CAAI,IAAJ,cAAI,MAAJ,SAwJgB,GACR,EAAK,YAAY,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAzJpF,CAAI,IAAJ,YAAI,MAAJ,SA4Jc,GACN,EAAK,UAAU,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,QAC1E,EAAK,QAAQ,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UA9JhF,CAAI,IAAJ,aAAI,MAAJ,SAiKe,GACP,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAlKxF,CAAI,IAAJ,cAAI,MAAJ,SAqKgB,GAAgB,MACxB,YAAK,uBAAL,SAAsB,OAAO,IAAI,GAAyB,KAAK,YAAa,KAAK,UAtKzF,CAAI,IAAJ,UAAI,MAAJ,SAyKY,GAAY,aACV,EAAW,IAAI,GAAiB,KAAK,OAC3C,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,IAC3E,EAAK,UAAU,OAAO,IAAI,EAAwB,KAAK,YAAa,IACpE,EAAK,aAAa,SAAQ,SAAC,GAAD,OAAY,EAAO,OAAO,IAAI,EAAwB,EAAK,YAAa,OAClG,YAAK,iBAAL,SAAgB,OAAO,IAAI,EAAwB,KAAK,YAAa,MA9K7E,CAAI,IAAJ,cAAI,MAAJ,SAiLgB,GACR,IAAM,EAAW,IAAI,GAAiB,KAAK,OAC3C,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,IAC3E,EAAK,UAAU,OAAO,IAAI,EAAwB,KAAK,YAAa,MApL5E,CAAI,IAAJ,aAAI,MAAJ,SAuLe,GACP,IAAM,EAAW,IAAI,GAAiB,KAAK,OAC3C,EAAK,iBAAiB,OAAO,IAAI,GAAyB,KAAK,YAAa,IAC5E,EAAK,UAAU,OAAO,IAAI,EAAwB,KAAK,YAAa,MA1L5E,CAAI,IAAJ,cAAI,MAAJ,SA6LgB,GACR,IAAM,EAAW,IAAI,GAAiB,KAAK,OAC3C,EAAK,iBAAiB,OAAO,IAAI,GAAyB,KAAK,YAAa,IAC5E,EAAK,UAAU,OAAO,IAAI,GAAyB,KAAK,YAAa,MAhM7E,CAAI,IAAJ,WAAI,MAAJ,SAmMa,GAAa,MACZ,EAAW,IAAI,GAAiB,KAAK,OAG3C,GAFA,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,MACxD,EAAK,0BACI,IACxB,MAAM,IAAI,MAAM,+CAEpB,EAAK,gBAAgB,OAAO,IAAI,GAAyB,KAAK,YAAa,IAC3E,EAAK,QAAQ,OAAO,IAAI,GAAyB,KAAK,YAAa,IACnE,YAAK,eAAL,SAAc,OAAO,IAAI,GAAyB,KAAK,YAAa,IACpE,EAAK,gBAAgB,OAAO,IAAI,EAAwB,KAAK,YAAa,MA7MlF,CAAI,IAAJ,eAAI,MAAJ,SAgNiB,GAAiB,WACpB,EAAW,IAAI,GAAiB,KAAK,OAC3C,EAAK,QAAQ,OAAO,IAAI,GAAyB,KAAK,YAAa,IACnE,IAAM,EAAW,KAAK,uBAAuB,EAAK,SAClD,GAAI,EAAS,WAAW,OAAS,EAAK,iBAAiB,OACnD,MAAM,IAAI,MAAM,mCAEpB,EAAK,iBAAiB,SAAQ,SAAC,EAAY,GACvC,KAAM,aAAsB,IACxB,MAAM,IAAI,MAAM,qCAEpB,EAAK,YAAY,iBACb,IAAI,GAAe,EAAK,MAAO,EAAW,UAAU,WAAW,EAAM,EAAS,WAAW,KAE7F,EAAW,OAAO,IAAI,GAAyB,EAAK,YAAa,OAErE,EAAK,UAAU,OAAO,IAAI,EAAwB,KAAK,YAAa,MAhO5E,CAAI,IAAJ,sBAAI,MAAJ,SAmOwB,GAChB,EAAK,gBAAgB,OAAO,UApOpC,GAA6C,ICpChC,GAAb,WACI,WAA4B,EAAkC,GAAgC,oBAAlE,mBAAkC,oBADhE,uBAAE,IAAJ,MAAI,MAAJ,SAQQA,GACA,EAAK,OAAO,IAAI,GAAwB,KAAK,YAAa,KAAK,eAC/D,EAAK,OAAO,IAAI,GAA4B,KAAK,YAAa,KAAK,kBAV3E,EAAI,IAAJ,MAAI,MAAJ,SAGe,EAA0B,EAAsB,GAClC,IAAI,EAAU,EAAa,GACnC,IAAI,OALzB,KCAa,GAAb,WAAE,SAAF,IAAI,oBAAF,uBAAE,IAAJ,QAAI,MAAJ,SACU,EAAa,GACf,IAAM,EAAc,IAAI,GAClB,EAAe,IAAI,GAAmB,EAAY,YAAa,GAGrE,OAFA,GAAmB,IAAI,EAAa,EAAK,GACzC,GAAU,IAAI,EAAa,EAAK,GACzB,MANf,K,SlBSA,SAAK,GACD,iBADJ,CAAK,QAAQ,KAGb,IAAa,GAAb,aAAE,oBACqB,eAAY,GAAS,KAG/B,GAAb,WAAE,SAAF,IAAI,oBACiB,aAAU,IAAI,IACd,aAAU,IAAI,IACd,UAAO,IAAI,MAH9B,uBAAE,IAAJ,WAAI,MAAJ,WAOQ,OADApf,KAAK,YACE,KAAK,OAPpB,CAAI,IAAJ,cAAI,MAAJ,WAWQ,OAAO,IAAI,KAXnB,CAAI,IAAJ,WAAI,MAAJ,SAca,GACC,KAAD,QAAQ,IAAI,EAAO,KAAK,KAAK,UAf1C,CAAI,IAAJ,YAAI,MAAJ,WAkBa,WACL,KAAK,QAAQ,SAAQ,SAAC,EAAS,GAC3B,IAAM,EAAS,EAAK,QAAQ,IAAI,GAChC,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,mCAEpB,EAAQ,SAAQ,SAAC,GACb,IAAM,EAAc,EAAK,KAAK,EAAS,GACvC,GACI,EAAY,OAAS,KAAa,QAClC,EAAY,OAAS,KAAa,aAClC,EAAY,OAAS,KAAa,WAElC,MAAM,IAAI,MACN,2BAA6B,EAAY,KAAO,aAAe,EAAS,aAAe,GAG/F,EAAK,KAAK,EAAS,GAAG,UAAU,KAAK,IAAI,KAAe,EAAS,YAnCjF,CAAI,IAAJ,kBAAI,MAAJ,SAwCoB,GACZ,KAAK,KAAK,KAAa,oBAAqB,IAAI,KAAkB,MAzC1E,CAAI,IAAJ,gBAAI,MAAJ,SA4CkB,GACVA,KAAKgO,KAAK,KAAa,kBAAmB,IAAI,KAAgB,MA7CtE,CAAI,IAAJ,oBAAI,MAAJ,SAgDsB,GACd,KAAK,KAAK,KAAa,sBAAuB,IAAI,KAAoB,MAjD9E,CAAI,IAAJ,eAAI,MAAJ,SAoDiB,GACT,KAAK,KAAK,KAAa,iBAAkB,IAAI,KAAe,MArDpE,CAAI,IAAJ,kBAAI,MAAJ,SAwDoB,GACZ,KAAK,KAAK,KAAa,oBAAqB,IAAI,KAAkB,MAzD1E,CAAI,IAAJ,WAAI,MAAJ,SA4DqB,EAAsB,GAAY,MAC/C,KAAK,KAAK,GACL,KAAK,QAAQ,IAAI,IAClB,KAAK,QAAQ,IAAI,EAAO,IAAI,OAEhC,eAAK,QAAQ,IAAI,UAAjB,SAAyB,KAAK,KAAK,KAAK,UAjEhD,CAAI,IAAJ,aAAI,MAAJ,SAoEe,GACP,KAAK,SAAS,KAAa,OAAQ,KArE3C,CAAI,IAAJ,kBAAI,MAAJ,SAwEoB,GACZ,KAAK,SAAS,KAAa,YAAa,KAzEhD,CAAI,IAAJ,iBAAI,MAAJ,SA4EmB,GACX,KAAK,SAAS,KAAa,WAAY,KA7E/C,CAAI,IAAJ,iBAAI,MAAJ,SAgFmB,EAA6B,GACxC,IAAM,EAAa,IAAI,KAAqB,GAC5C,EAAW,UAAU,KAAK,IAAI,KAAkB,IAChD,KAAK,KAAK,KAAa,WAAY,KAnF3C,CAAI,IAAJ,OAAI,MAAJ,SAsFS,GAAyD,2BAAhC,EAAgC,iCAAhC,EAAgC,kBAC1D,KAAK,KAAK,KAAV,YAAmB,KAAnB,CAA+B,GAA/B,OAA0C,SAvFlD,KmB8Ca,GAAb,YAAE,qBAAF,iBACM,SAAF,EAAsB,EAA6B,EAAkC,GAAkB,kCAC/F,EAAJ,cADkB,UAA6B,UAAkC,aAIzE,EAAJ,UAAyB,IAAI,GAJkE,EADzG,uBAAE,IAAJ,kBAAI,MAAJ,WAQQ,OAAO,KAAK,UAAU,aAR9B,CAAI,IAAJ,uBAAI,MAAJ,SAWyB,GACjB,IAAM,EAAO,EAAK,UAAU,UACtB,EAAS,KAAK,QAAQ,WAAW,KAAK,QAAQ,mBAAmB,IAAI,IAE3E,GAAI,aAAkB,IAAqB,EAAO,QAAU,KAAK,QAAQ,YACrE,OAAQ,GACJ,IAAK,QAED,YADA,KAAK,UAAU,iBAAgB,GAEnC,IAAK,OAED,YADA,KAAK,UAAU,iBAAgB,GAEnC,IAAK,KAED,YADA,KAAK,UAAU,cAAc,KAAK,IAK9C,GAAI,aAAkB,IAAkB,aAAkB,GAA1D,CACI,IAAM,EAAW,KAAK,SAAS,aAAa,GAC5C,KAAK,UAAU,KAAK,KAAa,aAAc,OAFnD,CAMA,KAAI,aAAkB,IAMtB,MAAM,MAAK,0CAAoC,IAL3C,IAAM,EAAsB,KAAK,SAAS,cAAc,GACxD,KAAK,UAAU,KAAK,KAAa,YAAa,MArC1D,CAAI,IAAJ,4BAAI,MAAJ,SA4C8B,GAChB,MAAS,KAAK,QAAQ,mBAAmB,IAAI,GAC7C,QAAS,IAAX,EACA,MAAM,IAAI,MAAJ,8CAEJ,EAAD,YAAY,OAAO,MACpB,aAAkB,GAClB,KAAK,WAAW,GAId,EAAD,UAAU,OAAO,QAvD9B,CAAI,IAAJ,iBAAI,MAAJ,SA0DmB,GACX,OAAQ,EAAK,UAAU,WACnB,IAAK,SACD,KAAK,UAAU,KAAK,KAAa,eACjC,MACJ,IAAK,YACD,KAAK,UAAU,KAAK,KAAa,qBAhEjD,CAAI,IAAJ,oBAAI,MAAJ,SAqEsB,GACR,OAAE,EAAK,UAAU,WACnB,IAAK,SACDhO,KAAKyhB,UAAUzT,KAAK,KAAa,eACjC,MACJ,IAAK,YACDhO,KAAKyhB,UAAUzT,KAAK,KAAa,qBA3EjD,CAAI,IAAJ,yBAAI,MAAJ,SAgF2B,GAA2B,WACxC,EAAD,gBAAgB,SAAQ,SAAC,GAAD,OAAe,EAAU,OAAO,MACvD,EAAD,gBAAgB,SAAQ,SAAC,GAAD,OAAe,EAAU,OAAO,MAC7D,EAAK,gBAAgB,SAAQ,SAAC,GAAD,OAAe,EAAK,kBAAkB,QAnF3E,CAAI,IAAJ,mBAAI,MAAJ,SAsFqB,GACP,MAAO,EAAU,WACjB,EAAiB,EAAU,WAAW,OAC5C,GAAI,EAAU,QAAU,KAAK,QAAQ,YACjC,OAAO,EAEX,OAAQ,GACJ,IAAK,YAED,OADA,KAAK,UAAU,eAAe,KAAmB,UAAW,IACrD,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,OAED,OADA,KAAK,UAAU,eAAe,KAAmB,KAAM,IAChD,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,YAED,OADA,KAAK,UAAU,eAAe,KAAmB,UAAW,IACrD,EACX,IAAK,QAED,OADA,KAAK,UAAU,eAAe,KAAmB,MAAO,IACjD,EACX,IAAK,WAED,OADA,KAAK,UAAU,eAAe,KAAmB,SAAU,IACpD,EACX,IAAK,QAED,OADA,KAAK,UAAU,eAAe,KAAmB,MAAO,IACjD,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,OAED,OADA,KAAK,UAAU,eAAe,KAAmB,KAAM,IAChD,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,MAED,OADAhO,KAAKyhB,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,MAED,OADA,KAAK,UAAU,eAAe,KAAmB,IAAK,IAC/C,EACX,IAAK,YAED,OADA,KAAK,UAAU,eAAe,KAAmB,YAAa,IACvD,EACX,IAAK,UAED,OADA,KAAK,UAAU,eAAe,KAAmB,UAAW,IACrD,EACX,IAAK,OAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,OAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EACX,IAAK,SAED,OADA,KAAK,UAAU,eAAe,KAAmB,OAAQ,IAClD,EAEf,OAAO,IAtKf,CAAI,IAAJ,aAAI,MAAJ,SAyKe,GACH,KAAK,iBAAiB,IAG1B,KAAK,UAAU,KAAK,KAAa,cAAe,KAAK,SAAS,cAAc,MA7KpF,CAAI,IAAJ,qBAAI,MAAJ,SAgLuB,GAAuB,WACtC,EAAK,YAAY,SAAQ,SAAC,GACtB,EAAM,OAAO,MAEjBzhB,KAAK,WAAW,KAAK,QAAQ,WAAW,KAAK,QAAQ,aAAa,IAAI,OApL9E,CAAI,IAAJ,kBAAI,MAAJ,SAuLoB,GACZ,EAAK,gBAAgB,OAAO,MAC5B,EAAK,gBAAgB,OAAO,MAC5B,KAAK,UAAU,KAAK,KAAa,iBA1LzC,CAAI,IAAJ,oBAAI,MAAJ,SA6LsB,GAAsB,WACpC,EAAK,eAAe,SAAQ,SAAC,GACzB,IAAM,EAAS,EAAK,QAAQ,WAAW,EAAK,QAAQ,iBAAiB,IAAI,IACnE,EAAW,EAAK,SAAS,aAAa,GAC5C,EAAK,UAAU,KAAK,KAAa,aAAc,GAC/C,EAAS,gBAAgB,gBAAgB,OAAO,GAChD,EAAK,UAAU,KAAK,KAAa,oBAnM7C,CAAI,IAAJ,WAAI,MAAJ,SAuMa,GAAa,WACZ,EAAiB,EAAK,gBACtB,EAAa,KAAK,QAAQ,mBAAmB,IAAI,GAGjD,GAFA,EAAD,UAAU,SAAQ,SAAC,GAAD,OAAS,EAAI,OAAO,MACrC,EAAS,OAAO,MAClB,aAAsB,IAAkB,aAAsB,GAA0B,CAChF,IAAF,EAAO,EAAW,KAChB,GAAJ,aAAgB,GAEhB,YADA,KAAK,UAAU,KAAK,KAAa,IAAK,KAAK,SAAS,cAAc,IAGtE,GAAI,aAAgB,GAEhB,YADA,KAAK,UAAU,KAAK,KAAa,IAAK,KAAK,SAAS,sBAAsB,IAIlF,MAAM,IAAI,MAAJ,gCAvNd,CAAI,IAAJ,eAAI,MAAJ,SA0NiB,GACT,EAAK,UAAU,OAAO,MACtB,EAAK,QAAQ,OAAO,MACpBA,KAAKyhB,UAAU,KAAK,KAAa,WA7NzC,CAAI,IAAJ,kBAAI,MAAJ,SAgOoB,GACZ,EAAK,UAAU,OAAO,MACtBzhB,KAAKyhB,UAAU,KAAK,KAAa,cAlOzC,CAAI,IAAJ,YAAI,MAAJ,SAqOc,GAAc,WACpB,EAAK,UAAU,SAAQ,SAAC,GAAD,OAAS,EAAI,OAAO,MAC3C,IAAM,EAAO,EAAK,gBACL,IAAT,GAAsB,aAAgB,KACtC,KAAK,UAAU,KAAK,KAAa,UAEjC,OAAJ,QAAI,IAAJ,KAAM,OAAO,MACb,IAAM,EAAU,KAAK,SAAS,YAAY,KAAK,QAAQ,WAAW,KAAK,QAAQ,oBAAoB,IAAI,KACvG,KAAK,UAAU,KAAK,KAAa,KAAM,KA7O/C,CAAI,IAAJ,eAAI,MAAJ,SAgPiB,GAAiB,WAC1B,EAAK,aAAa,SAAQ,SAAC,GAAD,OAAS,EAAI,OAAO,MAC9C,IAAM,EAAO,EAAK,gBACL,IAAT,GAAsB,aAAgB,KACtC,KAAK,UAAU,KAAK,KAAa,UAEjC,OAAJ,QAAI,IAAJ,KAAM,OAAO,MACb,IAAM,EAAU,KAAK,SAAS,YAAY,KAAK,QAAQ,WAAW,KAAK,QAAQ,oBAAoB,IAAI,KACvG,KAAK,UAAU,KAAK,KAAa,QAAS,KAxPlD,CAAI,IAAJ,cAAI,MAAJ,SA2PgB,GACRrC,EAAK,YAAY,OAAO,MACxB,KAAK,UAAU,KAAK,KAAa,UA7PzC,CAAI,IAAJ,YAAI,MAAJ,SAgQc,GACN,EAAK,UAAU,OAAO,MACtB,EAAK,QAAQ,OAAO,MACpB,KAAK,UAAU,KAAK,KAAa,QAnQzC,CAAI,IAAJ,aAAI,MAAJ,SAsQe,GACP,IAAM,EAAa,KAAK,UAAU,cAC5B,EAAW,KAAK,UAAU,cAChC,KAAK,UAAU,SAAS,GACxB,EAAK,gBAAgB,OAAO,MAC5B,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,WAAW,GAC1B,KAAK,UAAU,SAAS,KA7QhC,CAAI,IAAJ,cAAI,MAAJ,SAgRgB,GAAgB,MACxB,YAAK,uBAAL,SAAsB,OAAO,MAC7B,KAAK,UAAU,KAAK,KAAa,UAlRzC,CAAI,IAAJ,UAAI,MAAJ,SAqRYA,GAAY,IAuBkB,EAvBlB,OACV,EAAa,KAAK,UAAU,cAC5B,EAAe,EAAK,aAAa,KAAI,kBAAM,EAAK,UAAU,iBAC1D,EAAY,KAAK,UAAU,eACjC,EAAK,gBAAgB,OAAO,MAExB,EAAK,aAAa,OAAS,IAC3B,KAAK,UAAU,gBAAgB,EAAa,IAC5C,EAAK,UAAU,OAAO,MACtB,EAAK,aAAa,SAAQ,SAAC,EAAQ,GAC/B,EAAK,UAAU,WAAW,GAC1B,EAAK,UAAU,SAAS,EAAa,IACrC,EAAO,gBAAgB,OAAO,GAC9B,EAAK,UAAU,gBACX,EAAI,EAAI,EAAK,aAAa,OACpB,EAAa,EAAI,QACE,IAAnB,EAAK,UACL,EACA,GAEV,EAAO,UAAU,OAAO,YAGT,IAAnB,EAAK,aACL,KAAK,UAAU,gBAAgB,GAC/B,EAAK,UAAU,OAAO,MACtB,KAAK,UAAU,WAAW,GAC1B,KAAK,UAAU,SAAS,GACxB,YAAK,iBAAL,SAAgB,OAAO,OAEM,IAA7B,EAAK,aAAa,aAAmC,IAAnB,EAAK,YACvC,KAAK,UAAU,gBAAgB,GAC/B,EAAK,UAAU,OAAO,OAE1B,KAAK,UAAU,SAAS,KAvThC,CAAI,IAAJ,aAAI,MAAJ,SA0Te,GACD,MAAiB,KAAK,UAAU,cAChC,EAAW,KAAK,UAAU,cAChC,KAAK,UAAU,SAAS,GAClB,EAAD,iBAAiB,OAAO,MACvB,KAAD,UAAU,gBAAgB,GAC/B,EAAK,UAAU,OAAO,MAChB,KAAD,UAAU,WAAW,GACpB,KAAD,UAAU,SAAS,KAlUhC,CAAI,IAAJ,cAAI,MAAJ,SAqUgB,GACR,IAAM,EAAc,KAAK,UAAU,cAC7B,EAAY,KAAK,UAAU,cACjC,KAAK,UAAU,SAAS,GACxB,EAAK,UAAU,OAAO,MACtB,EAAK,iBAAiB,OAAO,MAC7B,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,WAAW,GAC1B,KAAK,UAAU,SAAS,KA7UhC,CAAI,IAAJ,WAAI,MAAJ,SAgVa,GACL,IAAM,EAAiB,KAAK,UAAU,cAChC,EAAS,KAAK,UAAU,cACxB,EAAa,EAAK,gBAClB,EAAK,OAAO,MAClB,EAAK,gBAAgB,OAAO,MAC5B,KAAK,UAAU,KAAK,KAAa,eACjC,KAAK,UAAU,SAAS,GACxB,EAAW,OAAO,MAClBA,EAAK,QAAQ,OAAO,MACpB,IAAM,EAAY,EAAK,QACvB,QAAkB,IAAd,EAAyB,CACzB,IAAM,EAAY,KAAK,UAAU,cAC3B,EAAO,KAAK,UAAU,cACtB,EAAY,EAAU,gBAC5B,EAAU,OAAO,MACjB,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,KAAK,KAAa,SACjC,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,KAAK,KAAa,WACjC,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,WAAW,GAC1B,KAAK,UAAU,SAAS,GACxB,KAAK,UAAU,KAAK,KAAa,cACjC,KAAK,UAAU,gBAAgB,GAC/B,KAAK,UAAU,SAAS,GACxB,EAAK,gBAAgB,OAAO,MAC5B,EAAW,OAAO,MAClB,EAAU,OAAO,MACjB,KAAK,UAAU,eAAe,KAAmB,IAAK,QAEtD,KAAK,UAAU,KAAK,KAAa,WACjC,KAAK,UAAU,gBAAgB,GAC/B,EAAK,gBAAgB,OAAO,MAC5B,EAAW,OAAO,MAClB,KAAK,UAAU,eAAe,KAAmB,IAAK,GAEpD,KAAD,UAAU,WAAW,GACpB,KAAD,UAAU,SAAS,KAtXhC,CAAI,IAAJ,eAAI,MAAJ,SAyXiB,GAAiB,WAC1B,QAAQ,KAAK,yEACP,MAAiB,KAAK,UAAU,cAChC,EAAS,KAAK,UAAU,cAC9B,KAAK,UAAU,SAAS,GACxB,EAAK,iBAAiB,SAAQ,SAAC,GAAD,OAAgB,EAAW,OAAO,MAChE,EAAK,QAAQ,OAAO,MACpB,KAAK,UAAU,eAAe,KAAmB,uBAAwB,EAAK,iBAAiB,QAC/F,KAAK,UAAU,gBAAgB,GAC/B,EAAK,UAAU,OAAO,MAChB,KAAD,UAAU,WAAW,GAC1B,KAAK,UAAU,SAAS,KApYhC,CAAI,IAAJ,sBAAI,MAAJ,SAuYwB,GAChB,EAAK,gBAAgB,OAAO,QAxYpC,CAAI,IAAJ,uBAAI,MAAJ,SA4YyB,GACjB,EAAK,gBAAgB,OAAO,QA7YpC,CAAI,IAAJ,wBAAI,MAAJ,SAgZ0B,GAGlB,OAFA,EAAK,UAAU,OAAO,MACtB,EAAK,WAAW,OAAO,MACf,EAAK,SACT,KAAK,GAAgB,MACjB,KAAK,UAAU,KAAK,KAAa,OACjC,MACJ,KAAK,GAAgB,KACjB,KAAK,UAAU,KAAK,KAAa,MACjC,MACJ,KAAK,GAAgB,UACjB,KAAK,UAAU,KAAK,KAAa,WACjC,MACJ,KAAK,GAAgB,KACjB,KAAK,UAAU,KAAK,KAAa,SACjC,MACJ,KAAK,GAAgB,UACjB,KAAK,UAAU,KAAK,KAAa,cACjC,MACJ,KAAK,GAAgB,SACjB,KAAK,UAAU,KAAK,KAAa,aApajD,CAAI,IAAJ,iBAAI,MAAJ,SA6amB,GACX,EAAK,gBAAgB,OAAO,MAC5BA,EAAK,UAAU,OAAO,MACtBpf,KAAKyhB,UAAUzT,KAAK,KAAa,UAhbzC,CAAI,IAAJ,qBAAI,MAAJ,SAmbuB,GAEf,OADA,EAAK,UAAU,OAAO,MACd,EAAK,SACT,KAAK,GAAe,MAChB,KAAK,UAAU,KAAK,KAAa,WAvbjD,CAAI,IAAJ,iBAAI,MAAJ,SA2bmB,GAAmB,WAC9B,EAAK,UAAU,OAAO,MACtB,EAAK,WAAW,SAAQ,SAAC,GAAD,OAAW,EAAM,OAAO,QA7bxD,CAAI,IAAJ,iBAAI,MAAJ,SAgcmB,GAEX,OADA,EAAK,WAAW,OAAO,MACf,EAAK,SACT,KAAK,GAAkB,MACnB,KAAK,UAAU,KAAK,KAAa,UACjC,MACJ,KAAK,GAAkB,GACnB,KAAK,UAAU,KAAK,KAAa,SACjC,MACJ,KAAK,GAAkB,KACnB,KAAK,UAAU,KAAK,KAAa,QA1cjD,CAAI,IAAJ,mBAAI,MAAJ,SA+cqB,GAAqB,WAClC,EAAK,UAAU,OAAO,MACtB,EAAK,WAAW,SAAQ,SAAC,GAAD,OAAW,EAAM,OAAO,QAjdxD,CAAI,IAAJ,mBAAI,MAAJ,SAodqB,GAEb,OADA,EAAK,WAAW,OAAO,MACf,EAAK,SACT,KAAK,GAAoB,QACrB,KAAK,UAAU,KAAK,KAAa,KACjC,MACJ,KAAK,GAAoB,IACzB,KAAK,GAAoB,QACrB,KAAK,UAAU,KAAK,KAAa,QACjC,MACJ,KAAK,GAAoB,MACrB,KAAK,UAAU,KAAK,KAAa,UACjC,MACJ,KAAK,GAAoB,QACrB,KAAK,UAAU,KAAK,KAAa,WAlejD,CAAI,IAAJ,mBAAI,MAAJ,SAueqB,GAEb,OADAoR,EAAK,YAAY,OAAO,MAChB,EAAK,aACT,KAAK,GAAa,IACd,KAAK,UAAU,KAAK,KAAa,QA3ejD,CAAI,IAAJ,wBAAI,MAAJ,SA+e0B,GAClB,EAAK,gBAAgB,OAAO,QAhfpC,CAAI,IAAJ,qBAAI,MAAJ,SAmfuB,GACf,KAAK,UAAU,gBAAgB,EAAK,cApf5C,CAAI,IAAJ,kBAAI,MAAJ,SAufoB,GACZ,KAAK,UAAU,cAAc,EAAK,cAxf1C,CAAI,IAAJ,yBAAI,MAAJ,SA2f2B,GACnB,KAAK,UAAU,kBAAkB,EAAK,kBA5f9C,CAAI,IAAJ,YAAI,MAAJ,SA+fc,GACN,KAAK,UAAU,aAAa,EAAK,aAhgBzC,CAAI,IAAJ,mBAAI,MAAJ,SAmgBqB,GACb,IAAM,EAAU,KAAK,QAAQ,WAAW,KAAK,QAAQ,gBAAgB,IAAI,EAAK,eAIxE,EAAa,EAAK,qBACL,IAAf,EACA,KAAK,UAAU,KAAK,KAAa,UAEjC,EAAW,OAAO,MAEtB,KAAK,UAAU,KAAK,KAAa,YAAa,KAAK,SAAS,YAAY,MA9gBhF,CAAI,IAAJ,iBAAI,MAAJ,SAkhBmB,GACX,IAAM,EAAa,EAAK,qBACL,IAAf,EACA,KAAK,UAAU,KAAK,KAAa,UAEjC,EAAW,OAAO,MAEtB,KAAK,UAAU,KAAK,KAAa,aAzhBzC,CAAI,IAAJ,kBAAI,MAAJ,SA4hBoB,GACZ,EAAK,gBAAgB,OAAO,MAC5B,KAAK,UAAU,KAAK,KAAa,cA9hBzC,CAAI,IAAJ,oBAAI,MAAJ,SAiiBsB,GAAsB,WACpC,EAAK,eAAe,SAAQ,SAAC,GAAD,OAAS,EAAI,OAAO,MAChD,KAAK,WAAW,KAAK,QAAQ,WAAW,KAAK,QAAQ,aAAa,IAAI,OAniB9E,CAAI,IAAJ,iBAAI,MAAJ,SAsiBmB,GAAmB,QACxB,EAAS,KAAK,QAAQ,WAAW,KAAK,QAAQ,kBAAkB,IAAI,IACpE,EAAU,IAAI,EAAqB,KAAK,QAAS,EAAQ,KAAK,UACpE,YAAK,uBAAL,SAAsB,OAAO,IAE7B,EADmB,KAAK,SAAS,cAAc,GACpC,MAAM,cAAa,KAA9B,UAAsC,EAAQ,wBA3iBtD,GAA0C,IA+iB7B,GAAb,kDACI,WAAoB,EAAsC,EAA4B,GAAoB,kCACtG,gBADgB,SAAsC,aAA4B,YAAoB,EAD9G,gEAKwB,GAAwB,UAClC,EAAa,KAAK,SAAS,mBAAmB,KAAK,QACrD,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACvE,EAAK,kBACA,QAAO,SAAC,GAAD,OAAiB,aAAuB,IAAoB,aAAuB,MAC1F,SAAQ,SAAC,GAAD,OAAiB,EAAY,OAAO,OACjD,IAAW,aAAa,KAAK,cAAa,KAA1C,UAAkD,EAAQ,oBAC1D,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACnE,YAAK,uBAAL,SAAsB,OAAO,IAC7B,IAAW,MAAM,cAAa,KAA9B,UAAsC,EAAQ,wBAdtD,GAAoD,IAiBvC,GAAb,kDACI,WAAoB,EAAiC,EAA4B,GAAoB,kCACjG,gBADgB,SAAiC,aAA4B,YAAoB,EADzG,+DAKuB,GAAuB,yBAChC,EAAa,KAAK,SAAS,cAAc,KAAK,QAChD,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACvE,EAAK,kBACA,QAAO,SAAC,GAAD,OAAiB,aAAuB,IAAoB,aAAuB,MAC1F,SAAQ,SAAC,GAAD,OAAiB,EAAY,OAAO,OACjD,IAAW,aAAa,KAAK,cAAa,KAA1C,UAAkD,EAAQ,oBAC1D,EAAK,qBAAqB,SAAQ,SAAC,GAC/B,IAAM,EAAa,EAAK,QAAQ,WAAW,EAAK,QAAQ,uBAAuB,IAAI,IAC7E,EAAc,IAAI,GAA+B,EAAY,EAAK,SAAU,EAAK,SACvF,EAAY,OAAO,MAEvB,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACnE,YAAK,uBAAL,SAAsB,OAAO,IAC7B,IAAW,MAAM,cAAa,KAA9B,UAAsC,EAAQ,oBAC9C,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACnE,YAAK,0BAAL,SAAyB,OAAO,IAChC,IAAW,SAAS,cAAa,KAAjC,UAAyC,EAAQ,oBACjD,EAAU,IAAI,GAAqB,KAAK,QAAS,KAAK,OAAQ,KAAK,UACnE,YAAK,yBAAL,SAAwB,OAAO,IAC/B,IAAW,QAAQ,cAAa,KAAhC,UAAwC,EAAQ,wBAzBxD,GAA+C,ICxmBlC,GAAb,WAAE,SAAF,IAAI,oBACiB,sBAAmB,IAAI,IACvB,sBAAmB,IAAI,IACvB,2BAAwB,IAAI,IAC5B,sBAAmB,IAAI,IACvB,qBAAkB,IAAI,IACtB,oBAAiB,IAAI,IAErB,sBAAmB,IAAI,KAAoB,+BAR9D,uBAAE,IAAJ,qBAAI,MAAJ,WAWQ,OAAO,KAAK,mBAXpB,CAAI,IAAJ,gBAAI,MAAJ,SAckB,EAAyB,GACnC,KAAK,iBAAiB,IAAI,EAAQ,KAf1C,CAAI,IAAJ,gBAAI,MAAJ,SAkBkB,GACV,IAAM,EAAS,KAAK,iBAAiB,IAAI,GACzC,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,yCAEpB,OAAO,IAvBf,CAAI,IAAJ,gBAAI,MAAJ,SA0BkB,EAAyB,GACnC,KAAK,iBAAiB,IAAI,EAAQ,KA3B1C,CAAI,IAAJ,gBAAI,MAAJ,SA8BkB,GACV,IAAMjd,EAASnC,KAAK,iBAAiB,IAAI,GACzC,QAAeyE,IAAXtC,EACA,MAAM,IAAIiD,MAAM,yCAEpB,OAAOjD,IAnCf,CAAI,IAAJ,qBAAI,MAAJ,SAsCuB,EAA8B,GAC7C,KAAK,sBAAsB,IAAI,EAAQ,KAvC/C,CAAI,IAAJ,qBAAI,MAAJ,SA0CuB,GACf,IAAM,EAAS,KAAK,sBAAsB,IAAI,GAC9C,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,yCAEpB,OAAO,IA/Cf,CAAI,IAAJ,gBAAI,MAAJ,SAkDkB,EAAyB,GACnC,KAAK,iBAAiB,IAAI,EAAQ,KAnD1C,CAAI,IAAJ,gBAAI,MAAJ,SAsDkB,GACV,IAAM,EAAS,KAAK,iBAAiB,IAAI,GACnC,QAAS,IAAX,EACA,MAAM,IAAI,MAAM,0CAEpB,OAAO,IA3Df,CAAI,IAAJ,eAAI,MAAJ,SA8DiB,EAA4B,GACrC,KAAK,gBAAgB,IAAI,EAAQ,KA/DzC,CAAI,IAAJ,eAAI,MAAJ,SAkEiB,GACT,IAAM,EAAS,KAAK,gBAAgB,IAAI,GACxC,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,yCAEpB,OAAO,IAvEf,CAAI,IAAJ,cAAI,MAAJ,SA0EgB,EAAuB,GAC/B,KAAK,eAAe,IAAI,EAAQ,KA3ExC,CAAI,IAAJ,cAAI,MAAJ,SA8EgB,GACR,IAAM,EAAS,KAAK,eAAe,IAAI,GACvC,QAAe,IAAX,EACA,MAAM,IAAI,MAAM,wCAEpB,OAAO,IAnFf,CAAI,IAAJ,wBAAI,MAAJ,SAsF0B,GAClB,OAAQ,EAAO,YACX,IAAK,UACD,OAAO,IAAI,KACf,IAAK,OACD,OAAO,IAAI,KACf,IAAK,UACD,OAAO,IAAI,KACf,IAAK,YACD,OAAO,IAAI,KACf,IAAK,OACD,OAAO,IAAI,KACf,QACI,MAAM,IAAI,MAAM,mDAnGhC,KCVa,GAAb,WAAE,SAAF,IAAI,oBAAF,uBAAE,IAAJ,WAAI,MAAJ,SACa,GAAoB,WACnB,EAAK,IAAI,KACT,EAAW,KAAK,iBAAiB,GAEvC,OADM,EAAE,WAAW,SAAQ,SAAC,GAAD,OAAe,EAAK,kBAAkB,EAAW,EAAS,EAAI,MAClF,IALf,CAAI,IAAJ,mBAAI,MAAJ,SAQ6B,GAAoB,WACnC,EAAW,IAAI,GA0ErB,OAzEA,EAAS,cAAc,EAAQ,iBAAkB,IAAI,KAAoB,EAAQ,iBAAiB,aAClG,EAAS,cACL,EAAQ,yBACR,IAAI,KAAoB,EAAQ,yBAAyB,aAE7D,EAAS,YAAY,EAAQ,cAAe,IAAI,KAAkB,EAAQ,cAAc,aACxF,EAAS,YAAY,EAAQ,WAAY,IAAI,KAAkB,EAAQ,WAAW,aAClFuf,EAAQ,sBAAsB,SAAQ,SAAC,GAAa,MAC1C,EAAa,IAAI,KAAoB,EAAU,gBAAY,IACjE,IAAW,YAAW,KAAtB,UACO,EAAU,WAAW,KAAI,SAAC,GACzB,OAAO,IAAI,KACP,EAAK,WACL,EAAK,0BAA0B,EAAM,IACrC,QAIZC,EAAS,cAAc,EAAW,MAEtCD,EAAQ,WAAW,SAAQ,SAAC,GAAD,OACvB,EAAS,cAAc,EAAQ,IAAI,KAAoB,EAAO,gBAElE,EAAQ,WAAW,SAAQ,SAAC,GAAD,OACvBC,EAAS,cAAc,EAAW,IAAI,KAAoB,EAAU,gBAExED,EAAQ,SAAS,SAAQ,SAAC,GACtB,IAAM,EAAU,IAAI,KAAkB,EAAO,YAC7C,EAAO,WAAW,SAAQ,SAAC,GACvB,EAAQ,KAAK,KAAK,EAAK,0BAA0B,EAAO,OAE5D,EAAS,YAAY,EAAQ,MAEjC,EAAQ,WAAW,SAAQ,SAAC,GAAD,OAAe,EAAK,cAAc,EAAW,EAAU,MAClF,EAAQ,iBAAiB,SAAQ,SAAC,GAC9B,IAAM,EAA2B,IAAI,KACjC,EAAS,cAAc,EAAe,kBAE1C,EAAS,mBAAmB,EAAgB,MAEhD,EAAQ,UAAU,SAAQ,SAAC,GACvB,IAAM,EAAiB,EAAK,0BAA0B,EAAS,KAAM,GAC/D,EAAgB,IAAI,KAAmB,EAAS,WAAY,GAAgB,GAC9E,aAA0B,MAC1B,EAAc,WAAW,KAAK,IAAI,MAEtC,EAAS,aAAa,EAAU,MAEpC,EAAQ,oBAAoB,SAAQ,SAAC,GAAY,MACvC,EAAiB,EAAK,0BAA0B,EAAS,KAAM,GAC/D,EAAgB,IAAI,KAAmB,EAAS,WAAY,GAAgB,IAClF,IAAc,YAAW,KAAzB,UACO,EAAS,WAAW,KAAI,SAAC,GAAD,OAAU,EAAK,0BAA0B,EAAM,QAE9E,EAAS,aAAa,EAAU,MAEpC,EAAQ,WAAW,SAAQ,SAAC,GAAa,MAC/B,EAAa,EAAU,WACvB,EACF,IAAe,EAAQ,cAAW,EAAY,EAAK,0BAA0B,EAAY,GACvF,EAAsB,IAAI,KAAoB,EAAU,WAAY,IAC1E,IAAoB,YAAW,KAA9B,MAAD,IACO,EAAU,WAAW,KAAI,SAAC,GACzB,OAAO,IAAI,KACP,EAAK,WACL,EAAK,0BAA0B,EAAM,IACrC,QAIZ,EAAS,cAAc,EAAW,MAEtC,EAAQ,WAAW,SAAQ,SAAC,GAAD,OAAe,EAAK,cAAc,EAAW,EAAU,MAC3E,IAnFf,CAAI,IAAJ,4BAAI,MAAJ,SAsFsC,EAAoB,GAClD,GAAI,aAAkB,GAClB,OAAO,EAAS,sBAAsB,GAE1C,GAAI,aAAkB,GAClB,OAAO,EAAS,cAAc,GAElC,GAAI,aAAkB,GAClB,OAAO,EAAS,cAAc,GAElC,MAAM,IAAI,MAAM,kCAhGxB,CAAI,IAAJ,gBAAI,MAAJ,SAmG0B,EAAkC,EAAoB,GAExE,EAAS,cAAc,KArG/B,CAAI,IAAJ,gBAAI,MAAJ,SAyG0B,EAA4B,EAAoB,GAClE,IAAM,EAAa,EAAS,cAAc,GAC1C,EAAU,YAAY,QAAQ,SAAQ,SAAC,GAAD,OAClC,EAAW,OAAO,KAAK,EAAS,cAAc,EAAqB,qBAEvE,EAAU,YAAY,SAAS,SAAQ,SAAC,GAAD,OACnC,EAAW,SAAS,KAAK,EAAS,cAAc,EAAqB,qBAEzE,EACK,mBAAmB,GACnB,SAAQ,SAAC,GAAD,OAAoB,EAAW,gBAAgB,KAAK,EAAS,mBAAmB,OAC7F,EACK,aAAa,GACb,SAAQ,SAAC,GAAD,OAAc,EAAW,aAAa,UAAU,KAAK,EAAS,aAAa,OACxF,EACK,uBAAuB,GACvB,SAAQ,SAAC,GAAD,OAAc,EAAW,aAAa,UAAU,KAAK,EAAS,aAAa,OACxF,EACK,cAAc,GACd,SAAQ,SAAC,GAAD,OAAe,EAAW,aAAa,WAAW,KAAK,EAAS,cAAc,SA5HnG,CAAI,IAAJ,oBAAI,MAAJ,SA+H8B,EAA4B,EAAsB,EAAQ,GAAkB,MAC5F,EAAO,EAAQ,kBAAkB,IAAI,GAC3C,QAAa,IAAT,KAAwB,aAAgB,IACxC,MAAM,IAAI,MAAJ,2CAA8C,EAAU,aAElE,YAAK,iBAAL,SAAgB,OAAO,IAAI,GAA0B,EAAW,EAAU,IAC1E,IAAM,EAAa,EAAS,cAAc,GAC1C,EAAG,WAAW,KAAK,GACf,EAAU,cACV,EAAG,YAAY,KAAK,OAxIhC,KCRa,GAAb,WAAE,SAAF,IAAI,oBAAF,uBAAE,IAAJ,UAAI,MAAJ,WAAM,IAAN,mCACkB,EAAa,GADvB,IAAR,cAAQ,OAAR,6DAEc,EAAuB,IAAI,GAC3B,EAAe,IAAI,GAAM,EAAW,EAAK,GACzC,EAAiB,IAAI,GAAO,EAAW,GACvC,EAAmB,EAAO,SAC5B,EAAU,YANtB,sBAOY,EAAU,MAAM,QAAQ,KAClB,IAAI,MAAM,wDAR5B,cAUc,EAAmB,IAAI,GACvB,EAAuB,EAAQ,MAAM,EAAK,GAC1C,EAAuB,IAAI,GAZzC,kBAae,EAAU,SAAS,IAblC,4CAAM,gBAAN,KAAQ,OAAR,oC,SCHME,GAAc/f,KAEhBggB,IAAY,EAUhB,SAASC,GAAQlE,GACbiE,GAAYjE,EACZgE,GAAIG,YAAY,CAAEC,OAAQ,GAAIC,QAASJ,KAG3C,SAASK,GAAUC,GACfN,IAAY,EACZD,GAAIG,YAAY,CAAEC,OAAO,SAAD,OAAWG,EAAX,YAA0BF,QAASJ,KAG/D,IAAMO,GAAS,ICzBf,WACM,SAAF,EACqB,EACA,GAAwC,oBADxC,WACA,qBAGb,cAAqB,IAAI,GACzB,aAAmB,IAAI,KAPjC,uBAAE,IAAJ,MAAI,MAAJ,kDASc,EAAa,GAT3B,8EAUQ,KAAK,QAAQ,aAAa,KAAK,KAC/B,KAAK,QAAQ,gBAAgB,KAAK,eAX1C,SAYyB,KAAK,SAAS,QAAQ,EAAK,GAZpD,cAYc,EAZd,gBAac,KAAK,QAAQ,QAAQ,GAbnC,0GAAI,IAAJ,OAAI,MAAJ,qHAiBQ,KAAK,QAAQ,QAjBrB,6GDyBe,CAlBf,WAAgD,IAAD,uBAA3BC,EAA2B,yBAA3BA,EAA2B,gBAC3CA,EAAKja,SAAQ,SAAC+Z,QACE1d,IAAR0d,GACAP,GAAIG,YAAY,CAAEC,OAAQG,EAAKF,QAASJ,SAelB1iB,KAAKyiB,IAAME,GAAQ3iB,KAAKyiB,KAE1DA,GAAIU,UAAJ,uCAAgB,WAAOzE,GAAP,SAAA/a,EAAA,yDACU,QAAlB+a,EAAMjC,KAAKrX,GADH,iCAGJud,IAAQ,GAHJ,SAIEM,GAAOvV,IAAIgR,EAAMjC,KAAK/J,IAAKgM,EAAMjC,KAAKjI,MAJxC,OAKJiO,GAAIG,YAAY,CAAEC,OAAQ,OAAQC,SAAS,IALvC,gDAOJC,GAAU,KAAI9O,SAPV,WAWU,SAAlByK,EAAMjC,KAAKrX,GAXH,4CAaE6d,GAAOzX,OAbT,2DAeJuX,GAAU,KAAI9O,SAfV,iEAAhB,sDAoBewO","file":"static/js/system.worker.b8d623e7.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","var IntegerDescriptorTag;\n(function (IntegerDescriptorTag) {\n    IntegerDescriptorTag[IntegerDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerDescriptorTag || (IntegerDescriptorTag = {}));\nexport class IntegerDescriptor {\n    constructor(initialValue = 0) {\n        this._integerDescriptorTag = IntegerDescriptorTag.Tag;\n        this.initialValue = Math.trunc(initialValue);\n    }\n}\nvar FloatDescriptorTag;\n(function (FloatDescriptorTag) {\n    FloatDescriptorTag[FloatDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatDescriptorTag || (FloatDescriptorTag = {}));\nexport class FloatDescriptor {\n    constructor(initialValue = 0) {\n        this._floatDescriptorTag = FloatDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\nvar TextDescriptorTag;\n(function (TextDescriptorTag) {\n    TextDescriptorTag[TextDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(TextDescriptorTag || (TextDescriptorTag = {}));\nexport class TextDescriptor {\n    constructor(initialValue = '') {\n        this._TextDescriptorTag = TextDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\nvar CharacterDescriptorTag;\n(function (CharacterDescriptorTag) {\n    CharacterDescriptorTag[CharacterDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(CharacterDescriptorTag || (CharacterDescriptorTag = {}));\nexport class CharacterDescriptor {\n    constructor(initialValue = '') {\n        this._characterDescriptorTag = CharacterDescriptorTag.Tag;\n        if (initialValue.length > 1) {\n            throw new Error('CharacterDescriptor initialValue lenght > 1');\n        }\n        this.initialValue = initialValue;\n    }\n}\nvar BooleanDescriptorTag;\n(function (BooleanDescriptorTag) {\n    BooleanDescriptorTag[BooleanDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(BooleanDescriptorTag || (BooleanDescriptorTag = {}));\nexport class BooleanDescriptor {\n    constructor(initialValue = false) {\n        this._booleanDescriptorTag = BooleanDescriptorTag.Tag;\n        this.initialValue = initialValue;\n    }\n}\n//# sourceMappingURL=builtin.js.map","export var ProtocolType;\n(function (ProtocolType) {\n    ProtocolType[ProtocolType[\"Once\"] = 0] = \"Once\";\n    ProtocolType[ProtocolType[\"Optional\"] = 1] = \"Optional\";\n    ProtocolType[ProtocolType[\"Repeating\"] = 2] = \"Repeating\";\n})(ProtocolType || (ProtocolType = {}));\n//# sourceMappingURL=enums.js.map","export class DeclarationDescriptor {\n    constructor() {\n        this.init = new CodeBlockDescriptor();\n        this.variables = new Array();\n        this.procedures = new Array();\n        this.components = new Array();\n    }\n}\nexport class ComponentDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.offers = new Array();\n        this.requires = new Array();\n        this.declarations = new DeclarationDescriptor();\n        this.implementations = new Array();\n        this.begin = new CodeBlockDescriptor();\n        this.activity = new CodeBlockDescriptor();\n        this.finally = new CodeBlockDescriptor();\n    }\n}\nexport class ProcedureDescriptor {\n    constructor(identifier, returnType) {\n        this.identifier = identifier;\n        this.returnType = returnType;\n        this.parameters = new Array();\n        this.declarations = new DeclarationDescriptor();\n        this.begin = new CodeBlockDescriptor();\n    }\n}\nexport class ImplementationDescriptor {\n    constructor(reference) {\n        this.reference = reference;\n        this.declarations = new DeclarationDescriptor();\n        this.begin = new CodeBlockDescriptor();\n    }\n}\nexport class VariableDescriptor {\n    constructor(identifier, type, mutable) {\n        this.identifier = identifier;\n        this.type = type;\n        this.mutable = mutable;\n        this.indexTypes = new Array();\n    }\n}\nexport class CodeBlockDescriptor {\n    constructor() {\n        this.instructions = new Array();\n    }\n}\nexport class InterfaceDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.protocols = new Array();\n    }\n}\nexport class ProtocolDescriptor {\n    constructor(type) {\n        this.type = type;\n        this.messages = new Array();\n    }\n}\nexport class MessageDescriptor {\n    constructor(identifier) {\n        this.identifier = identifier;\n        this.data = new Array();\n    }\n}\nexport class JumpDescriptor {\n    constructor(offset) {\n        this.offset = offset;\n    }\n}\nexport class SystemCallDescriptor {\n    constructor(systemCall, ...args) {\n        this.systemCall = systemCall;\n        this.arguments = new Array(...args);\n    }\n}\n//# sourceMappingURL=descriptor.js.map","export class Instruction {\n    constructor(code, ...args) {\n        this.code = code;\n        this.arguments = new Array(...args);\n    }\n}\n//# sourceMappingURL=instruction.js.map","export var OperatorCode;\n(function (OperatorCode) {\n    // math binary\n    OperatorCode[OperatorCode[\"Add\"] = 0] = \"Add\";\n    OperatorCode[OperatorCode[\"Subtract\"] = 1] = \"Subtract\";\n    OperatorCode[OperatorCode[\"Multiply\"] = 2] = \"Multiply\";\n    OperatorCode[OperatorCode[\"Divide\"] = 3] = \"Divide\";\n    OperatorCode[OperatorCode[\"Negate\"] = 4] = \"Negate\";\n    OperatorCode[OperatorCode[\"Modulo\"] = 5] = \"Modulo\";\n    // compare\n    OperatorCode[OperatorCode[\"Equal\"] = 6] = \"Equal\";\n    OperatorCode[OperatorCode[\"Less\"] = 7] = \"Less\";\n    OperatorCode[OperatorCode[\"LessEqual\"] = 8] = \"LessEqual\";\n    OperatorCode[OperatorCode[\"Greater\"] = 9] = \"Greater\";\n    OperatorCode[OperatorCode[\"GreaterEqual\"] = 10] = \"GreaterEqual\";\n    OperatorCode[OperatorCode[\"NotEqual\"] = 11] = \"NotEqual\";\n    // unary invert\n    OperatorCode[OperatorCode[\"Not\"] = 12] = \"Not\";\n    // logic binary ops\n    OperatorCode[OperatorCode[\"LogicOr\"] = 13] = \"LogicOr\";\n    OperatorCode[OperatorCode[\"LogicAnd\"] = 14] = \"LogicAnd\";\n    // new component\n    OperatorCode[OperatorCode[\"New\"] = 15] = \"New\";\n    OperatorCode[OperatorCode[\"Delete\"] = 16] = \"Delete\";\n    OperatorCode[OperatorCode[\"Send\"] = 17] = \"Send\";\n    OperatorCode[OperatorCode[\"Receive\"] = 18] = \"Receive\";\n    OperatorCode[OperatorCode[\"Connect\"] = 19] = \"Connect\";\n    OperatorCode[OperatorCode[\"Disconnect\"] = 20] = \"Disconnect\";\n    OperatorCode[OperatorCode[\"ReceiveTest\"] = 21] = \"ReceiveTest\";\n    OperatorCode[OperatorCode[\"InputTest\"] = 22] = \"InputTest\";\n    OperatorCode[OperatorCode[\"SystemCall\"] = 23] = \"SystemCall\";\n    OperatorCode[OperatorCode[\"ProcedureCall\"] = 24] = \"ProcedureCall\";\n    OperatorCode[OperatorCode[\"Return\"] = 25] = \"Return\";\n    // load constants\n    OperatorCode[OperatorCode[\"LoadConstantBoolean\"] = 26] = \"LoadConstantBoolean\";\n    OperatorCode[OperatorCode[\"LoadConstantText\"] = 27] = \"LoadConstantText\";\n    OperatorCode[OperatorCode[\"LoadConstantCharacter\"] = 28] = \"LoadConstantCharacter\";\n    OperatorCode[OperatorCode[\"LoadConstantFloat\"] = 29] = \"LoadConstantFloat\";\n    OperatorCode[OperatorCode[\"LoadConstantInteger\"] = 30] = \"LoadConstantInteger\";\n    // move components around\n    OperatorCode[OperatorCode[\"Move\"] = 31] = \"Move\";\n    // variables\n    OperatorCode[OperatorCode[\"StoreVariable\"] = 32] = \"StoreVariable\";\n    OperatorCode[OperatorCode[\"LoadVariable\"] = 33] = \"LoadVariable\";\n    OperatorCode[OperatorCode[\"LoadService\"] = 34] = \"LoadService\";\n    OperatorCode[OperatorCode[\"LoadThis\"] = 35] = \"LoadThis\";\n    // concurrency\n    OperatorCode[OperatorCode[\"Await\"] = 36] = \"Await\";\n    OperatorCode[OperatorCode[\"Passivate\"] = 37] = \"Passivate\";\n    OperatorCode[OperatorCode[\"AcquireShared\"] = 38] = \"AcquireShared\";\n    OperatorCode[OperatorCode[\"ReleaseShared\"] = 39] = \"ReleaseShared\";\n    OperatorCode[OperatorCode[\"AcquireExclusive\"] = 40] = \"AcquireExclusive\";\n    OperatorCode[OperatorCode[\"ReleaseExclusive\"] = 41] = \"ReleaseExclusive\";\n    OperatorCode[OperatorCode[\"Branch\"] = 42] = \"Branch\";\n    OperatorCode[OperatorCode[\"BranchTrue\"] = 43] = \"BranchTrue\";\n    OperatorCode[OperatorCode[\"BranchFalse\"] = 44] = \"BranchFalse\";\n    OperatorCode[OperatorCode[\"IsType\"] = 45] = \"IsType\";\n    OperatorCode[OperatorCode[\"ExistsTest\"] = 46] = \"ExistsTest\";\n})(OperatorCode || (OperatorCode = {}));\n//# sourceMappingURL=opcode.js.map","export var SystemCallOperator;\n(function (SystemCallOperator) {\n    SystemCallOperator[SystemCallOperator[\"Write\"] = 0] = \"Write\";\n    SystemCallOperator[SystemCallOperator[\"WriteLine\"] = 1] = \"WriteLine\";\n    SystemCallOperator[SystemCallOperator[\"WriteHex\"] = 2] = \"WriteHex\";\n    SystemCallOperator[SystemCallOperator[\"Assert\"] = 3] = \"Assert\";\n    SystemCallOperator[SystemCallOperator[\"Halt\"] = 4] = \"Halt\";\n    SystemCallOperator[SystemCallOperator[\"Inc\"] = 5] = \"Inc\";\n    SystemCallOperator[SystemCallOperator[\"Dec\"] = 6] = \"Dec\";\n    SystemCallOperator[SystemCallOperator[\"Passivate\"] = 7] = \"Passivate\";\n    SystemCallOperator[SystemCallOperator[\"Count\"] = 8] = \"Count\";\n    SystemCallOperator[SystemCallOperator[\"Length\"] = 9] = \"Length\";\n    SystemCallOperator[SystemCallOperator[\"Sqrt\"] = 10] = \"Sqrt\";\n    SystemCallOperator[SystemCallOperator[\"Sin\"] = 11] = \"Sin\";\n    SystemCallOperator[SystemCallOperator[\"Cos\"] = 12] = \"Cos\";\n    SystemCallOperator[SystemCallOperator[\"Tan\"] = 13] = \"Tan\";\n    SystemCallOperator[SystemCallOperator[\"ArcSin\"] = 14] = \"ArcSin\";\n    SystemCallOperator[SystemCallOperator[\"ArcCos\"] = 15] = \"ArcCos\";\n    SystemCallOperator[SystemCallOperator[\"ArcTan\"] = 16] = \"ArcTan\";\n    SystemCallOperator[SystemCallOperator[\"Random\"] = 17] = \"Random\";\n    SystemCallOperator[SystemCallOperator[\"Min\"] = 18] = \"Min\";\n    SystemCallOperator[SystemCallOperator[\"Max\"] = 19] = \"Max\";\n    SystemCallOperator[SystemCallOperator[\"ToCharacter\"] = 20] = \"ToCharacter\";\n    SystemCallOperator[SystemCallOperator[\"ToInteger\"] = 21] = \"ToInteger\";\n    SystemCallOperator[SystemCallOperator[\"ToReal\"] = 22] = \"ToReal\";\n    SystemCallOperator[SystemCallOperator[\"ToText\"] = 23] = \"ToText\";\n    SystemCallOperator[SystemCallOperator[\"LoadForEachDesignators\"] = 24] = \"LoadForEachDesignators\";\n})(SystemCallOperator || (SystemCallOperator = {}));\n//# sourceMappingURL=syscall.js.map","export class IL {\n    constructor() {\n        this.entryPoints = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n    }\n}\nexport * from './builtin';\nexport * from './descriptor';\nexport * from './enums';\nexport * from './instruction';\nexport * from './opcode';\nexport * from './syscall';\n//# sourceMappingURL=il.js.map","export var ActiveCode;\n(function (ActiveCode) {\n    ActiveCode[ActiveCode[\"Init\"] = 0] = \"Init\";\n    ActiveCode[ActiveCode[\"Begin\"] = 1] = \"Begin\";\n    ActiveCode[ActiveCode[\"Activity\"] = 2] = \"Activity\";\n    ActiveCode[ActiveCode[\"Finally\"] = 3] = \"Finally\";\n    ActiveCode[ActiveCode[\"Procedure\"] = 4] = \"Procedure\";\n})(ActiveCode || (ActiveCode = {}));\nvar ComponentPointerTag;\n(function (ComponentPointerTag) {\n    ComponentPointerTag[ComponentPointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ComponentPointerTag || (ComponentPointerTag = {}));\nexport class ComponentPointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._componentPointerTag = ComponentPointerTag.Tag;\n    }\n}\nvar ServicePointerTag;\n(function (ServicePointerTag) {\n    ServicePointerTag[ServicePointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ServicePointerTag || (ServicePointerTag = {}));\nexport class ServicePointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._servicePointerTag = ServicePointerTag.Tag;\n    }\n}\nvar ProcedurePointerTag;\n(function (ProcedurePointerTag) {\n    ProcedurePointerTag[ProcedurePointerTag[\"Tag\"] = 0] = \"Tag\";\n})(ProcedurePointerTag || (ProcedurePointerTag = {}));\nexport class ProcedurePointer {\n    constructor(address, type) {\n        this.address = address;\n        this.type = type;\n        this._procedurePointerTag = ProcedurePointerTag.Tag;\n    }\n}\nvar RootPointerTag;\n(function (RootPointerTag) {\n    RootPointerTag[RootPointerTag[\"Tag\"] = 0] = \"Tag\";\n})(RootPointerTag || (RootPointerTag = {}));\nexport class RootPointer {\n    constructor() {\n        this._rootPointerTag = RootPointerTag.Tag;\n    }\n}\nexport class ActiveValue {\n    constructor(declarations, parent) {\n        this.declarations = declarations;\n        this.parent = parent;\n        this.variables = new Array();\n        //public readonly services = new Array<ServicePointer>();\n        this.procedures = new Array();\n        this.done = false;\n        this.activeCode = ActiveCode.Init;\n        this.lastActiveCode = ActiveCode.Init;\n        this.instructionPointer = new Map([\n            [ActiveCode.Init, 0],\n            [ActiveCode.Begin, 0],\n            [ActiveCode.Activity, 0],\n            [ActiveCode.Finally, 0],\n            [ActiveCode.Procedure, 0],\n        ]);\n    }\n    fetch() {\n        this.updateActiveSection();\n        if (this.isDone()) {\n            return undefined;\n        }\n        switch (this.activeCode) {\n            case ActiveCode.Init:\n                return this.declarations.init.instructions[this.loadAndAdvanceIP()];\n            case ActiveCode.Procedure:\n                return this.procedures[this.loadIP()]?.fetch();\n            default:\n                return this.fetchNext();\n        }\n    }\n    jump(descriptor) {\n        if (this.isDone()) {\n            return;\n        }\n        const currentIP = this.instructionPointer.get(this.activeCode);\n        const newIP = currentIP + descriptor.offset;\n        if (newIP < 0) {\n            throw new Error('Invalid jump.');\n        }\n        // TODO check max range is still valid.\n        this.instructionPointer.set(this.activeCode, newIP);\n    }\n    call(descriptor, args) {\n        if (args.length !== descriptor.parameters.length) {\n            throw new Error('Procedurecall: Number of parameters do not match.');\n        }\n        if (this.activeCode === ActiveCode.Procedure) {\n            this.procedures[this.activeCode]?.call(descriptor, args);\n            return false;\n        }\n        this.lastActiveCode = this.activeCode;\n        this.activeCode = ActiveCode.Procedure;\n        const procedureIdx = this.procedures.findIndex((prod) => prod.descriptor === descriptor);\n        if (procedureIdx === -1) {\n            throw new Error('Unkonwn procedure, hierarchical calls are not yet supported.');\n        }\n        this.instructionPointer.set(this.activeCode, procedureIdx);\n        args.forEach((arg, index) => {\n            if (arg !== undefined) {\n                const paramDescriptor = descriptor.parameters[index];\n                const param = new VariableValue(paramDescriptor, arg);\n                param.fixAccessModifier();\n                this.procedures[procedureIdx].parameters.push(param);\n            }\n        });\n        return true;\n    }\n    procedureReturned() {\n        if (this.activeCode !== ActiveCode.Procedure) {\n            throw new Error('Return is only supported in a procedure.');\n        }\n        this.procedures[this.loadIP()]?.markReturned();\n    }\n    currentState() {\n        return this.activeCode;\n    }\n    finalize() {\n        if (this.lastActiveCode === ActiveCode.Finally && this.activeCode === ActiveCode.Procedure) {\n            return;\n        }\n        this.lastActiveCode = this.activeCode;\n        this.activeCode = ActiveCode.Finally;\n    }\n    isDone() {\n        return this.done;\n    }\n    loadIP() {\n        return this.instructionPointer.get(this.activeCode);\n    }\n    loadAndAdvanceIP() {\n        const rip = this.loadIP();\n        if (this.activeCode !== ActiveCode.Procedure) {\n            this.instructionPointer.set(this.activeCode, rip + 1);\n        }\n        return rip;\n    }\n    updateActiveSection() {\n        if (this.isDone() || !this.activeDone()) {\n            return;\n        }\n        // Done with current code section\n        if (this.activeCode === ActiveCode.Init) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Begin;\n            this.variables.forEach((variable) => {\n                if (variable instanceof VariableValue) {\n                    variable.fixAccessModifier();\n                }\n            });\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Begin) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Activity;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Activity) {\n            this.lastActiveCode = this.activeCode;\n            this.activeCode = ActiveCode.Finally;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Procedure) {\n            this.activeCode = this.lastActiveCode;\n            this.lastActiveCode = ActiveCode.Procedure;\n            this.updateActiveSection();\n            return;\n        }\n        if (this.activeCode === ActiveCode.Finally) {\n            this.lastActiveCode = this.activeCode;\n            this.done = true;\n            return;\n        }\n    }\n    activeDone() {\n        const activeIP = this.loadIP();\n        if (this.initActive()) {\n            return activeIP >= this.declarations.init.instructions.length;\n        }\n        if (this.procedureActive()) {\n            return this.procedures[activeIP] === undefined || this.procedures[activeIP].isDone();\n        }\n        return this.activeCodeDone();\n    }\n    initActive() {\n        return this.activeCode === ActiveCode.Init;\n    }\n    procedureActive() {\n        return this.activeCode === ActiveCode.Procedure;\n    }\n    resetActive() {\n        this.done = false;\n        this.activeCode = ActiveCode.Init;\n        this.lastActiveCode = ActiveCode.Init;\n        this.instructionPointer = new Map([\n            [ActiveCode.Init, 0],\n            [ActiveCode.Begin, 0],\n            [ActiveCode.Activity, 0],\n            [ActiveCode.Finally, 0],\n            [ActiveCode.Procedure, 0],\n        ]);\n    }\n}\nexport class ComponentValue extends ActiveValue {\n    constructor(descriptor, parent) {\n        super(descriptor.declarations, parent);\n        this.descriptor = descriptor;\n        this.offerConnections = new Map();\n        this.requiredConnections = new Map();\n        descriptor.offers.forEach((offer) => this.offerConnections.set(offer, undefined));\n        descriptor.requires.forEach((require) => this.requiredConnections.set(require, undefined));\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.loadIP() < this.descriptor.begin.instructions.length\n                    ? this.descriptor.begin.instructions[this.loadAndAdvanceIP()]\n                    : undefined;\n            case ActiveCode.Activity:\n                return this.loadIP() < this.descriptor.activity.instructions.length\n                    ? this.descriptor.activity.instructions[this.loadAndAdvanceIP()]\n                    : undefined;\n            case ActiveCode.Finally:\n                return this.descriptor.finally.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    /*\n    private requiredConnected(): boolean {\n        let allConnected = true;\n        this.requiredConnections.forEach((connection) => {\n            if (connection === undefined) {\n                allConnected = false;\n            }\n        });\n        return allConnected;\n    }\n\n    private offeredConnected(): boolean {\n        let anyConnected = false;\n        this.offerConnections.forEach((connection) => {\n            if (connection !== undefined) {\n                anyConnected = true;\n            }\n        });\n        return anyConnected;\n    }*/\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return /* this.requiredConnected() && */ activeIP >= this.descriptor.begin.instructions.length;\n            case ActiveCode.Activity:\n                return /* !this.offeredConnected() && */ activeIP >= this.descriptor.activity.instructions.length;\n            case ActiveCode.Finally:\n                // TODO\n                //{\n                //    if (activeIP >= this.descriptor.finally.instructions.length) {\n                //        this.disconnectAll();\n                //    }\n                //}\n                return activeIP >= this.descriptor.finally.instructions.length;\n            default:\n                return true;\n        }\n    }\n}\nexport class ServiceValue extends ActiveValue {\n    constructor(descriptor, parent) {\n        super(descriptor.declarations, parent);\n        this.descriptor = descriptor;\n        this.messageQueue = new Array();\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions.length <= activeIP;\n            default:\n                return true;\n        }\n    }\n}\nexport class ProcedureValue extends ActiveValue {\n    constructor(descriptor, parent) {\n        super(descriptor.declarations, parent);\n        this.descriptor = descriptor;\n        this.hasReturned = false;\n        this.parameters = new Array();\n    }\n    findConnectedService() {\n        return undefined;\n    }\n    markReturned() {\n        if (this.activeCode === ActiveCode.Procedure) {\n            if (this.procedures[this.loadIP()]?.markReturned()) {\n                this.activeCode = this.lastActiveCode;\n                this.lastActiveCode = ActiveCode.Procedure;\n            }\n            return false;\n        }\n        this.resetActive();\n        this.parameters = new Array();\n        return true;\n    }\n    fetchNext() {\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return this.descriptor.begin.instructions[this.loadAndAdvanceIP()];\n            default:\n                return undefined;\n        }\n    }\n    activeCodeDone() {\n        const activeIP = this.loadIP();\n        switch (this.activeCode) {\n            case ActiveCode.Begin:\n                return !this.hasReturned && this.descriptor.begin.instructions.length <= activeIP;\n            default:\n                return true;\n        }\n    }\n}\nexport class MessageValue {\n    constructor(descriptor) {\n        this.descriptor = descriptor;\n        this.fields = new Array();\n    }\n}\nexport class VariableValue {\n    constructor(descriptor, value) {\n        this.descriptor = descriptor;\n        this.value = value;\n        this.mutable = true;\n    }\n    isMutabled() {\n        return this.mutable;\n    }\n    fixAccessModifier() {\n        this.mutable = this.descriptor.mutable;\n    }\n}\nvar ArrayVariableValueTag;\n(function (ArrayVariableValueTag) {\n    ArrayVariableValueTag[ArrayVariableValueTag[\"Tag\"] = 0] = \"Tag\";\n})(ArrayVariableValueTag || (ArrayVariableValueTag = {}));\nexport class ArrayVariableValue {\n    constructor(descriptor, value) {\n        this.descriptor = descriptor;\n        this.value = value;\n        this._arrayVariableTag = ArrayVariableValueTag.Tag;\n    }\n}\nvar IntegerValueTag;\n(function (IntegerValueTag) {\n    IntegerValueTag[IntegerValueTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerValueTag || (IntegerValueTag = {}));\nexport class IntegerValue {\n    constructor(value = 0) {\n        this.value = value;\n        this._integerTag = IntegerValueTag.Tag;\n    }\n}\nvar FloatValueTag;\n(function (FloatValueTag) {\n    FloatValueTag[FloatValueTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatValueTag || (FloatValueTag = {}));\nexport class FloatValue {\n    constructor(value = 0) {\n        this.value = value;\n        this._floatTag = FloatValueTag.Tag;\n    }\n}\nvar TextValueTag;\n(function (TextValueTag) {\n    TextValueTag[TextValueTag[\"Tag\"] = 0] = \"Tag\";\n})(TextValueTag || (TextValueTag = {}));\nexport class TextValue {\n    constructor(value = '') {\n        this.value = value;\n        this._textTag = TextValueTag.Tag;\n    }\n}\nvar CharacterValueTag;\n(function (CharacterValueTag) {\n    CharacterValueTag[CharacterValueTag[\"Tag\"] = 0] = \"Tag\";\n})(CharacterValueTag || (CharacterValueTag = {}));\nexport class CharacterValue {\n    constructor(value = '\\0') {\n        this.value = value;\n        this._characterTag = CharacterValueTag.Tag;\n    }\n}\nvar BooleanValueTag;\n(function (BooleanValueTag) {\n    BooleanValueTag[BooleanValueTag[\"Tag\"] = 0] = \"Tag\";\n})(BooleanValueTag || (BooleanValueTag = {}));\nexport class BooleanValue {\n    constructor(value = false) {\n        this.value = value;\n        this._booleanTag = BooleanValueTag.Tag;\n    }\n}\n//# sourceMappingURL=values.js.map","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { Scheduler } from './scheduler';\nimport { BooleanDescriptor, CharacterDescriptor, FloatDescriptor, IntegerDescriptor, MessageDescriptor, TextDescriptor, } from '@composita/il';\nimport { ArrayVariableValue, BooleanValue, CharacterValue, ComponentPointer, ComponentValue, FloatValue, IntegerValue, MessageValue, ProcedurePointer, ProcedureValue, RootPointer, ServicePointer, ServiceValue, TextValue, VariableValue, } from './values';\nimport { Task } from './tasks';\nimport { Interpreter } from './interpreter';\nimport { default as equal } from 'fast-deep-equal';\nexport class Runtime {\n    constructor() {\n        this.scheduler = new Scheduler();\n        this.nextTaskId = 0;\n        this.stop = false;\n        this.memory = new Map();\n        this.objectDependency = new Map(); // key: child, value: parent\n        this.out = (...msgs) => msgs.forEach((msg) => process.stdout.write(msg));\n        this.isRunning = () => {\n            /* */\n        };\n        this.currentIl = undefined;\n        this.interfaceToService = new Map();\n        this.serviceToImpl = new Map();\n        this.clientToServer = new Map();\n    }\n    reset() {\n        this.stop = true;\n    }\n    changeOutput(out) {\n        this.out = out;\n    }\n    isRunningUpdate(fn) {\n        this.isRunning = fn;\n    }\n    async execute(il) {\n        this.stop = false;\n        this.currentIl = il;\n        this.run();\n    }\n    run() {\n        this.isRunning(true);\n        this.currentIl?.entryPoints.forEach((descriptor) => {\n            this.createComponent(descriptor, new RootPointer());\n        });\n        let task = this.scheduler.getActiveTask();\n        while (task !== undefined && !this.stop) {\n            task.execute();\n            task = this.scheduler.getActiveTask();\n        }\n        this.isRunning(false);\n    }\n    print(...msgs) {\n        this.out(...msgs);\n    }\n    time() {\n        return new Date().getMilliseconds();\n    }\n    load(pointer) {\n        const value = this.tryLoad(pointer);\n        if (value === undefined) {\n            throw new Error('Failed to load value.');\n        }\n        return value;\n    }\n    tryLoad(pointer) {\n        return this.memory.get(pointer);\n    }\n    getDefaultVariableValue(type) {\n        if (type instanceof IntegerDescriptor) {\n            return new IntegerValue();\n        }\n        if (type instanceof FloatDescriptor) {\n            return new FloatValue();\n        }\n        if (type instanceof TextDescriptor) {\n            return new TextValue();\n        }\n        if (type instanceof CharacterDescriptor) {\n            return new CharacterValue();\n        }\n        if (type instanceof BooleanDescriptor) {\n            return new BooleanValue();\n        }\n        return undefined;\n    }\n    createComponent(type, container) {\n        const pointer = new ComponentPointer(this.nextTaskId++, type);\n        const component = new ComponentValue(type, container);\n        this.objectDependency.set(pointer, container);\n        this.memory.set(pointer, component);\n        this.registerTask(pointer);\n        type.declarations.variables.forEach((descriptor) => {\n            // TODO this is just a hack for now to keep TextDescriptor behavior and needs to be properly handled.\n            if (descriptor.indexTypes.length > 0 && !(descriptor.type instanceof TextDescriptor)) {\n                component.variables.push(new ArrayVariableValue(descriptor, new Map()));\n            }\n            else {\n                component.variables.push(new VariableValue(descriptor, this.getDefaultVariableValue(descriptor.type)));\n            }\n        });\n        type.declarations.procedures.forEach((descriptor) => {\n            const procedure = new ProcedureValue(descriptor, pointer);\n            const procedurePointer = new ProcedurePointer(this.nextTaskId++, descriptor);\n            this.memory.set(procedurePointer, procedure);\n            this.objectDependency.set(procedurePointer, pointer);\n            component.procedures.push(procedure);\n        });\n        type.offers.forEach((offer) => {\n            if (!this.interfaceToService.has(offer)) {\n                this.interfaceToService.set(offer, new Map());\n            }\n        });\n        type.requires.forEach((require) => {\n            if (!this.interfaceToService.has(require)) {\n                this.interfaceToService.set(require, new Map());\n            }\n        });\n        return pointer;\n    }\n    registerTask(pointer) {\n        const interpreter = new Interpreter(this, pointer);\n        const task = new Task(pointer, interpreter);\n        this.scheduler.enqueue(task);\n    }\n    // loads or create a service if it does not yet exist.\n    getService(type, container) {\n        const mapping = this.interfaceToService.get(type);\n        if (mapping === undefined) {\n            throw new Error('Interface not defined for service.');\n        }\n        const component = this.memory.get(container);\n        if (!(component instanceof ComponentValue)) {\n            throw new Error('Component not in memory.');\n        }\n        const implDesc = component.descriptor.implementations.find((desc) => equal(desc.reference, type));\n        if (mapping.has(container)) {\n            return mapping.get(container);\n        }\n        if (implDesc !== undefined) {\n            const servicePointer = new ServicePointer(this.nextTaskId++, type);\n            this.serviceToImpl.set(servicePointer, container);\n            mapping.set(container, servicePointer);\n            return servicePointer;\n        }\n        const connectedService = component.offerConnections.get(type);\n        if (connectedService !== undefined) {\n            return connectedService;\n        }\n        const requiredService = component.requiredConnections.get(type);\n        if (requiredService !== undefined) {\n            return requiredService;\n        }\n        throw new Error('No service connected and no implementation found.');\n    }\n    findService(descriptor, root) {\n        descriptor;\n        if (root instanceof RootPointer) {\n            return undefined;\n        }\n        const parent = this.objectDependency.get(root);\n        if (parent === undefined) {\n            throw new Error('Pointer without a parent.');\n        }\n        if (root instanceof ProcedurePointer) {\n            return this.findService(descriptor, parent);\n        }\n        const value = this.memory.get(root);\n        if (root instanceof ServicePointer) {\n            if (value instanceof ServiceValue && equal(value.descriptor.reference, descriptor)) {\n                return root;\n            }\n            return this.findService(descriptor, parent);\n        }\n        if (value instanceof ComponentPointer) {\n            const result = this.clientToServer.get(value)?.filter((pointer) => {\n                const memValue = this.memory.get(pointer);\n                return memValue instanceof ServiceValue && equal(memValue.descriptor.reference, descriptor);\n            });\n            return result?.length === 1 ? result[0] : undefined;\n        }\n        return undefined;\n    }\n    send(to, message) {\n        const service = this.memory.get(to);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        service.messageQueue.push(message);\n    }\n    receive(target, type) {\n        const service = this.memory.get(target);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        const queue = service.messageQueue;\n        if (queue === undefined || queue.length === 0) {\n            return undefined;\n        }\n        const messageDesc = queue[0].descriptor;\n        if (equal(messageDesc, type) || equal(type, Runtime.anyMessage) || equal(messageDesc, Runtime.finishMessage)) {\n            return queue.shift();\n        }\n        return undefined;\n    }\n    receiveTest(target) {\n        const service = this.memory.get(target);\n        if (service === undefined || !(service instanceof ServiceValue)) {\n            throw new Error('No service found to send to.');\n        }\n        const queue = service.messageQueue;\n        if (queue === undefined || queue.length === 0) {\n            return undefined;\n        }\n        return queue[0];\n    }\n    connect(to, service) {\n        const toValue = this.memory.get(to);\n        if (!(toValue instanceof ComponentValue)) {\n            throw new Error('connect: \"To\" must be a component value.');\n        }\n        let impl = toValue.descriptor.implementations.find((desc) => equal(desc.reference, service.type));\n        if (impl === undefined && !this.serviceToImpl.has(service)) {\n            throw new Error('Impl undefined.');\n        }\n        if (impl !== undefined) {\n            toValue.offerConnections.set(service.type, service);\n            const from = this.memory.get(this.serviceToImpl.get(service));\n            if (from === undefined || !(from instanceof ComponentValue)) {\n                throw new Error('from undefiend when connecting');\n            }\n            from.requiredConnections.set(service.type, service);\n        }\n        if (impl === undefined) {\n            impl = this.serviceToImpl\n                .get(service)\n                ?.type.implementations.find((desc) => equal(desc.reference, service.type));\n            if (impl === undefined) {\n                throw new Error('Implementation not found.');\n            }\n            toValue.requiredConnections.set(service.type, service);\n            const from = this.memory.get(this.serviceToImpl.get(service));\n            if (from === undefined || !(from instanceof ComponentValue)) {\n                throw new Error('from undefiend when connecting');\n            }\n            from.offerConnections.set(service.type, service);\n        }\n        if (!this.memory.has(service)) {\n            const serviceValue = new ServiceValue(impl, this.serviceToImpl.get(service));\n            this.memory.set(service, serviceValue);\n        }\n        this.registerTask(service);\n        // TODO\n    }\n    disconnect(from, service) {\n        const target = this.clientToServer.get(from)?.filter((srv) => !equal(srv, service));\n        if (target === undefined) {\n            return;\n        }\n        this.clientToServer.set(from, target);\n    }\n}\n// hack for now\nRuntime.finishMessage = new MessageValue(new MessageDescriptor('FINISH'));\nRuntime.anyMessage = new MessageValue(new MessageDescriptor('ANY'));\n//# sourceMappingURL=runtime.js.map","export var TaskState;\n(function (TaskState) {\n    TaskState[TaskState[\"Ready\"] = 0] = \"Ready\";\n    TaskState[TaskState[\"Running\"] = 1] = \"Running\";\n    TaskState[TaskState[\"Paused\"] = 2] = \"Paused\";\n    TaskState[TaskState[\"Done\"] = 3] = \"Done\";\n})(TaskState || (TaskState = {}));\nexport class Task {\n    constructor(value, interpreter) {\n        this.value = value;\n        this.interpreter = interpreter;\n        this.state = TaskState.Ready;\n    }\n    execute() {\n        if (this.isDone() || this.interpreter.isDone()) {\n            this.state = TaskState.Done;\n            return;\n        }\n        this.state = TaskState.Running;\n        this.interpreter.processNext();\n    }\n    pause() {\n        if (!this.isDone()) {\n            this.state = TaskState.Paused;\n        }\n    }\n    isDone() {\n        return this.state === TaskState.Done;\n    }\n    getState() {\n        return this.state;\n    }\n}\n//# sourceMappingURL=tasks.js.map","import { TaskState } from './tasks';\nexport class Scheduler {\n    constructor() {\n        this.activeTask = undefined;\n        this.readyTasks = new Array();\n    }\n    enqueue(task) {\n        this.readyTasks.push(task);\n    }\n    getActiveTask() {\n        // simple scheduling, just loop through all the tasks.\n        this.scheduleNext();\n        return this.activeTask;\n    }\n    scheduleNext() {\n        if (this.activeTask !== undefined && this.activeTask.getState() !== TaskState.Done) {\n            this.readyTasks.push(this.activeTask);\n        }\n        this.activeTask?.pause();\n        this.activeTask = this.readyTasks.shift();\n    }\n}\n//# sourceMappingURL=scheduler.js.map","import { VariableValue, } from './values';\nexport class EvaluationStack {\n    constructor() {\n        this.stack = new Array();\n    }\n    pop() {\n        if (this.stack.length === 0) {\n            throw new Error('Pop called on empty evaluation stack.');\n        }\n        const value = this.stack.pop();\n        if (value === undefined) {\n            throw new Error('Undefined value on stack.');\n        }\n        return value;\n    }\n    popVariable() {\n        const value = this.pop();\n        return value instanceof VariableValue ? value.value : value;\n    }\n    push(data) {\n        this.stack.push(data);\n    }\n}\n//# sourceMappingURL=evalstack.js.map","import { IntegerDescriptor, SystemCallOperator } from '@composita/il';\nimport { TextValue, CharacterValue, FloatValue, BooleanValue, VariableValue, IntegerValue, } from './values';\nexport class BidirectionalConnection {\n    constructor(client, server) {\n        this.client = client;\n        this.server = server;\n        this.clientToServer = new Array();\n        this.serverToClient = new Array();\n    }\n    sendToClient(message) {\n        this.serverToClient.push(message);\n    }\n    sendToServer(message) {\n        this.clientToServer.push(message);\n    }\n    checkClientReceive(message) {\n        return this.serverToClient.length > 0 && this.serverToClient[0].descriptor === message;\n    }\n    checkServerReceive(message) {\n        return this.clientToServer.length > 0 && this.clientToServer[0].descriptor === message;\n    }\n}\nexport class SyscallInterpreter {\n    constructor(system, evalStack) {\n        this.system = system;\n        this.evalStack = evalStack;\n    }\n    static toValue(value) {\n        return value instanceof VariableValue ? value.value : value;\n    }\n    handleNoArg(op) {\n        switch (op) {\n            case SystemCallOperator.WriteLine:\n                this.system.print('\\n');\n                return;\n        }\n        throw new Error(`Failed system call '${SystemCallOperator[op]}' and zero argumentss. Operation not supported.`);\n    }\n    handleSingleArg(op, value) {\n        switch (op) {\n            case SystemCallOperator.Write:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof TextValue ||\n                    value instanceof CharacterValue ||\n                    value instanceof FloatValue ||\n                    value instanceof IntegerValue) {\n                    this.system.print(value.value.toString());\n                    return;\n                }\n                break;\n            case SystemCallOperator.WriteHex:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    this.system.print(value.value.toString(16));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Assert:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof BooleanValue) {\n                    if (!value.value) {\n                        throw new Error('Assertion failed.');\n                    }\n                    return;\n                }\n                break;\n            case SystemCallOperator.Halt:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    throw new Error(`Halt called. Id: ${value.value}`);\n                }\n                break;\n            case SystemCallOperator.Inc:\n                if (value instanceof VariableValue) {\n                    const currentValue = value.value;\n                    if (currentValue instanceof IntegerValue) {\n                        value.value = new IntegerValue(currentValue.value + 1);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperator.Dec:\n                if (value instanceof VariableValue) {\n                    const currentValue = value.value;\n                    if (currentValue instanceof IntegerValue) {\n                        value.value = new IntegerValue(currentValue.value - 1);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperator.Passivate:\n                // TODO\n                console.warn('PASSIVATE syscall not supported');\n                return;\n            case SystemCallOperator.Count:\n                // TODO: not supported yet, defaulting to 1\n                console.warn('COUNT syscall not supported');\n                return;\n            case SystemCallOperator.Length:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof TextValue) {\n                    this.evalStack.push(new IntegerValue(value.value.length));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Sqrt:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.sqrt(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Sin:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.sin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Cos:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.cos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Tan:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.tan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ArcSin:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.asin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ArcCos:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.acos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ArcTan:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.atan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.Min:\n                // TODO\n                this.evalStack.push(new FloatValue(Number.MIN_VALUE));\n                return;\n            case SystemCallOperator.Max:\n                // TODO\n                this.evalStack.push(new FloatValue(Number.MAX_VALUE));\n                return;\n            case SystemCallOperator.ToCharacter:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new CharacterValue(String.fromCharCode(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ToText:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof CharacterValue) {\n                    this.evalStack.push(new TextValue(value.value));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ToInteger:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new IntegerValue(Math.trunc(value.value)));\n                    return;\n                }\n                break;\n            case SystemCallOperator.ToReal:\n                value = SyscallInterpreter.toValue(value);\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new FloatValue(value.value));\n                    return;\n                }\n                break;\n        }\n        throw new Error(`Failed system call '${SystemCallOperator[op]}' and one argument. Operation not supported.`);\n    }\n    handleDoubleArg(op, value, value2) {\n        switch (op) {\n            case SystemCallOperator.Assert:\n                value = SyscallInterpreter.toValue(value);\n                value2 = SyscallInterpreter.toValue(value2);\n                if (value2 instanceof BooleanValue && value instanceof IntegerValue) {\n                    if (!value2.value) {\n                        // ignore param n\n                        throw new Error(`Assertion failed. Code ${value}.`);\n                        //this.system.haltProcessWithCode(this.processId, value.value);\n                        //return;\n                    }\n                }\n                break;\n            case SystemCallOperator.Inc:\n                value = SyscallInterpreter.toValue(value);\n                if (value2 instanceof VariableValue) {\n                    const currentValue = value2.value;\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.value = new IntegerValue(currentValue.value + value.value);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperator.Dec:\n                value = SyscallInterpreter.toValue(value);\n                if (value2 instanceof VariableValue) {\n                    const currentValue = value2.value;\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.value = new IntegerValue(currentValue.value - value.value);\n                        return;\n                    }\n                }\n                break;\n            case SystemCallOperator.Random:\n                value = SyscallInterpreter.toValue(value);\n                value2 = SyscallInterpreter.toValue(value2);\n                if (value2 instanceof IntegerValue && value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(Math.trunc(Math.random() * value.value) + value2.value));\n                }\n                break;\n        }\n        throw new Error(`Failed system call '${SystemCallOperator[op]}' and two arguments. Operation not supported.`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    handleForEachCall(_args) {\n        // TODO\n        throw new Error('Runtime: Foreach not yet supported.');\n        //return undefined;\n    }\n    handle(call) {\n        if (call.arguments.length !== 1) {\n            throw new Error('SystemCall requires the number of arguments to be passed. Something must have failed during code gen.');\n        }\n        if (!(call.arguments[0] instanceof IntegerDescriptor)) {\n            throw new Error('SystemCall expects to be passed an IntegerDescriptor argument. Something must have failed during code gen.');\n        }\n        const op = call.systemCall;\n        const args = new Array();\n        for (let i = 0; i < call.arguments[0].initialValue; ++i) {\n            args.push(this.evalStack.pop());\n        }\n        if (op === SystemCallOperator.LoadForEachDesignators) {\n            this.handleForEachCall(args);\n            return;\n        }\n        switch (args.length) {\n            case 0:\n                this.handleNoArg(op);\n                break;\n            case 1:\n                this.handleSingleArg(op, args[0]);\n                break;\n            case 2:\n                this.handleDoubleArg(op, args[0], args[1]);\n                break;\n            default:\n                throw new Error(`Failed system call '${op}' with ${args.length} arguments. Operation not supported.`);\n        }\n    }\n}\n//# sourceMappingURL=syscallhandler.js.map","import { BooleanDescriptor, CharacterDescriptor, ComponentDescriptor, FloatDescriptor, IntegerDescriptor, InterfaceDescriptor, JumpDescriptor, MessageDescriptor, OperatorCode, ProcedureDescriptor, SystemCallDescriptor, TextDescriptor, VariableDescriptor, } from '@composita/il';\nimport { EvaluationStack } from './evalstack';\nimport { Runtime } from './runtime';\nimport { SyscallInterpreter } from './syscallhandler';\nimport { ArrayVariableValue, BooleanValue, CharacterValue, ComponentPointer, ComponentValue, FloatValue, IntegerValue, MessageValue, ServicePointer, TextValue, VariableValue, } from './values';\nimport { default as equal } from 'fast-deep-equal';\nexport class Interpreter {\n    constructor(system, valuePointer) {\n        this.system = system;\n        this.valuePointer = valuePointer;\n        this.evalStack = new EvaluationStack();\n        this.systemCallHandler = new SyscallInterpreter(this.system, this.evalStack);\n        this.wait = undefined;\n    }\n    isDone() {\n        return this.loadValue().isDone();\n    }\n    loadValue() {\n        return this.system.load(this.valuePointer);\n    }\n    loadParentValue() {\n        const current = this.loadValue();\n        return this.system.load(current.parent);\n    }\n    static isBuiltInTypeDescriptor(descriptor) {\n        return (descriptor instanceof IntegerDescriptor ||\n            descriptor instanceof FloatDescriptor ||\n            descriptor instanceof TextDescriptor ||\n            descriptor instanceof CharacterDescriptor ||\n            descriptor instanceof BooleanDescriptor);\n    }\n    static isBuiltInValue(value) {\n        return (value instanceof IntegerValue ||\n            value instanceof FloatValue ||\n            value instanceof TextValue ||\n            value instanceof CharacterValue ||\n            value instanceof BooleanValue);\n    }\n    static descriptorMatchBuiltIn(descriptor, value) {\n        return ((descriptor instanceof IntegerDescriptor && value instanceof IntegerValue) ||\n            (descriptor instanceof FloatDescriptor && value instanceof FloatValue) ||\n            (descriptor instanceof CharacterDescriptor && value instanceof CharacterValue) ||\n            (descriptor instanceof TextDescriptor && value instanceof TextValue) ||\n            (descriptor instanceof BooleanDescriptor && value instanceof BooleanValue));\n    }\n    add() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof TextValue && left instanceof TextValue) {\n            this.evalStack.push(new TextValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value + right.value)));\n            return;\n        }\n        throw new Error(`Add operation failed.`);\n    }\n    sub() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value - right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value - right.value)));\n            return;\n        }\n        throw new Error(`Sub operation failed.`);\n    }\n    mul() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value * right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value * right.value)));\n            return;\n        }\n        throw new Error(`Mul operation failed.`);\n    }\n    div() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value / right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value / right.value)));\n            return;\n        }\n        throw new Error(`Div operation failed.`);\n    }\n    negate() {\n        const right = this.evalStack.popVariable();\n        if (right instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(-right.value));\n            return;\n        }\n        if (right instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(-right.value));\n            return;\n        }\n        throw new Error(`Negate operation failed.`);\n    }\n    mod() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value % right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value % right.value)));\n            return;\n        }\n        throw new Error(`Mod operation failed.`);\n    }\n    handleComparable(left, right, fn) {\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported less/greater comparison.`);\n    }\n    handleEquatable(left, right, fn) {\n        if (left instanceof BooleanValue && right instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported equality comparison.`);\n    }\n    handleCompareOp(op) {\n        const right = this.evalStack.popVariable();\n        if (right === undefined) {\n            throw new Error(`Unknown right compare argument.`);\n        }\n        const left = this.evalStack.popVariable();\n        if (left === undefined) {\n            throw new Error(`Unknown left compare argument.`);\n        }\n        switch (op) {\n            case OperatorCode.Equal:\n                this.handleEquatable(left, right, (l, r) => l === r);\n                return;\n            case OperatorCode.NotEqual:\n                this.handleEquatable(left, right, (l, r) => l !== r);\n                return;\n            case OperatorCode.Less:\n                this.handleComparable(left, right, (l, r) => l < r);\n                return;\n            case OperatorCode.LessEqual:\n                this.handleComparable(left, right, (l, r) => l <= r);\n                return;\n            case OperatorCode.Greater:\n                this.handleComparable(left, right, (l, r) => l > r);\n                return;\n            case OperatorCode.GreaterEqual:\n                this.handleComparable(left, right, (l, r) => l >= r);\n                return;\n        }\n        throw new Error(`Unsupprted compare op.`);\n    }\n    not() {\n        const right = this.evalStack.popVariable();\n        if (right instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(!right.value));\n            return;\n        }\n        throw new Error(`Not operation failed.`);\n    }\n    or() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(left.value || right.value));\n            return;\n        }\n        throw new Error(`Or operation failed.`);\n    }\n    and() {\n        const right = this.evalStack.popVariable();\n        const left = this.evalStack.popVariable();\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(left.value && right.value));\n            return;\n        }\n        throw new Error(`And operation failed.`);\n    }\n    handleNewVariable(target, type) {\n        if (!target.isMutabled()) {\n            throw new Error('Cannot NEW instanciate a constant value.');\n        }\n        if (type instanceof ComponentDescriptor) {\n            if (target.value instanceof ComponentValue) {\n                target.value.finalize();\n            }\n            const component = this.system.createComponent(type, this.valuePointer);\n            target.value = component;\n            return;\n        }\n        if (type instanceof TextDescriptor) {\n            target.value = new TextValue('');\n            return;\n        }\n        throw new Error('NEW built in variable not yet supported.');\n    }\n    handleNewArrayVariable(target, type) {\n        const index = new Array();\n        target.descriptor.indexTypes.forEach(() => index.push(this.evalStack.popVariable()));\n        const entry = new VariableValue(target.descriptor, undefined);\n        this.handleNewVariable(entry, type);\n        target.value.set(index, entry);\n    }\n    handleNew(operands) {\n        const type = operands[0];\n        if (operands.length !== 1 ||\n            !(type instanceof ComponentDescriptor || Interpreter.isBuiltInTypeDescriptor(type))) {\n            throw new Error('Unsupported NEW call, check your code generator.');\n        }\n        const target = this.evalStack.pop();\n        if (target instanceof VariableValue) {\n            this.handleNewVariable(target, type);\n            return;\n        }\n        if (target instanceof ArrayVariableValue) {\n            this.handleNewArrayVariable(target, type);\n            return;\n        }\n        throw new Error('Unsupported NEW. NEW target must be a variable.');\n    }\n    handleDelete() {\n        const target = this.evalStack.pop();\n        if (!(target instanceof VariableValue || target instanceof ArrayVariableValue)) {\n            throw new Error('Only variables can be deleted.');\n        }\n        if (target instanceof VariableValue) {\n            if (target.value instanceof ComponentValue) {\n                target.value.finalize();\n                return;\n            }\n            target.value = undefined;\n            return;\n        }\n        const index = new Array();\n        target.descriptor.indexTypes.forEach(() => index.push(this.evalStack.popVariable()));\n        const toDelete = target.value.get(index);\n        if (toDelete instanceof ComponentValue) {\n            toDelete.finalize();\n            return;\n        }\n        target.value.delete(index);\n    }\n    loadMessage(descriptor) {\n        const message = new MessageValue(descriptor);\n        descriptor.data.forEach((type) => {\n            const value = this.evalStack.popVariable();\n            if (!Interpreter.isBuiltInValue(value)) {\n                throw new Error('Message can only contain built in values: TEXT, CHARACTER INTEGER, REAL, BOOLEAN');\n            }\n            if (!Interpreter.descriptorMatchBuiltIn(type, value)) {\n                throw new Error('Message param does not match stack value');\n            }\n            message.fields.push(value);\n        });\n        return message;\n    }\n    handleSend(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for sending.');\n        }\n        const service = this.evalStack.pop();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Expected target service to send to.');\n        }\n        const message = this.loadMessage(operands[0]);\n        this.system.send(service, message);\n    }\n    handleReceive(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = this.evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a service.');\n        }\n        this.wait = () => {\n            const message = this.system.receive(target, descriptor);\n            if (message === Runtime.finishMessage) {\n                return false;\n            }\n            if (message !== undefined) {\n                message.fields.forEach((element) => {\n                    this.evalStack.push(element);\n                    this.storeVariable();\n                });\n                return false;\n            }\n            return true;\n        };\n        if (!this.wait()) {\n            this.wait = undefined;\n        }\n    }\n    handleConnect() {\n        const to = this.evalStack.popVariable();\n        if (!(to instanceof ComponentPointer)) {\n            // TODO: check if service pointer is possible here as well. Keeping it to components for now.\n            throw new Error('Connect target needs to be either a component.');\n        }\n        const service = this.evalStack.pop();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Service required for from.');\n        }\n        //const from = this.evalStack.popVariable();\n        //if (!(from instanceof ComponentPointer)) {\n        //    throw new Error('Connect requires a component.');\n        //}\n        this.system.connect(to, service);\n    }\n    handleDisconnect() {\n        const target = this.evalStack.popVariable();\n        if (!(target instanceof ComponentPointer)) {\n            throw new Error('Need to know from component.');\n        }\n        const service = this.evalStack.pop();\n        if (!(service instanceof ServicePointer)) {\n            throw new Error('Service required for disconnecting.');\n        }\n        this.system.disconnect(target, service);\n        // TODO\n    }\n    handleReceiveCheck(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = this.evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a component or service.');\n        }\n        this.wait = () => {\n            const message = this.system.receiveTest(target);\n            if (message === undefined) {\n                return true;\n            }\n            if (equal(message.descriptor, descriptor)) {\n                this.evalStack.push(new BooleanValue(true));\n                return false;\n            }\n            this.evalStack.push(new BooleanValue(false));\n            return false;\n        };\n        if (!this.wait()) {\n            this.wait = undefined;\n        }\n    }\n    handleInputCheck(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof MessageDescriptor)) {\n            throw new Error('MessageDescriptor required for receiving.');\n        }\n        const descriptor = operands[0];\n        const target = this.evalStack.popVariable();\n        if (!(target instanceof ServicePointer)) {\n            throw new Error('Receiver must be a component or service.');\n        }\n        const message = this.system.receiveTest(target);\n        if (message !== undefined && equal(message.descriptor, descriptor)) {\n            this.evalStack.push(new BooleanValue(true));\n            return;\n        }\n        this.evalStack.push(new BooleanValue(false));\n    }\n    handleSystemCall(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof SystemCallDescriptor)) {\n            throw new Error('Invalid system call.');\n        }\n        this.systemCallHandler.handle(operands[0]);\n    }\n    handleProcedurecall(operands) {\n        if (operands.length !== 1 || !(operands[0] instanceof ProcedureDescriptor)) {\n            throw new Error('Invalid procedure call.');\n        }\n        // TODO should we support out variables?\n        const args = new Array();\n        operands[0].parameters.forEach(() => {\n            const value = this.evalStack.popVariable();\n            if (value instanceof ComponentPointer || Interpreter.isBuiltInValue(value)) {\n                args.push(value);\n                return;\n            }\n            throw new Error('Failed to pass value to procedure.');\n        });\n        this.loadValue().call(operands[0], args);\n    }\n    handleReturn() {\n        this.loadValue().procedureReturned();\n    }\n    loadBoolean(operands) {\n        if (operands.length > 0 && operands[0] instanceof BooleanDescriptor) {\n            this.evalStack.push(new BooleanValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Boolean load operation failed.`);\n    }\n    loadText(operands) {\n        if (operands.length >= 1 && operands[0] instanceof TextDescriptor) {\n            this.evalStack.push(new TextValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Text load operation failed.`);\n    }\n    loadCharacter(operands) {\n        if (operands.length >= 1 && operands[0] instanceof CharacterDescriptor) {\n            this.evalStack.push(new CharacterValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Character load operation failed.`);\n    }\n    loadFloat(operands) {\n        if (operands.length > 0 && operands[0] instanceof FloatDescriptor) {\n            this.evalStack.push(new FloatValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Float load operation failed.`);\n    }\n    loadInteger(operands) {\n        if (operands.length > 0 && operands[0] instanceof IntegerDescriptor) {\n            this.evalStack.push(new IntegerValue(operands[0].initialValue));\n            return;\n        }\n        throw new Error(`Integer load operation failed.`);\n    }\n    storeVariable() {\n        const value = this.evalStack.popVariable();\n        const variable = this.evalStack.pop();\n        if (variable instanceof VariableValue) {\n            if (!variable.isMutabled()) {\n                throw new Error('Cannot assign value to a constant.');\n            }\n            const varValue = variable.value;\n            if (varValue === undefined && (Interpreter.isBuiltInValue(value) || value instanceof ComponentPointer)) {\n                variable.value = value;\n                return;\n            }\n            if ((value instanceof IntegerValue && varValue instanceof IntegerValue) ||\n                (value instanceof FloatValue && varValue instanceof FloatValue) ||\n                (value instanceof BooleanValue && varValue instanceof BooleanValue) ||\n                (value instanceof CharacterValue && varValue instanceof CharacterValue) ||\n                (value instanceof TextValue && varValue instanceof TextValue) ||\n                (value instanceof ComponentPointer && varValue instanceof ComponentPointer)) {\n                variable.value = value;\n                return;\n            }\n        }\n        if (variable instanceof ArrayVariableValue) {\n            const index = new Array();\n            variable.descriptor.indexTypes.forEach(() => index.push(this.evalStack.popVariable()));\n            variable.value.set(index, value);\n            return;\n        }\n        throw new Error(`Unsupported Variable Store.`);\n    }\n    loadVariable(operands) {\n        if (operands.length !== 1) {\n            throw new Error('Expected single argument for variable load only.');\n        }\n        if (operands[0] instanceof VariableDescriptor) {\n            let variable = this.loadValue().variables.find((variable) => variable.descriptor === operands[0]);\n            if (variable === undefined) {\n                if (this.valuePointer instanceof ServicePointer) {\n                    variable = this.loadParentValue()?.variables.find((parentVal) => equal(parentVal.descriptor, operands[0]));\n                }\n                if (variable === undefined) {\n                    throw new Error('Unknown variable.');\n                }\n            }\n            if (variable instanceof VariableValue) {\n                this.evalStack.push(variable);\n                return;\n            }\n            if (variable instanceof ArrayVariableValue) {\n                const arrayVariable = this.loadValue().variables.find((loadedVar) => equal(loadedVar.descriptor, operands[0]));\n                if (arrayVariable === undefined) {\n                    throw new Error('Unknown array variable.');\n                }\n                const index = new Array();\n                arrayVariable.descriptor.indexTypes.forEach(() => index.push(this.evalStack.popVariable()));\n                this.evalStack.push(variable.value.get(index));\n                return;\n            }\n        }\n        throw new Error(`Unsupported Variable Load.`);\n    }\n    loadService(operands) {\n        if (operands.length === 1 && operands[0] instanceof InterfaceDescriptor) {\n            const pointer = this.evalStack.popVariable();\n            if (pointer instanceof ComponentPointer) {\n                const service = this.system.getService(operands[0], pointer);\n                this.evalStack.push(service);\n                return;\n            }\n        }\n        throw new Error(`Unsupported Service Load.`);\n    }\n    loadThis() {\n        if (this.valuePointer instanceof ServicePointer || this.valuePointer instanceof ComponentPointer) {\n            this.evalStack.push(this.valuePointer);\n            return;\n        }\n        throw new Error('Load this only for services supported.');\n    }\n    branch(operands) {\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions must have one operand.`);\n        }\n        const operand = operands[0];\n        if (operand instanceof JumpDescriptor) {\n            this.loadValue().jump(operand);\n            return;\n        }\n        throw new Error(`Failed jump.`);\n    }\n    branchConditionally(branch, operands) {\n        const condition = this.evalStack.pop();\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions only have one operand.`);\n        }\n        if (condition instanceof BooleanValue && operands[0] instanceof JumpDescriptor) {\n            if (condition.value === branch) {\n                this.branch(operands);\n                return;\n            }\n            return;\n        }\n        throw new Error(`Conditional jump failed.`);\n    }\n    processNext() {\n        if (this.loadValue().isDone()) {\n            return;\n        }\n        if (this.wait !== undefined) {\n            if (this.wait()) {\n                return;\n            }\n            this.wait = undefined;\n        }\n        const nextInstruction = this.loadValue().fetch();\n        if (nextInstruction === undefined) {\n            return;\n        }\n        switch (nextInstruction.code) {\n            case OperatorCode.Add:\n                this.add();\n                break;\n            case OperatorCode.Subtract:\n                this.sub();\n                break;\n            case OperatorCode.Multiply:\n                this.mul();\n                break;\n            case OperatorCode.Divide:\n                this.div();\n                break;\n            case OperatorCode.Negate:\n                this.negate();\n                break;\n            case OperatorCode.Modulo:\n                this.mod();\n                break;\n            case OperatorCode.Equal:\n            case OperatorCode.Less:\n            case OperatorCode.LessEqual:\n            case OperatorCode.Greater:\n            case OperatorCode.GreaterEqual:\n            case OperatorCode.NotEqual:\n                this.handleCompareOp(nextInstruction.code);\n                break;\n            case OperatorCode.Not:\n                this.not();\n                break;\n            case OperatorCode.LogicOr:\n                this.or();\n                break;\n            case OperatorCode.LogicAnd:\n                this.and();\n                break;\n            case OperatorCode.New:\n                this.handleNew(nextInstruction.arguments);\n                break;\n            case OperatorCode.Delete:\n                this.handleDelete();\n                break;\n            case OperatorCode.Send:\n                this.handleSend(nextInstruction.arguments);\n                break;\n            case OperatorCode.Receive:\n                this.handleReceive(nextInstruction.arguments);\n                break;\n            case OperatorCode.Connect:\n                this.handleConnect();\n                break;\n            case OperatorCode.Disconnect:\n                this.handleDisconnect();\n                break;\n            case OperatorCode.ReceiveTest:\n                this.handleReceiveCheck(nextInstruction.arguments);\n                break;\n            case OperatorCode.InputTest:\n                this.handleInputCheck(nextInstruction.arguments);\n                break;\n            case OperatorCode.SystemCall:\n                this.handleSystemCall(nextInstruction.arguments);\n                break;\n            case OperatorCode.ProcedureCall:\n                this.handleProcedurecall(nextInstruction.arguments);\n                break;\n            case OperatorCode.Return:\n                this.handleReturn();\n                break;\n            case OperatorCode.LoadConstantBoolean:\n                this.loadBoolean(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadConstantText:\n                this.loadText(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadConstantCharacter:\n                this.loadCharacter(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadConstantFloat:\n                this.loadFloat(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadConstantInteger:\n                this.loadInteger(nextInstruction.arguments);\n                break;\n            case OperatorCode.Move:\n                throw new Error('MOVE is not yet supported.');\n            case OperatorCode.StoreVariable:\n                this.storeVariable();\n                break;\n            case OperatorCode.LoadVariable:\n                this.loadVariable(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadService:\n                this.loadService(nextInstruction.arguments);\n                break;\n            case OperatorCode.LoadThis:\n                this.loadThis();\n                break;\n            case OperatorCode.Await:\n                // TODO: Can be ignored for now\n                console.warn('AWAIT ignored.');\n                break;\n            case OperatorCode.AcquireShared:\n                // TODO: Can be ignored for now\n                console.warn('Acquire SHARED ignored.');\n                break;\n            case OperatorCode.ReleaseShared:\n                // TODO: Can be ignored for now\n                console.warn('Release SHARED ignored.');\n                break;\n            case OperatorCode.AcquireExclusive:\n                // TODO: Can be ignored for now\n                console.warn('Acquire EXCLUSIVE ignored.');\n                break;\n            case OperatorCode.ReleaseExclusive:\n                // TODO: Can be ignored for now\n                console.warn('Release EXCLUSIVE ignored.');\n                break;\n            case OperatorCode.Branch:\n                this.branch(nextInstruction.arguments);\n                break;\n            case OperatorCode.BranchTrue:\n                this.branchConditionally(true, nextInstruction.arguments);\n                break;\n            case OperatorCode.BranchFalse:\n                this.branchConditionally(false, nextInstruction.arguments);\n                break;\n            case OperatorCode.IsType:\n                throw new Error('IS typecheck is not yet supported.');\n            case OperatorCode.ExistsTest:\n                throw new Error('EXISTSW check is not yet supported.');\n        }\n    }\n}\n//# sourceMappingURL=interpreter.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export class Sleep {\n    static async forMilliseconds(ms) {\n        await new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    static async forSeconds(s) {\n        await this.forMilliseconds(s * 1000);\n    }\n}\nvar NonEmptyArrayTag;\n(function (NonEmptyArrayTag) {\n    NonEmptyArrayTag[NonEmptyArrayTag[\"Tag\"] = 0] = \"Tag\";\n})(NonEmptyArrayTag || (NonEmptyArrayTag = {}));\n/**\n * Simple Array extension requiring at least one element.\n */\nexport class NonEmptyArray extends Array {\n    constructor(firstItem, ...items) {\n        super(firstItem, ...items);\n        this._tag = NonEmptyArrayTag.Tag;\n    }\n    static fromArray(array) {\n        if (array.length < 1) {\n            return undefined;\n        }\n        const firstItem = array.shift();\n        if (firstItem === undefined) {\n            return undefined;\n        }\n        const result = new NonEmptyArray(firstItem);\n        array.forEach((item) => {\n            result.push(item);\n        });\n        return result;\n    }\n}\nexport var CompareValue;\n(function (CompareValue) {\n    CompareValue[CompareValue[\"LT\"] = -1] = \"LT\";\n    CompareValue[CompareValue[\"EQ\"] = 0] = \"EQ\";\n    CompareValue[CompareValue[\"GT\"] = 1] = \"GT\";\n})(CompareValue || (CompareValue = {}));\n//# sourceMappingURL=types.js.map","import { CompareValue } from '@composita/ts-utility-types';\nexport class SourcePosition {\n    constructor(line, character) {\n        this.line = line;\n        this.character = character;\n    }\n    static from(other) {\n        return other instanceof SourcePosition ? other : new SourcePosition(other.line, other.character);\n    }\n    compareTo(other) {\n        if (this.line < other.line || (this.line === other.line && this.character < other.character)) {\n            return CompareValue.LT;\n        }\n        if (this.line > other.line || (this.line === other.line && this.character > other.character)) {\n            return CompareValue.GT;\n        }\n        return CompareValue.EQ;\n    }\n}\nexport class SourceRange {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    static merge(a, b) {\n        const startACompare = SourcePosition.from(a.start).compareTo(b.start);\n        const endACompare = SourcePosition.from(a.end).compareTo(b.end);\n        const startRange = startACompare === CompareValue.LT ? a.start : startACompare === CompareValue.GT ? b.start : a.start;\n        const endRange = endACompare === CompareValue.LT ? b.end : endACompare === CompareValue.GT ? a.end : b.end;\n        return new SourceRange(startRange, endRange);\n    }\n}\nexport class SourceLocation {\n    constructor(uri, range) {\n        this.uri = uri;\n        this.range = range;\n    }\n    static merge(a, b) {\n        if (a.uri !== b.uri) {\n            throw Error('Source location URI missmatch.');\n        }\n        return new SourceLocation(a.uri, SourceRange.merge(a.range, b.range));\n    }\n}\n//# sourceMappingURL=location.js.map","export var Tag;\n(function (Tag) {\n    Tag[\"EOT\"] = \"EOT\";\n    Tag[\"Begin\"] = \"BEGIN\";\n    Tag[\"Activity\"] = \"ACTIVITY\";\n    Tag[\"Finally\"] = \"FINALLY\";\n    Tag[\"End\"] = \"END\";\n    Tag[\"Constant\"] = \"CONSTANT\";\n    Tag[\"Variable\"] = \"VARIABLE\";\n    Tag[\"In\"] = \"IN\";\n    Tag[\"Out\"] = \"OUT\";\n    Tag[\"Is\"] = \"IS\";\n    Tag[\"Type\"] = \"TYPE\";\n    Tag[\"Any\"] = \"ANY\";\n    Tag[\"Finish\"] = \"FINISH\";\n    Tag[\"Component\"] = \"COMPONENT\";\n    Tag[\"Interface\"] = \"INTERFACE\";\n    Tag[\"Procedure\"] = \"PROCEDURE\";\n    Tag[\"Implementation\"] = \"IMPLEMENTATION\";\n    Tag[\"Offers\"] = \"OFFERS\";\n    Tag[\"Requires\"] = \"REQUIRES\";\n    Tag[\"OpenBrace\"] = \"{\";\n    Tag[\"CloseBrace\"] = \"}\";\n    Tag[\"OpenSquareBracket\"] = \"[\";\n    Tag[\"CloseSquareBracket\"] = \"]\";\n    Tag[\"OpenParentheses\"] = \"(\";\n    Tag[\"CloseParentheses\"] = \")\";\n    Tag[\"Semicolon\"] = \";\";\n    Tag[\"Colon\"] = \":\";\n    Tag[\"Comma\"] = \",\";\n    Tag[\"Asterisk\"] = \"*\";\n    Tag[\"Pipe\"] = \"|\";\n    Tag[\"For\"] = \"FOR\";\n    Tag[\"To\"] = \"TO\";\n    Tag[\"By\"] = \"BY\";\n    Tag[\"Do\"] = \"DO\";\n    Tag[\"Foreach\"] = \"FOREACH\";\n    Tag[\"Of\"] = \"OF\";\n    Tag[\"While\"] = \"WHILE\";\n    Tag[\"Repeat\"] = \"REPEAT\";\n    Tag[\"Until\"] = \"UNTIL\";\n    Tag[\"If\"] = \"IF\";\n    Tag[\"Then\"] = \"THEN\";\n    Tag[\"Elsif\"] = \"ELSIF\";\n    Tag[\"Else\"] = \"ELSE\";\n    Tag[\"Return\"] = \"RETURN\";\n    Tag[\"NumberSign\"] = \"#\";\n    Tag[\"Equal\"] = \"=\";\n    Tag[\"Less\"] = \"<\";\n    Tag[\"LessEqual\"] = \"<=\";\n    Tag[\"Greater\"] = \">\";\n    Tag[\"GreaterEqual\"] = \">=\";\n    Tag[\"ColonEqual\"] = \":=\";\n    Tag[\"Ellipsis\"] = \"..\";\n    Tag[\"Plus\"] = \"+\";\n    Tag[\"Minus\"] = \"-\";\n    Tag[\"Tilde\"] = \"~\";\n    Tag[\"Slash\"] = \"/\";\n    Tag[\"Div\"] = \"DIV\";\n    Tag[\"Mod\"] = \"MOD\";\n    Tag[\"And\"] = \"AND\";\n    Tag[\"Or\"] = \"OR\";\n    Tag[\"ExclamationMark\"] = \"!\";\n    Tag[\"QuestionMark\"] = \"?\";\n})(Tag || (Tag = {}));\nexport function tagFromString(identifier) {\n    switch (identifier) {\n        case Tag.Begin:\n            return Tag.Begin;\n        case Tag.Activity:\n            return Tag.Activity;\n        case Tag.Finally:\n            return Tag.Finally;\n        case Tag.End:\n            return Tag.End;\n        case Tag.Constant:\n            return Tag.Constant;\n        case Tag.Variable:\n            return Tag.Variable;\n        case Tag.In:\n            return Tag.In;\n        case Tag.Out:\n            return Tag.Out;\n        case Tag.Is:\n            return Tag.Is;\n        case Tag.Type:\n            return Tag.Type;\n        case Tag.Any:\n            return Tag.Any;\n        case Tag.Finish:\n            return Tag.Finish;\n        case Tag.Component:\n            return Tag.Component;\n        case Tag.Interface:\n            return Tag.Interface;\n        case Tag.Procedure:\n            return Tag.Procedure;\n        case Tag.Implementation:\n            return Tag.Implementation;\n        case Tag.Offers:\n            return Tag.Offers;\n        case Tag.Requires:\n            return Tag.Requires;\n        case Tag.OpenBrace:\n            return Tag.OpenBrace;\n        case Tag.CloseBrace:\n            return Tag.CloseBrace;\n        case Tag.OpenSquareBracket:\n            return Tag.OpenSquareBracket;\n        case Tag.CloseSquareBracket:\n            return Tag.CloseSquareBracket;\n        case Tag.OpenParentheses:\n            return Tag.OpenParentheses;\n        case Tag.CloseParentheses:\n            return Tag.CloseParentheses;\n        case Tag.Semicolon:\n            return Tag.Semicolon;\n        case Tag.Colon:\n            return Tag.Colon;\n        case Tag.Comma:\n            return Tag.Comma;\n        case Tag.Asterisk:\n            return Tag.Asterisk;\n        case Tag.Pipe:\n            return Tag.Pipe;\n        case Tag.For:\n            return Tag.For;\n        case Tag.To:\n            return Tag.To;\n        case Tag.By:\n            return Tag.By;\n        case Tag.Do:\n            return Tag.Do;\n        case Tag.Foreach:\n            return Tag.Foreach;\n        case Tag.Of:\n            return Tag.Of;\n        case Tag.While:\n            return Tag.While;\n        case Tag.Repeat:\n            return Tag.Repeat;\n        case Tag.Until:\n            return Tag.Until;\n        case Tag.If:\n            return Tag.If;\n        case Tag.Then:\n            return Tag.Then;\n        case Tag.Elsif:\n            return Tag.Elsif;\n        case Tag.Else:\n            return Tag.Else;\n        case Tag.Return:\n            return Tag.Return;\n        case Tag.NumberSign:\n            return Tag.NumberSign;\n        case Tag.Equal:\n            return Tag.Equal;\n        case Tag.Less:\n            return Tag.Less;\n        case Tag.LessEqual:\n            return Tag.LessEqual;\n        case Tag.Greater:\n            return Tag.Greater;\n        case Tag.GreaterEqual:\n            return Tag.GreaterEqual;\n        case Tag.ColonEqual:\n            return Tag.ColonEqual;\n        case Tag.Ellipsis:\n            return Tag.Ellipsis;\n        case Tag.Plus:\n            return Tag.Plus;\n        case Tag.Minus:\n            return Tag.Minus;\n        case Tag.Tilde:\n            return Tag.Tilde;\n        case Tag.Slash:\n            return Tag.Slash;\n        case Tag.Div:\n            return Tag.Div;\n        case Tag.Mod:\n            return Tag.Mod;\n        case Tag.And:\n            return Tag.And;\n        case Tag.Or:\n            return Tag.Or;\n        case Tag.ExclamationMark:\n            return Tag.ExclamationMark;\n        case Tag.QuestionMark:\n            return Tag.QuestionMark;\n        default:\n            return undefined;\n    }\n}\nexport class Token {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\nexport class UnknownCharacterToken extends Token {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n}\nvar ErrorTokenTag;\n(function (ErrorTokenTag) {\n    ErrorTokenTag[ErrorTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(ErrorTokenTag || (ErrorTokenTag = {}));\nexport class ErrorToken extends Token {\n    constructor(location) {\n        super(location);\n        this._errorTag = ErrorTokenTag.Tag;\n    }\n}\nexport class FixToken extends Token {\n    constructor(location, tag) {\n        super(location);\n        this.tag = tag;\n    }\n    getTag() {\n        return this.tag;\n    }\n}\nexport class IdentifierToken extends Token {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n}\nexport class NumberToken extends Token {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getNumber() {\n        return this.value;\n    }\n}\nvar HexNumberTokenTag;\n(function (HexNumberTokenTag) {\n    HexNumberTokenTag[HexNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(HexNumberTokenTag || (HexNumberTokenTag = {}));\nexport class HexNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = HexNumberTokenTag.Tag;\n    }\n}\nvar IntegerNumberTokenTag;\n(function (IntegerNumberTokenTag) {\n    IntegerNumberTokenTag[IntegerNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTokenTag || (IntegerNumberTokenTag = {}));\nexport class IntegerNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = IntegerNumberTokenTag.Tag;\n    }\n}\nvar FloatNumberTokenTag;\n(function (FloatNumberTokenTag) {\n    FloatNumberTokenTag[FloatNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatNumberTokenTag || (FloatNumberTokenTag = {}));\nexport class FloatNumberToken extends NumberToken {\n    constructor(location, mantissa, exponent) {\n        super(location, mantissa * 10 ** exponent);\n        this.mantissa = mantissa;\n        this.exponent = exponent;\n        this._tag = FloatNumberTokenTag.Tag;\n    }\n    getMantissa() {\n        return this.mantissa;\n    }\n    getExponent() {\n        return this.exponent;\n    }\n}\nexport class TextToken extends Token {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n}\n//# sourceMappingURL=tokens.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","import { DiagnosticSeverity, } from 'vscode-languageserver-types';\nexport class CompilerDiagnostic {\n    constructor(range, severity, message, code, source, tags, relatedInformation) {\n        this.range = range;\n        this.severity = severity;\n        this.message = message;\n        this.code = code;\n        this.source = source;\n        this.tags = tags;\n        this.relatedInformation = relatedInformation;\n    }\n}\nclass DiagnosisState {\n    constructor() {\n        this.diagnostics = new Array();\n        this.warning = false;\n        this.error = false;\n    }\n    copy() {\n        const state = new DiagnosisState();\n        state.diagnostics = new Array(...this.diagnostics);\n        state.warning = this.warning;\n        state.error = this.error;\n        return state;\n    }\n}\nexport class CompilerDiagnosis {\n    constructor() {\n        this.state = new DiagnosisState();\n        this.stateStack = new Array();\n    }\n    log(diagnostic) {\n        this.state.diagnostics.push(diagnostic);\n        if (diagnostic.severity === DiagnosticSeverity.Warning) {\n            this.state.warning = true;\n        }\n        if (diagnostic.severity === DiagnosticSeverity.Error) {\n            this.state.error = true;\n        }\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    restoreState() {\n        const oldState = this.stateStack.pop();\n        if (oldState === undefined) {\n            // TODO maybe do something different here...\n            console.warn('Failed to restore diagnosis state, no state saved.');\n            return;\n        }\n        this.state = oldState;\n    }\n    hasErrors() {\n        return this.state.error;\n    }\n    hasWarnings() {\n        return this.state.warning;\n    }\n    getDiagnostics() {\n        return this.state.diagnostics;\n    }\n    print(out) {\n        this.state.diagnostics.forEach((value) => {\n            out(`[${value.range.start.line}:${value.range.start.character}]: ${this.toString(value.severity)}: ${value.message}.`);\n        });\n    }\n    toString(severity) {\n        switch (severity) {\n            case DiagnosticSeverity.Error:\n                return 'Error';\n            case DiagnosticSeverity.Warning:\n                return 'Warning';\n            case DiagnosticSeverity.Information:\n                return 'Information';\n            case DiagnosticSeverity.Hint:\n                return 'Hint';\n            default:\n                return 'undefined';\n        }\n    }\n}\n//# sourceMappingURL=diagnosis.js.map","import { SourceLocation, SourceRange, SourcePosition } from '@composita/source-location';\nimport { IdentifierToken, TextToken, FixToken, ErrorToken, HexNumberToken, IntegerNumberToken, FloatNumberToken, Tag, tagFromString, } from '@composita/tokens';\nimport { CompilerDiagnostic } from '@composita/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nvar SpecialCharacter;\n(function (SpecialCharacter) {\n    SpecialCharacter[\"Null\"] = \"\\0\";\n    SpecialCharacter[\"Backspace\"] = \"\\b\";\n    SpecialCharacter[\"Space\"] = \" \";\n    SpecialCharacter[\"HorizontalTab\"] = \"\\t\";\n    SpecialCharacter[\"VerticalTab\"] = \"\\v\";\n    SpecialCharacter[\"FormFeed\"] = \"\\f\";\n    SpecialCharacter[\"CarriageReturn\"] = \"\\r\";\n    SpecialCharacter[\"LineFeed\"] = \"\\n\";\n    SpecialCharacter[\"Backslash\"] = \"\\\\\";\n    SpecialCharacter[\"SingleQuote\"] = \"'\";\n    SpecialCharacter[\"DoubleQuote\"] = \"\\\"\";\n})(SpecialCharacter || (SpecialCharacter = {}));\nfunction toSpecialCharacter(character) {\n    switch (character) {\n        case '0':\n            return SpecialCharacter.Null;\n        case 'b':\n            return SpecialCharacter.Backspace;\n        case 't':\n            return SpecialCharacter.HorizontalTab;\n        case 'v':\n            return SpecialCharacter.VerticalTab;\n        case 'f':\n            return SpecialCharacter.FormFeed;\n        case 'r':\n            return SpecialCharacter.CarriageReturn;\n        case 'n':\n            return SpecialCharacter.LineFeed;\n        case '\\\\':\n            return SpecialCharacter.Backslash;\n        case \"'\":\n            return SpecialCharacter.SingleQuote;\n        case '\"':\n            return SpecialCharacter.DoubleQuote;\n        default:\n            return undefined;\n    }\n}\nclass LexerState {\n    constructor() {\n        this.tokenCache = new Array();\n        this.currentPosition = 0;\n        this.currentLinePosition = 0;\n        this.currentLine = 0;\n    }\n    copy() {\n        const newState = new LexerState();\n        newState.tokenCache = new Array(...this.tokenCache);\n        newState.currentPosition = this.currentPosition;\n        newState.currentLinePosition = this.currentLinePosition;\n        newState.currentLine = this.currentLine;\n        return newState;\n    }\n}\nexport class Lexer {\n    constructor(diagnosis, uri, code) {\n        this.diagnosis = diagnosis;\n        this.uri = uri;\n        this.code = Array.from(code);\n        this.state = new LexerState();\n        this.stateStack = new Array();\n    }\n    advance(n = 1) {\n        while (n > 0 && !this.isEOT()) {\n            if (this.isLineFeed()) {\n                this.state.currentLine = this.state.currentLine + 1;\n                this.state.currentLinePosition = 0;\n            }\n            else {\n                this.state.currentLinePosition = this.state.currentLinePosition + 1;\n            }\n            this.state.currentPosition = this.state.currentPosition + 1;\n            n = n - 1;\n        }\n    }\n    getCurrentCharacter() {\n        return !this.isEOT() ? this.code[this.state.currentPosition] : undefined;\n    }\n    createSourceLocation(range) {\n        return new SourceLocation(this.uri, range);\n    }\n    createSourcePosition() {\n        return new SourcePosition(this.state.currentLine, this.state.currentLinePosition);\n    }\n    createEOTToken() {\n        const endPosition = this.createSourcePosition();\n        return new FixToken(this.createSourceLocation(new SourceRange(endPosition, endPosition)), Tag.EOT);\n    }\n    isSpace() {\n        return this.getCurrentCharacter() === SpecialCharacter.Space;\n    }\n    isTab() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter === SpecialCharacter.HorizontalTab || currentCharacter === SpecialCharacter.VerticalTab;\n    }\n    isFormFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.FormFeed;\n    }\n    isLineFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.LineFeed;\n    }\n    isCarriageReturn() {\n        return this.getCurrentCharacter() === SpecialCharacter.CarriageReturn;\n    }\n    isBackslash() {\n        return this.getCurrentCharacter() === SpecialCharacter.Backslash;\n    }\n    isLetter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'z') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'Z')));\n    }\n    isDot() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter === '.';\n    }\n    isEllipsis() {\n        return (this.isDot() &&\n            this.state.currentPosition + 1 < this.code.length &&\n            this.code[this.state.currentPosition + 1] === '.');\n    }\n    isNumber() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter >= '0' && currentCharacter <= '9';\n    }\n    isHexCharacter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'f') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'F')));\n    }\n    isDoubleQuote() {\n        return this.getCurrentCharacter() === SpecialCharacter.DoubleQuote;\n    }\n    isWhitespace() {\n        return this.isSpace() || this.isTab() || this.isLineFeed() || this.isCarriageReturn() || this.isFormFeed();\n    }\n    isEOT() {\n        return this.state.currentPosition >= this.code.length;\n    }\n    isCommentStart() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.OpenParentheses &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.Asterisk);\n    }\n    isCommentEnd() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.Asterisk &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.CloseParentheses);\n    }\n    skipWhitespace() {\n        let hasSkipped = false;\n        while (this.isWhitespace()) {\n            hasSkipped = true;\n            this.advance();\n        }\n        return hasSkipped;\n    }\n    skipComment() {\n        let hasSkipped = false;\n        if (this.isCommentStart()) {\n            hasSkipped = true;\n            this.advance(2);\n            while (!this.isEOT() && !this.isCommentEnd()) {\n                this.advance();\n            }\n            if (!this.isEOT()) {\n                this.advance(2);\n            }\n        }\n        return hasSkipped;\n    }\n    skipUntilWhitespace() {\n        while (!this.isWhitespace() && !this.isEOT()) {\n            this.advance();\n        }\n    }\n    readCharacter() {\n        const character = this.getCurrentCharacter();\n        if (this.isBackslash()) {\n            this.advance();\n            const specialCharacter = toSpecialCharacter(this.getCurrentCharacter());\n            if (specialCharacter !== undefined) {\n                this.advance();\n                return specialCharacter;\n            }\n        }\n        this.advance();\n        return character;\n    }\n    readText() {\n        let text = '';\n        const start = this.createSourcePosition();\n        this.advance();\n        while (!this.isDoubleQuote()) {\n            const character = this.readCharacter();\n            if (character === undefined) {\n                return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n            }\n            text = text + character;\n        }\n        if (this.isDoubleQuote()) {\n            this.advance();\n            const end = this.createSourcePosition();\n            return new TextToken(this.createSourceLocation(new SourceRange(start, end)), text);\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readIdentifier() {\n        let identifier = '';\n        const start = this.createSourcePosition();\n        while (!this.isEOT() && (this.isLetter() || this.isNumber())) {\n            identifier = identifier + this.getCurrentCharacter();\n            this.advance();\n        }\n        const location = this.createSourceLocation(new SourceRange(start, this.createSourcePosition()));\n        const tag = tagFromString(identifier);\n        return tag !== undefined ? new FixToken(location, tag) : new IdentifierToken(location, identifier);\n    }\n    readFixToken() {\n        const start = this.createSourcePosition();\n        const currentCharacter = this.getCurrentCharacter();\n        if (currentCharacter !== undefined) {\n            const tag = tagFromString(currentCharacter);\n            this.advance();\n            if (tag !== undefined) {\n                const nextCharacter = this.getCurrentCharacter();\n                if (nextCharacter !== undefined) {\n                    const nextTag = tagFromString(nextCharacter);\n                    if (nextTag === Tag.Equal) {\n                        switch (tag) {\n                            case Tag.Less:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.LessEqual);\n                            case Tag.Greater:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.GreaterEqual);\n                            case Tag.Colon:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.ColonEqual);\n                        }\n                    }\n                }\n                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), tag);\n            }\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readScaleFactor() {\n        let scaleFactor = 0;\n        if (!this.isNumber()) {\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(this.createSourcePosition(), this.createSourcePosition()), DiagnosticSeverity.Error, 'Scale factor must be at least one digit long.'));\n        }\n        while (this.isNumber()) {\n            const current = this.getCurrentCharacter();\n            if (current !== undefined) {\n                scaleFactor = scaleFactor * 10 + Number.parseInt(current);\n                this.advance();\n            }\n        }\n        return scaleFactor;\n    }\n    readNumber() {\n        const start = this.createSourcePosition();\n        let mantissa = undefined;\n        let isHex = false;\n        let isFloat = false;\n        let exponent = 0;\n        while (this.isNumber() || this.isHexCharacter()) {\n            if (this.isHexCharacter()) {\n                isHex = true;\n            }\n            mantissa = mantissa === undefined ? this.getCurrentCharacter() : mantissa + this.getCurrentCharacter();\n            this.advance();\n            if (isFloat && isHex) {\n                this.skipUntilWhitespace();\n                this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Floating point hex numbers are not supported.'));\n                break;\n            }\n            if (isFloat) {\n                exponent = exponent - 1;\n            }\n            if (this.isEllipsis()) {\n                break;\n            }\n            if (this.isDot()) {\n                this.advance();\n                isFloat = true;\n            }\n            if (isFloat && this.getCurrentCharacter() === 'E') {\n                this.advance();\n                const current = this.getCurrentCharacter();\n                let prefix = 1;\n                if (current === '-' || current === '+') {\n                    prefix = current === '-' ? -1 : 1;\n                    this.advance();\n                }\n                exponent = prefix * this.readScaleFactor();\n                break;\n            }\n        }\n        if (mantissa === undefined) {\n            return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), 0);\n        }\n        const hexModifier = this.getCurrentCharacter() === 'H' || this.getCurrentCharacter() === 'X';\n        if (hexModifier) {\n            this.advance();\n        }\n        if (isHex && !hexModifier) {\n            this.skipUntilWhitespace();\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Missing \"H\" or \"X\" after hex number'));\n        }\n        if (isHex || hexModifier) {\n            return new HexNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt('0x' + mantissa));\n        }\n        if (isFloat) {\n            return new FloatNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa), exponent);\n        }\n        return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa));\n    }\n    readEllipsis() {\n        const start = this.createSourcePosition();\n        this.advance();\n        this.advance();\n        return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.Ellipsis);\n    }\n    read() {\n        while (!this.isEOT() && (this.skipWhitespace() || this.skipComment())) {\n            /* do nothing, just skip */\n        }\n        if (this.isEOT()) {\n            return this.createEOTToken();\n        }\n        if (this.isDoubleQuote()) {\n            return this.readText();\n        }\n        if (this.isLetter()) {\n            return this.readIdentifier();\n        }\n        if (this.isNumber()) {\n            return this.readNumber();\n        }\n        if (this.isEllipsis()) {\n            return this.readEllipsis();\n        }\n        return this.readFixToken();\n    }\n    getUri() {\n        return this.uri;\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    popSaveState() {\n        this.stateStack.pop();\n    }\n    restoreState() {\n        const lastState = this.stateStack.pop();\n        if (lastState === undefined) {\n            console.warn('No lexer state to restore.');\n            return;\n        }\n        this.state = lastState;\n    }\n    peek(n) {\n        if (n < 1) {\n            // TODO: replace with something cleverer\n            throw RangeError('peek range must be greater than 0.');\n        }\n        let cacheSize = this.state.tokenCache.length;\n        if (n <= cacheSize) {\n            return this.state.tokenCache[n - 1];\n        }\n        do {\n            if (cacheSize > 0) {\n                const lastToken = this.state.tokenCache[cacheSize - 1];\n                if (lastToken instanceof FixToken && lastToken.getTag() === Tag.EOT) {\n                    return lastToken;\n                }\n            }\n            cacheSize = this.state.tokenCache.push(this.read());\n        } while (n > cacheSize);\n        return this.state.tokenCache[n - 1];\n    }\n    next() {\n        const nextToken = this.peek(1);\n        this.state.tokenCache.shift();\n        return nextToken;\n    }\n}\n//# sourceMappingURL=lexer.js.map","import { Node } from './node';\nvar DeclarationNodeTag;\n(function (DeclarationNodeTag) {\n    DeclarationNodeTag[DeclarationNodeTag[\"Tag\"] = 0] = \"Tag\";\n})(DeclarationNodeTag || (DeclarationNodeTag = {}));\nexport class DeclarationNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = DeclarationNodeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitDeclaration(this);\n    }\n}\n//# sourceMappingURL=declaration.js.map","export class Node {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\n//# sourceMappingURL=node.js.map","import { Node } from './node';\nexport class AttributeNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitAttribute(this);\n    }\n}\n//# sourceMappingURL=attribute.js.map","import { Node } from './node';\nexport class CardinalityNode extends Node {\n    constructor(location, min, max) {\n        super(location);\n        this.min = min;\n        this.max = max;\n    }\n    getMin() {\n        return this.min;\n    }\n    getMax() {\n        return this.max;\n    }\n    accept(visitor) {\n        visitor.visitCardinality(this);\n    }\n}\n//# sourceMappingURL=cardinality.js.map","import { Node } from './node';\nvar ExpressionTag;\n(function (ExpressionTag) {\n    ExpressionTag[ExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ExpressionTag || (ExpressionTag = {}));\nexport class ExpressionNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._expressionTag = ExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitExpression(this);\n    }\n}\nvar AttributedExpressionTag;\n(function (AttributedExpressionTag) {\n    AttributedExpressionTag[AttributedExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(AttributedExpressionTag || (AttributedExpressionTag = {}));\nexport class AttributedExpressionNode extends ExpressionNode {\n    constructor(location, attributes) {\n        super(location);\n        this.attributes = attributes;\n        this._attributedExpressionTag = AttributedExpressionTag.Tag;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitAttributedExpression(this);\n    }\n}\nexport class UnaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, expression) {\n        super(location, attributes);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitUnaryExpression(this);\n    }\n}\nexport var LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[LogicalOperator[\"Equal\"] = 0] = \"Equal\";\n    LogicalOperator[LogicalOperator[\"NotEqual\"] = 1] = \"NotEqual\";\n    LogicalOperator[LogicalOperator[\"Less\"] = 2] = \"Less\";\n    LogicalOperator[LogicalOperator[\"LessEqual\"] = 3] = \"LessEqual\";\n    LogicalOperator[LogicalOperator[\"More\"] = 4] = \"More\";\n    LogicalOperator[LogicalOperator[\"MoreEqual\"] = 5] = \"MoreEqual\";\n})(LogicalOperator || (LogicalOperator = {}));\nexport class BinaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, left, op, right) {\n        super(location, attributes);\n        this.left = left;\n        this.op = op;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitBinaryExpression(this);\n    }\n}\nexport var OffersRequiresOperator;\n(function (OffersRequiresOperator) {\n    OffersRequiresOperator[OffersRequiresOperator[\"Offers\"] = 0] = \"Offers\";\n    OffersRequiresOperator[OffersRequiresOperator[\"Requires\"] = 1] = \"Requires\";\n})(OffersRequiresOperator || (OffersRequiresOperator = {}));\nexport class OffersRequiresExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, op, interfaces) {\n        super(location, attributes);\n        this.op = op;\n        this.interfaces = interfaces;\n    }\n    getOp() {\n        return this.op;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitOffersRequiresExpression(this);\n    }\n}\nexport class TypeCheckExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, designator, type) {\n        super(location, attributes);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitTypeCheck(this);\n    }\n}\n//# sourceMappingURL=expression.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ComponentNode extends DeclarationNode {\n    constructor(location, name, attributes, offers, requires, body) {\n        super(location);\n        this.name = name;\n        this.attributes = attributes;\n        this.offers = offers;\n        this.requires = requires;\n        this.body = body;\n    }\n    getName() {\n        return this.name;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getOffers() {\n        return this.offers;\n    }\n    getRequires() {\n        return this.requires;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitComponent(this);\n    }\n}\nexport class ComponentBodyNode extends Node {\n    constructor(location, declarations, implementations, beginBlock, activityBlock, finallyBlock) {\n        super(location);\n        this.declarations = declarations;\n        this.implementations = implementations;\n        this.beginBlock = beginBlock;\n        this.activityBlock = activityBlock;\n        this.finallyBlock = finallyBlock;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getImplementations() {\n        return this.implementations;\n    }\n    getBeginBlock() {\n        return this.beginBlock;\n    }\n    getActivityBlock() {\n        return this.activityBlock;\n    }\n    getFinallyBlock() {\n        return this.finallyBlock;\n    }\n    accept(visitor) {\n        visitor.visitComponentBody(this);\n    }\n}\n//# sourceMappingURL=component.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ConstantNode extends Node {\n    constructor(location, name, expression) {\n        super(location);\n        this.name = name;\n        this.expression = expression;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstant(this);\n    }\n}\nexport class ConstantExpressionNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstantExpression(this);\n    }\n}\nexport class ConstantListNode extends DeclarationNode {\n    constructor(location, constants) {\n        super(location);\n        this.constants = constants;\n    }\n    getConstants() {\n        return this.constants;\n    }\n    accept(visitor) {\n        visitor.visitConstantList(this);\n    }\n}\n//# sourceMappingURL=constant.js.map","import { Node } from './node';\nimport { ExpressionNode } from './expression';\nvar SimpleExpressionTag;\n(function (SimpleExpressionTag) {\n    SimpleExpressionTag[SimpleExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(SimpleExpressionTag || (SimpleExpressionTag = {}));\nexport class SimpleExpressionNode extends ExpressionNode {\n    constructor(location) {\n        super(location);\n        this._simpleExpressionTag = SimpleExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitSimpleExpression(this);\n    }\n}\nexport var PrefixOperator;\n(function (PrefixOperator) {\n    PrefixOperator[PrefixOperator[\"Plus\"] = 0] = \"Plus\";\n    PrefixOperator[PrefixOperator[\"Minus\"] = 1] = \"Minus\";\n})(PrefixOperator || (PrefixOperator = {}));\nexport class UnaryTermNode extends SimpleExpressionNode {\n    constructor(location, op, term) {\n        super(location);\n        this.op = op;\n        this.term = term;\n    }\n    getOp() {\n        return this.op;\n    }\n    getTerm() {\n        return this.term;\n    }\n    accept(visitor) {\n        visitor.visitUnaryTermNode(this);\n    }\n}\nexport var InfixTermOperator;\n(function (InfixTermOperator) {\n    InfixTermOperator[InfixTermOperator[\"Plus\"] = 0] = \"Plus\";\n    InfixTermOperator[InfixTermOperator[\"Minus\"] = 1] = \"Minus\";\n    InfixTermOperator[InfixTermOperator[\"Or\"] = 2] = \"Or\";\n})(InfixTermOperator || (InfixTermOperator = {}));\nexport class TermChainNode extends SimpleExpressionNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitTermChain(this);\n    }\n}\nexport class RightTermNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightTerm(this);\n    }\n}\n//# sourceMappingURL=simple-expression.js.map","import { Node } from './node';\nimport { SimpleExpressionNode } from './simple-expression';\nvar TermTag;\n(function (TermTag) {\n    TermTag[TermTag[\"Tag\"] = 0] = \"Tag\";\n})(TermTag || (TermTag = {}));\nexport class TermNode extends SimpleExpressionNode {\n    constructor(location) {\n        super(location);\n        this._termTag = TermTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitTerm(this);\n    }\n}\nexport class FactorChainNode extends TermNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitFactorChain(this);\n    }\n}\nexport var InfixFactorOperator;\n(function (InfixFactorOperator) {\n    InfixFactorOperator[InfixFactorOperator[\"Times\"] = 0] = \"Times\";\n    InfixFactorOperator[InfixFactorOperator[\"Div\"] = 1] = \"Div\";\n    InfixFactorOperator[InfixFactorOperator[\"DivText\"] = 2] = \"DivText\";\n    InfixFactorOperator[InfixFactorOperator[\"ModText\"] = 3] = \"ModText\";\n    InfixFactorOperator[InfixFactorOperator[\"AndText\"] = 4] = \"AndText\";\n})(InfixFactorOperator || (InfixFactorOperator = {}));\nexport class RightFactorNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightFactor(this);\n    }\n}\n//# sourceMappingURL=term.js.map","import { TermNode } from './term';\nvar FactorTag;\n(function (FactorTag) {\n    FactorTag[FactorTag[\"Tag\"] = 0] = \"Tag\";\n})(FactorTag || (FactorTag = {}));\nexport class FactorNode extends TermNode {\n    constructor(location) {\n        super(location);\n        this._factorTag = FactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitFactor(this);\n    }\n}\nexport var FactorPrefix;\n(function (FactorPrefix) {\n    FactorPrefix[FactorPrefix[\"Not\"] = 0] = \"Not\";\n})(FactorPrefix || (FactorPrefix = {}));\nexport class UnaryFactorNode extends FactorNode {\n    constructor(location, prefix, factor) {\n        super(location);\n        this.prefix = prefix;\n        this.factor = factor;\n    }\n    getPrefix() {\n        return this.prefix;\n    }\n    getFactor() {\n        return this.factor;\n    }\n    accept(visitor) {\n        visitor.visitUnaryFactor(this);\n    }\n}\nexport class ExpressionFactorNode extends FactorNode {\n    constructor(location, expresion) {\n        super(location);\n        this.expresion = expresion;\n    }\n    getExpression() {\n        return this.expresion;\n    }\n    accept(visitor) {\n        visitor.visitExpressionFactor(this);\n    }\n}\n//# sourceMappingURL=factor.js.map","import { FactorNode } from './factor';\nexport class OperandNode extends FactorNode {\n    constructor(location) {\n        super(location);\n    }\n    accept(visitor) {\n        visitor.visitOperand(this);\n    }\n}\nexport class NumberNode extends OperandNode {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getValue() {\n        return this.value;\n    }\n    accept(visitor) {\n        visitor.visitNumber(this);\n    }\n}\nvar IntegerNumberTag;\n(function (IntegerNumberTag) {\n    IntegerNumberTag[IntegerNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTag || (IntegerNumberTag = {}));\nexport class IntegerNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._integerNumberTag = IntegerNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitIntegerNumber(this);\n    }\n}\nvar RealNumberTag;\n(function (RealNumberTag) {\n    RealNumberTag[RealNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(RealNumberTag || (RealNumberTag = {}));\nexport class RealNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._realNumberTag = RealNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRealNumber(this);\n    }\n}\nexport class ConstantCharacterNode extends OperandNode {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n    accept(visitor) {\n        visitor.visitConstantCharacter(this);\n    }\n}\nexport class TextNode extends OperandNode {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n    accept(visitor) {\n        visitor.visitText(this);\n    }\n}\nexport var FixedMessagePattern;\n(function (FixedMessagePattern) {\n    FixedMessagePattern[FixedMessagePattern[\"Any\"] = 0] = \"Any\";\n    FixedMessagePattern[FixedMessagePattern[\"Finish\"] = 1] = \"Finish\";\n})(FixedMessagePattern || (FixedMessagePattern = {}));\nexport class InputReceiveTestNode extends OperandNode {\n    constructor(location, designator, pattern) {\n        super(location);\n        this.designator = designator;\n        this.pattern = pattern;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getPattern() {\n        return this.pattern;\n    }\n}\nvar ReceiveTestTag;\n(function (ReceiveTestTag) {\n    ReceiveTestTag[ReceiveTestTag[\"Tag\"] = 0] = \"Tag\";\n})(ReceiveTestTag || (ReceiveTestTag = {}));\nexport class ReceiveTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = ReceiveTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitReceiveTest(this);\n    }\n}\nvar InputTestTag;\n(function (InputTestTag) {\n    InputTestTag[InputTestTag[\"Tag\"] = 0] = \"Tag\";\n})(InputTestTag || (InputTestTag = {}));\nexport class InputTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = InputTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitInputTest(this);\n    }\n}\nexport class ExistsTestNode extends OperandNode {\n    constructor(location, designator) {\n        super(location);\n        this.designator = designator;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    accept(visitor) {\n        visitor.visitExistsTest(this);\n    }\n}\nexport class FunctionCallNode extends OperandNode {\n    constructor(location, name, args) {\n        super(location);\n        this.name = name;\n        this.args = args;\n    }\n    getName() {\n        return this.name;\n    }\n    getArguments() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitFunctionCall(this);\n    }\n}\n//# sourceMappingURL=operand.js.map","import { OperandNode } from './operand';\nvar DesignatorTag;\n(function (DesignatorTag) {\n    DesignatorTag[DesignatorTag[\"Tag\"] = 0] = \"Tag\";\n})(DesignatorTag || (DesignatorTag = {}));\nexport class DesignatorNode extends OperandNode {\n    constructor() {\n        super(...arguments);\n        this._tag = DesignatorTag.Tag;\n    }\n}\nexport class BasicDesignatorNode extends DesignatorNode {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitBasicDesignator(this);\n    }\n}\nexport class BasicExpressionDesignatorNode extends DesignatorNode {\n    constructor(location, name, expressions) {\n        super(location);\n        this.name = name;\n        this.expressions = expressions;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpressions() {\n        return this.expressions;\n    }\n    accept(visitor) {\n        visitor.visitBasicExpressionDesignator(this);\n    }\n}\nexport class BaseTargetDesignatorNode extends DesignatorNode {\n    constructor(location, base, target) {\n        super(location);\n        this.base = base;\n        this.target = target;\n    }\n    getBase() {\n        return this.base;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitBaseTargetDesignator(this);\n    }\n}\nexport class DesignatorTypeNode extends DesignatorNode {\n    constructor(location, designator, type) {\n        super(location);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitDesignatorType(this);\n    }\n}\n//# sourceMappingURL=designator.js.map","import { Node } from './node';\nexport class InterfaceDeclarationNode extends Node {\n    constructor(location, name, cardinality) {\n        super(location);\n        this.name = name;\n        this.cardinality = cardinality;\n    }\n    getName() {\n        return this.name;\n    }\n    getCardinality() {\n        return this.cardinality;\n    }\n    accept(visitor) {\n        visitor.visitInterfaceDeclaration(this);\n    }\n}\nvar OfferedInterfaceTag;\n(function (OfferedInterfaceTag) {\n    OfferedInterfaceTag[OfferedInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(OfferedInterfaceTag || (OfferedInterfaceTag = {}));\nexport class OfferedInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OfferedInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOfferedInterface(this);\n    }\n}\nvar RequiredInterfaceTag;\n(function (RequiredInterfaceTag) {\n    RequiredInterfaceTag[RequiredInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(RequiredInterfaceTag || (RequiredInterfaceTag = {}));\nexport class RequiredInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RequiredInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRequiredInterfface(this);\n    }\n}\n//# sourceMappingURL=interface-declaration.js.map","import { Node } from './node';\nexport class ImplementationNode extends Node {\n    constructor(location, name, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitImplementation(this);\n    }\n}\n//# sourceMappingURL=implementation.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class InterfaceNode extends DeclarationNode {\n    constructor(location, name, protocol) {\n        super(location);\n        this.name = name;\n        this.protocol = protocol;\n    }\n    getName() {\n        return this.name;\n    }\n    getProtocol() {\n        return this.protocol;\n    }\n    accept(visitor) {\n        visitor.visitInterface(this);\n    }\n}\nexport class ProtocolNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocol(this);\n    }\n}\nexport class ProtocolExpressionNode extends Node {\n    constructor(location, terms) {\n        super(location);\n        this.terms = terms;\n    }\n    getTerms() {\n        return this.terms;\n    }\n    accept(visitor) {\n        visitor.visitProtocolExpression(this);\n    }\n}\nexport class ProtocolTermNode extends Node {\n    constructor(location, factors) {\n        super(location);\n        this.factors = factors;\n    }\n    getFactors() {\n        return this.factors;\n    }\n    accept(visitor) {\n        visitor.visitProtocolTerm(this);\n    }\n}\n//# sourceMappingURL=interface.js.map","import { Node } from './node';\nvar ProtocolFactorTag;\n(function (ProtocolFactorTag) {\n    ProtocolFactorTag[ProtocolFactorTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorTag || (ProtocolFactorTag = {}));\nexport class ProtocolFactorNode extends Node {\n    constructor(location) {\n        super(location);\n        this._protocolFactorTag = ProtocolFactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactor(this);\n    }\n}\nexport var MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[MessageDirection[\"IN\"] = 0] = \"IN\";\n    MessageDirection[MessageDirection[\"OUT\"] = 1] = \"OUT\";\n})(MessageDirection || (MessageDirection = {}));\nexport class MessageDeclarationNode extends ProtocolFactorNode {\n    constructor(location, direction, name, params) {\n        super(location);\n        this.direction = direction;\n        this.name = name;\n        this.params = params;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitMessageDeclaration(this);\n    }\n}\nvar ProtocolFactorExpressionTag;\n(function (ProtocolFactorExpressionTag) {\n    ProtocolFactorExpressionTag[ProtocolFactorExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorExpressionTag || (ProtocolFactorExpressionTag = {}));\nexport class ProtocolFactorExpressionNode extends ProtocolFactorNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n        this._protocolFactorExpressionTag = ProtocolFactorExpressionTag.Tag;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactorExpression(this);\n    }\n}\nvar OptionalProtocolExpressionTag;\n(function (OptionalProtocolExpressionTag) {\n    OptionalProtocolExpressionTag[OptionalProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(OptionalProtocolExpressionTag || (OptionalProtocolExpressionTag = {}));\nexport class OptionalProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OptionalProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOptionalProtocolFactorExpression(this);\n    }\n}\nvar RepeatingProtocolExpressionTag;\n(function (RepeatingProtocolExpressionTag) {\n    RepeatingProtocolExpressionTag[RepeatingProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(RepeatingProtocolExpressionTag || (RepeatingProtocolExpressionTag = {}));\nexport class RepeatingProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RepeatingProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRepeatingProtocolFactorExpression(this);\n    }\n}\nvar GroupProtocolExpressionTag;\n(function (GroupProtocolExpressionTag) {\n    GroupProtocolExpressionTag[GroupProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(GroupProtocolExpressionTag || (GroupProtocolExpressionTag = {}));\nexport class GroupProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = GroupProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitGroupProtocolFactorExpression(this);\n    }\n}\n//# sourceMappingURL=protocol-factor.js.map","import { Node } from './node';\nexport class NameNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitName(this);\n    }\n}\nexport class IndexedNameNode extends Node {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitIndexedName(this);\n    }\n}\n//# sourceMappingURL=name.js.map","import { Node } from './node';\nexport class ParameterNode extends Node {\n    constructor(location, names, type) {\n        super(location);\n        this.names = names;\n        this.type = type;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitParameter(this);\n    }\n}\n//# sourceMappingURL=parameter.js.map","import { DeclarationNode } from './declaration';\nimport { Node } from './node';\nexport class ProcedureNode extends DeclarationNode {\n    constructor(location, name, params, type, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.params = params;\n        this.type = type;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    getType() {\n        return this.type;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitProcedure(this);\n    }\n}\nexport class ProcedureParameterNode extends Node {\n    constructor(location, mutable, parameter) {\n        super(location);\n        this.mutable = mutable;\n        this.parameter = parameter;\n    }\n    isMutable() {\n        return this.mutable;\n    }\n    getParameter() {\n        return this.parameter;\n    }\n    accept(visitor) {\n        visitor.visitProcedureParameter(this);\n    }\n}\n//# sourceMappingURL=procedure.js.map","import { Node } from './node';\nexport class ProgramNode extends Node {\n    constructor(location, components, interfaces) {\n        super(location);\n        this.components = components;\n        this.interfaces = interfaces;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitProgram(this);\n    }\n}\n//# sourceMappingURL=program.js.map","import { Node } from './node';\nvar StatementTag;\n(function (StatementTag) {\n    StatementTag[StatementTag[\"Tag\"] = 0] = \"Tag\";\n})(StatementTag || (StatementTag = {}));\nexport class StatementNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._statementTag = StatementTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitStatement(this);\n    }\n}\nexport class ProcedureCallNode extends StatementNode {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitProcedureCall(this);\n    }\n}\nexport class AssignmentNode extends StatementNode {\n    constructor(location, designator, expression) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAssignment(this);\n    }\n}\nexport class NewNode extends StatementNode {\n    constructor(location, designator, args) {\n        super(location);\n        this.designator = designator;\n        this.args = args;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitNew(this);\n    }\n}\nexport class ConnectNode extends StatementNode {\n    constructor(location, what, to) {\n        super(location);\n        this.what = what;\n        this.to = to;\n    }\n    getWhat() {\n        return this.what;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitConnect(this);\n    }\n}\nexport class DisconnectNode extends StatementNode {\n    constructor(location, what) {\n        super(location);\n        this.what = what;\n    }\n    getWhat() {\n        return this.what;\n    }\n    accept(visitor) {\n        visitor.visitDisconnect(this);\n    }\n}\nexport class SendNode extends StatementNode {\n    constructor(location, from, target, args) {\n        super(location);\n        this.from = from;\n        this.target = target;\n        this.args = args;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTarget() {\n        return this.target;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitSend(this);\n    }\n}\nexport class ReceiveNode extends StatementNode {\n    constructor(location, from, receiver, targets) {\n        super(location);\n        this.from = from;\n        this.receiver = receiver;\n        this.targets = targets;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getReceiver() {\n        return this.receiver;\n    }\n    getTargets() {\n        return this.targets;\n    }\n    accept(visitor) {\n        visitor.visitReceive(this);\n    }\n}\nexport class DeleteNode extends StatementNode {\n    constructor(location, target) {\n        super(location);\n        this.target = target;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitDelete(this);\n    }\n}\nexport class MoveNode extends StatementNode {\n    constructor(location, from, to) {\n        super(location);\n        this.from = from;\n        this.to = to;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitMove(this);\n    }\n}\nexport class AwaitNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAwait(this);\n    }\n}\nexport class ReturnNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitReturn(this);\n    }\n}\nexport class IfNode extends StatementNode {\n    constructor(location, expression, then, elseIfs, elseNode) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n        this.elseIfs = elseIfs;\n        this.elseNode = elseNode;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    getElseIfs() {\n        return this.elseIfs;\n    }\n    getElse() {\n        return this.elseNode;\n    }\n    accept(visitor) {\n        visitor.visitIf(this);\n    }\n}\nexport class ElseIfNode extends StatementNode {\n    constructor(location, expression, then) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    accept(visitor) {\n        visitor.visitElseIf(this);\n    }\n}\nexport class WhileNode extends StatementNode {\n    constructor(location, expression, body) {\n        super(location);\n        this.expression = expression;\n        this.body = body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitWhile(this);\n    }\n}\nexport class RepeatNode extends StatementNode {\n    constructor(location, body, expression) {\n        super(location);\n        this.body = body;\n        this.expression = expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitRepeat(this);\n    }\n}\nexport class ForNode extends StatementNode {\n    constructor(location, designator, expression, to, by, statements) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n        this.to = to;\n        this.by = by;\n        this.statements = statements;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getTo() {\n        return this.to;\n    }\n    getBy() {\n        return this.by;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitFor(this);\n    }\n}\nexport class ForeachNode extends StatementNode {\n    constructor(location, designators, of, body) {\n        super(location);\n        this.designators = designators;\n        this.of = of;\n        this.body = body;\n    }\n    getDesignators() {\n        return this.designators;\n    }\n    getOf() {\n        return this.of;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitForeach(this);\n    }\n}\nexport class StatementBlockNode extends StatementNode {\n    constructor(location, statements) {\n        super(location);\n        this.statements = statements;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementBlock(this);\n    }\n}\n//# sourceMappingURL=statement.js.map","import { Node } from './node';\nvar TypeTag;\n(function (TypeTag) {\n    TypeTag[TypeTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeTag || (TypeTag = {}));\nexport class TypeNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = TypeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitType(this);\n    }\n}\nexport class BasicTypeNode extends TypeNode {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n    accept(visitor) {\n        visitor.visitBasicType(this);\n    }\n}\nexport class AnyTypeNode extends TypeNode {\n    constructor(location, offered, required) {\n        super(location);\n        this.offered = offered;\n        this.required = required;\n    }\n    getOffered() {\n        return this.offered;\n    }\n    getRequired() {\n        return this.required;\n    }\n    accept(visitor) {\n        visitor.visitAnyType(this);\n    }\n}\n//# sourceMappingURL=type.js.map","import { Node } from './node';\nexport class StatementSequenceNode extends Node {\n    constructor(location, attributes, statements) {\n        super(location);\n        this.attributes = attributes;\n        this.statements = statements;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementSequence(this);\n    }\n}\n//# sourceMappingURL=statement-sequence.js.map","export var IdentifierKeywords;\n(function (IdentifierKeywords) {\n    IdentifierKeywords[\"New\"] = \"NEW\";\n    IdentifierKeywords[\"Conncet\"] = \"CONNECT\";\n    IdentifierKeywords[\"Disconnect\"] = \"DISCONNECT\";\n    IdentifierKeywords[\"Delete\"] = \"DELETE\";\n    IdentifierKeywords[\"Move\"] = \"MOVE\";\n    IdentifierKeywords[\"Await\"] = \"AWAIT\";\n    IdentifierKeywords[\"Input\"] = \"INPUT\";\n    IdentifierKeywords[\"Exists\"] = \"EXISTS\";\n})(IdentifierKeywords || (IdentifierKeywords = {}));\n//# sourceMappingURL=keywords.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class VariableNode extends Node {\n    constructor(location, names, type, attributes) {\n        super(location);\n        this.names = names;\n        this.type = type;\n        this.attributes = attributes;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitVariable(this);\n    }\n}\nexport class VariableListNode extends DeclarationNode {\n    constructor(location, variables) {\n        super(location);\n        this.variables = variables;\n    }\n    getVariables() {\n        return this.variables;\n    }\n    accept(visitor) {\n        visitor.visitVariableList(this);\n    }\n}\n//# sourceMappingURL=variable.js.map","import { ComponentNode } from './component';\nimport { ProcedureCallNode, AssignmentNode, NewNode, ConnectNode, DisconnectNode, SendNode, ReceiveNode, DeleteNode, MoveNode, AwaitNode, ReturnNode, IfNode, WhileNode, RepeatNode, ForNode, ForeachNode, StatementBlockNode, ElseIfNode, } from './statement';\nimport { InterfaceNode } from './interface';\nimport { AttributedExpressionNode, UnaryExpressionNode, BinaryExpressionNode, OffersRequiresExpressionNode, TypeCheckExpressionNode, } from './expression';\nimport { BasicTypeNode, AnyTypeNode } from './type';\nimport { ProcedureNode } from './procedure';\nimport { VariableListNode } from './variable';\nimport { BasicDesignatorNode, BasicExpressionDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, DesignatorNode, } from './designator';\nimport { FunctionCallNode, NumberNode, ConstantCharacterNode, TextNode, InputTestNode, ReceiveTestNode, ExistsTestNode, OperandNode, RealNumberNode, IntegerNumberNode, } from './operand';\nimport { UnaryFactorNode, FactorNode } from './factor';\nimport { TermNode, FactorChainNode, RightFactorNode } from './term';\nimport { TermChainNode, UnaryTermNode, SimpleExpressionNode } from './simple-expression';\nimport { OfferedInterfaceNode, RequiredInterfaceNode } from './interface-declaration';\nimport { MessageDeclarationNode, ProtocolFactorExpressionNode, GroupProtocolExpressionNode, RepeatingProtocolExpressionNode, OptionalProtocolExpressionNode, } from './protocol-factor';\nimport { ConstantListNode } from './constant';\nexport class Visitor {\n    visitProtocolFactor(node) {\n        if (node instanceof MessageDeclarationNode) {\n            this.visitMessageDeclaration(node);\n            return;\n        }\n        if (node instanceof ProtocolFactorExpressionNode) {\n            this.visitProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMessageDeclaration(_node) { }\n    visitProtocolFactorExpression(node) {\n        if (node instanceof OptionalProtocolExpressionNode) {\n            this.visitOptionalProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof RepeatingProtocolExpressionNode) {\n            this.visitRepeatingProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof GroupProtocolExpressionNode) {\n            this.visitGroupProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOptionalProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitGroupProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeatingProtocolFactorExpression(_node) { }\n    visitType(node) {\n        if (node instanceof BasicTypeNode) {\n            this.visitBasicType(node);\n            return;\n        }\n        if (node instanceof AnyTypeNode) {\n            this.visitAnyType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicType(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAnyType(_node) { }\n    visitDesignator(node) {\n        if (node instanceof BasicDesignatorNode) {\n            this.visitBasicDesignator(node);\n            return;\n        }\n        if (node instanceof BasicExpressionDesignatorNode) {\n            this.visitBasicExpressionDesignator(node);\n            return;\n        }\n        if (node instanceof BaseTargetDesignatorNode) {\n            this.visitBaseTargetDesignator(node);\n            return;\n        }\n        if (node instanceof DesignatorTypeNode) {\n            this.visitDesignatorType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicExpressionDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBaseTargetDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDesignatorType(_node) { }\n    visitInterfaceDeclaration(node) {\n        if (node instanceof OfferedInterfaceNode) {\n            this.visitOfferedInterface(node);\n            return;\n        }\n        if (node instanceof RequiredInterfaceNode) {\n            this.visitRequiredInterfface(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOfferedInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRequiredInterfface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIndexedName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitCardinality(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProgram(_node) { }\n    visitDeclaration(node) {\n        if (node instanceof ComponentNode) {\n            this.visitComponent(node);\n            return;\n        }\n        if (node instanceof InterfaceNode) {\n            this.visitInterface(node);\n            return;\n        }\n        if (node instanceof ConstantListNode) {\n            this.visitConstantList(node);\n            return;\n        }\n        if (node instanceof VariableListNode) {\n            this.visitVariableList(node);\n            return;\n        }\n        if (node instanceof ProcedureNode) {\n            this.visitProcedure(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponent(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariableList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedure(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponentBody(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitImplementation(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocol(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolTerm(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAttribute(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementSequence(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstant(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariable(_node) { }\n    visitStatement(node) {\n        if (node instanceof ProcedureCallNode) {\n            this.visitProcedureCall(node);\n            return;\n        }\n        if (node instanceof AssignmentNode) {\n            this.visitAssignment(node);\n            return;\n        }\n        if (node instanceof NewNode) {\n            this.visitNew(node);\n            return;\n        }\n        if (node instanceof ConnectNode) {\n            this.visitConnect(node);\n            return;\n        }\n        if (node instanceof DisconnectNode) {\n            this.visitDisconnect(node);\n            return;\n        }\n        if (node instanceof SendNode) {\n            this.visitSend(node);\n            return;\n        }\n        if (node instanceof ReceiveNode) {\n            this.visitReceive(node);\n            return;\n        }\n        if (node instanceof DeleteNode) {\n            this.visitDelete(node);\n            return;\n        }\n        if (node instanceof MoveNode) {\n            this.visitMove(node);\n            return;\n        }\n        if (node instanceof AwaitNode) {\n            this.visitAwait(node);\n            return;\n        }\n        if (node instanceof ReturnNode) {\n            this.visitReturn(node);\n            return;\n        }\n        if (node instanceof IfNode) {\n            this.visitIf(node);\n            return;\n        }\n        if (node instanceof ElseIfNode) {\n            this.visitElseIf(node);\n            return;\n        }\n        if (node instanceof WhileNode) {\n            this.visitWhile(node);\n            return;\n        }\n        if (node instanceof RepeatNode) {\n            this.visitRepeat(node);\n            return;\n        }\n        if (node instanceof ForNode) {\n            this.visitFor(node);\n            return;\n        }\n        if (node instanceof ForeachNode) {\n            this.visitForeach(node);\n            return;\n        }\n        if (node instanceof StatementBlockNode) {\n            this.visitStatementBlock(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureCall(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAssignment(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitNew(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDisconnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitSend(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceive(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDelete(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMove(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAwait(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReturn(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitElseIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitWhile(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeat(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitForeach(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementBlock(_node) { }\n    visitExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof AttributedExpressionNode) {\n            this.visitAttributedExpression(node);\n            return;\n        }\n    }\n    visitAttributedExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof UnaryExpressionNode) {\n            this.visitUnaryExpression(node);\n            return;\n        }\n        if (node instanceof BinaryExpressionNode) {\n            this.visitBinaryExpression(node);\n            return;\n        }\n        if (node instanceof OffersRequiresExpressionNode) {\n            this.visitOffersRequiresExpression(node);\n            return;\n        }\n        if (node instanceof TypeCheckExpressionNode) {\n            this.visitTypeCheck(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBinaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOffersRequiresExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTypeCheck(_node) { }\n    visitSimpleExpression(node) {\n        if (node instanceof UnaryTermNode) {\n            this.visitUnaryTermNode(node);\n            return;\n        }\n        if (node instanceof TermChainNode) {\n            this.visitTermChain(node);\n            return;\n        }\n        if (node instanceof TermNode) {\n            this.visitTerm(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryTermNode(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTermChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightTerm(_node) { }\n    visitTerm(node) {\n        if (node instanceof FactorNode) {\n            this.visitFactor(node);\n            return;\n        }\n        if (node instanceof FactorChainNode) {\n            this.visitFactorChain(node);\n            return;\n        }\n        if (node instanceof RightFactorNode) {\n            this.visitRightFactor(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFactorChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightFactor(_node) { }\n    visitFactor(node) {\n        if (node instanceof UnaryFactorNode) {\n            this.visitUnaryFactor(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof OperandNode) {\n            this.visitOperand(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryFactor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExpressionFactor(_node) { }\n    visitOperand(node) {\n        if (node instanceof NumberNode) {\n            this.visitNumber(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof TextNode) {\n            this.visitText(node);\n            return;\n        }\n        if (node instanceof ReceiveTestNode) {\n            this.visitReceiveTest(node);\n            return;\n        }\n        if (node instanceof InputTestNode) {\n            this.visitInputTest(node);\n            return;\n        }\n        if (node instanceof ExistsTestNode) {\n            this.visitExistsTest(node);\n            return;\n        }\n        if (node instanceof FunctionCallNode) {\n            this.visitFunctionCall(node);\n            return;\n        }\n        if (node instanceof DesignatorNode) {\n            this.visitDesignator(node);\n            return;\n        }\n    }\n    visitNumber(node) {\n        if (node instanceof IntegerNumberNode) {\n            this.visitIntegerNumber(node);\n            return;\n        }\n        if (node instanceof RealNumberNode) {\n            this.visitRealNumber(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIntegerNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRealNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantCharacter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitText(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceiveTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInputTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExistsTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFunctionCall(_node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ProgramNode, ComponentNode, OfferedInterfaceNode, RequiredInterfaceNode, ComponentBodyNode, ImplementationNode, InterfaceNode, NameNode, StatementSequenceNode, AttributeNode, ProcedureCallNode, TextNode, ProtocolNode, ProtocolExpressionNode, ProtocolTermNode, MessageDeclarationNode, MessageDirection, ParameterNode, GroupProtocolExpressionNode, CardinalityNode, OptionalProtocolExpressionNode, RepeatingProtocolExpressionNode, BasicTypeNode, ConstantListNode, VariableListNode, ProcedureNode, ConstantNode, ConstantExpressionNode, VariableNode, IndexedNameNode, ProcedureParameterNode, AnyTypeNode, DesignatorNode, BasicExpressionDesignatorNode, BasicDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, NewNode, ConnectNode, DisconnectNode, DeleteNode, AwaitNode, MoveNode, SendNode, ReceiveNode, AssignmentNode, IfNode, ForeachNode, StatementBlockNode, ReturnNode, WhileNode, RepeatNode, ForNode, ElseIfNode, ConstantCharacterNode, ExistsTestNode, InputTestNode, FunctionCallNode, FixedMessagePattern, ReceiveTestNode, UnaryFactorNode, FactorPrefix, ExpressionFactorNode, UnaryExpressionNode, UnaryTermNode, InfixFactorOperator, FactorChainNode, RightFactorNode, RightTermNode, InfixTermOperator, PrefixOperator, LogicalOperator, BinaryExpressionNode, TermChainNode, OffersRequiresExpressionNode, OffersRequiresOperator, TypeCheckExpressionNode, RealNumberNode, IntegerNumberNode, } from '@composita/ast';\nimport { FixToken, IdentifierToken, TextToken, Tag, IntegerNumberToken, FloatNumberToken, HexNumberToken, } from '@composita/tokens';\nimport { SourceLocation } from '@composita/source-location';\nimport { NonEmptyArray } from '@composita/ts-utility-types';\nimport { CompilerDiagnostic } from '@composita/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nimport { IdentifierKeywords } from './keywords';\nexport class Parser {\n    constructor(diagnosis, lexer) {\n        this.diagnosis = diagnosis;\n        this.lexer = lexer;\n    }\n    hasTag(tag, n = 1) {\n        const token = this.lexer.peek(n);\n        return this.isTaggedFixToken(token, tag);\n    }\n    isTaggedFixToken(token, tag) {\n        return token instanceof FixToken && token.getTag() === tag;\n    }\n    hasIdentifier(identifier) {\n        const token = this.lexer.peek(1);\n        return token instanceof IdentifierToken && token.getIdentifier() === identifier;\n    }\n    isComponent() {\n        return this.hasTag(Tag.Component);\n    }\n    isInterface() {\n        return this.hasTag(Tag.Interface);\n    }\n    isEOT() {\n        return this.hasTag(Tag.EOT);\n    }\n    error(msg) {\n        const range = this.lexer.peek(1).getLocation().range;\n        this.diagnosis.log(new CompilerDiagnostic(range, DiagnosticSeverity.Error, msg));\n        throw new Error(`[${range.start.line},${range.start.character}:${range.end.line},${range.end.character}]: ${msg}`);\n    }\n    loop(predicate, body) {\n        while (predicate() && !this.isEOT()) {\n            body();\n        }\n    }\n    expectConsumeFixToken(tag) {\n        if (!this.tryConsumeFixToken(tag)) {\n            const msg = `Expected FixToken with Tag ${tag}`;\n            this.error(msg);\n        }\n    }\n    tryConsumeFixToken(tag) {\n        if (!this.hasTag(tag)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    expectConsumeIdentifierToken(identifier) {\n        if (!this.tryConsumeIdentifierToken(identifier)) {\n            const msg = `Expected IdentifierToken with Identifier ${identifier}`;\n            this.error(msg);\n        }\n    }\n    tryParse(parser) {\n        try {\n            this.diagnosis.saveState();\n            this.lexer.saveState();\n            const variable = parser();\n            this.lexer.popSaveState();\n            return variable;\n        }\n        catch (error) {\n            this.diagnosis.restoreState();\n            this.lexer.restoreState();\n            return undefined;\n        }\n    }\n    tryConsumeIdentifierToken(identifier) {\n        if (!this.hasIdentifier(identifier)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    parseName() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new NameNode(next.getLocation(), next.getIdentifier());\n        }\n        const msg = 'Failed to parse identifier name';\n        return this.error(msg);\n    }\n    parseIndexedName() {\n        const next = this.lexer.peek(1);\n        if (!(next instanceof IdentifierToken)) {\n            return this.error('Failed to parse indexed name.');\n        }\n        this.lexer.next();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const params = this.parseParameterList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new IndexedNameNode(SourceLocation.merge(next.getLocation(), end), next.getIdentifier(), params);\n        }\n        return new IndexedNameNode(next.getLocation(), next.getIdentifier(), new Array());\n    }\n    parseCardinality() {\n        if (!this.hasTag(Tag.OpenSquareBracket)) {\n            return undefined;\n        }\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.OpenSquareBracket);\n        let next = this.lexer.next();\n        if (!(next instanceof IntegerNumberToken)) {\n            return this.error('Expected number token.');\n        }\n        const min = next.getNumber();\n        let max = min;\n        if (this.tryConsumeFixToken(Tag.Ellipsis)) {\n            next = this.lexer.peek(1);\n            if (next instanceof IntegerNumberToken) {\n                this.lexer.next();\n                max = next.getNumber();\n            }\n            else if (this.hasTag(Tag.Asterisk)) {\n                this.lexer.next();\n                max = Infinity;\n            }\n            else {\n                this.error('Expected number or \"*\".');\n            }\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseSquareBracket);\n        return new CardinalityNode(SourceLocation.merge(start, end), min, max);\n    }\n    parseInterfaceDeclaration(InterfaceDeclaration) {\n        const name = this.parseName();\n        const cardinality = this.parseCardinality();\n        const location = cardinality === undefined\n            ? name.getLocation()\n            : SourceLocation.merge(name.getLocation(), cardinality.getLocation());\n        return new InterfaceDeclaration(location, name, cardinality);\n    }\n    parseOfferedInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(OfferedInterfaceNode);\n    }\n    parseRequiredInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(RequiredInterfaceNode);\n    }\n    parseOffers() {\n        const offered = new Array();\n        if (this.tryConsumeFixToken(Tag.Offers)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n        }\n        return offered;\n    }\n    parseRequires() {\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.Requires)) {\n            required.push(...this.parseRequiredInterfaceDeclarationList());\n        }\n        return required;\n    }\n    parseFunctionCall() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const args = new Array();\n        if (!this.hasTag(Tag.CloseParentheses)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new FunctionCallNode(SourceLocation.merge(name.getLocation(), end), name, args);\n    }\n    parseMessagePattern() {\n        if (this.tryConsumeFixToken(Tag.Any)) {\n            return FixedMessagePattern.Any;\n        }\n        if (this.tryConsumeFixToken(Tag.Finish)) {\n            return FixedMessagePattern.Finish;\n        }\n        return this.parseName();\n    }\n    tryParseExpression() {\n        return this.tryParse(this.parseExpression.bind(this));\n    }\n    parseReceiveTestExpression(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const end = this.lexer.peek(1).getLocation();\n        const pattern = this.parseMessagePattern();\n        return new ReceiveTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseInputTestExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Input);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        if (!this.hasTag(Tag.Comma)) {\n            if (designator instanceof BasicDesignatorNode) {\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new InputTestNode(SourceLocation.merge(start, end), undefined, designator.getName());\n            }\n            this.error('Failed parsing input test node.');\n        }\n        this.expectConsumeFixToken(Tag.Comma);\n        const pattern = this.parseMessagePattern();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new InputTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseExistsExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Exists);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ExistsTestNode(SourceLocation.merge(start, end), designator);\n    }\n    parseOperand() {\n        const token = this.lexer.peek(1);\n        if (token instanceof TextToken) {\n            this.lexer.next();\n            const text = token.getText();\n            if (text.length === 1) {\n                return new ConstantCharacterNode(token.getLocation(), text);\n            }\n            return new TextNode(token.getLocation(), text);\n        }\n        if (token instanceof IntegerNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof HexNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof FloatNumberToken) {\n            this.lexer.next();\n            return new RealNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Input)) {\n            return this.parseInputTestExpression();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Exists)) {\n            return this.parseExistsExpression();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveTestExpression(designator);\n        }\n        if (designator === undefined) {\n            return this.parseFunctionCall();\n        }\n        // we could still have a function call here, let this the checker handle.\n        return designator;\n    }\n    parseFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.tryConsumeFixToken(Tag.Tilde)) {\n            const node = this.parseFactor();\n            return new UnaryFactorNode(SourceLocation.merge(start, node.getLocation()), FactorPrefix.Not, node);\n        }\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const expression = this.parseExpression();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new ExpressionFactorNode(SourceLocation.merge(start, end), expression);\n        }\n        return this.parseOperand();\n    }\n    isFactorInfix() {\n        return (this.hasTag(Tag.Asterisk) ||\n            this.hasTag(Tag.Slash) ||\n            this.hasTag(Tag.Div) ||\n            this.hasTag(Tag.Mod) ||\n            this.hasTag(Tag.And));\n    }\n    parseFactorInfix() {\n        if (this.tryConsumeFixToken(Tag.Asterisk)) {\n            return InfixFactorOperator.Times;\n        }\n        if (this.tryConsumeFixToken(Tag.Slash)) {\n            return InfixFactorOperator.Div;\n        }\n        if (this.tryConsumeFixToken(Tag.Div)) {\n            return InfixFactorOperator.DivText;\n        }\n        if (this.tryConsumeFixToken(Tag.Mod)) {\n            return InfixFactorOperator.ModText;\n        }\n        if (this.tryConsumeFixToken(Tag.And)) {\n            return InfixFactorOperator.AndText;\n        }\n        return this.error('Failed to parse factor infix.');\n    }\n    parseRightFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseFactorInfix();\n        const rightFactor = this.parseFactor();\n        return new RightFactorNode(SourceLocation.merge(start, rightFactor.getLocation()), op, rightFactor);\n    }\n    parseTerm() {\n        const factor = this.parseFactor();\n        if (!this.isFactorInfix()) {\n            return factor;\n        }\n        const rightFactors = this.parseListWithPredicate(this.parseRightFactor.bind(this), this.isFactorInfix.bind(this));\n        return new FactorChainNode(SourceLocation.merge(factor.getLocation(), rightFactors[rightFactors.length - 1].getLocation()), factor, rightFactors);\n    }\n    isTermInfix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus) || this.hasTag(Tag.Or);\n    }\n    parseTermInfix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return InfixTermOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return InfixTermOperator.Minus;\n        }\n        if (this.tryConsumeFixToken(Tag.Or)) {\n            return InfixTermOperator.Or;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseRightTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseTermInfix();\n        const rightTerm = this.parseTerm();\n        return new RightTermNode(SourceLocation.merge(start, rightTerm.getLocation()), op, rightTerm);\n    }\n    isTermPrefix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus);\n    }\n    parseUnaryPrefix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return PrefixOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return PrefixOperator.Minus;\n        }\n        return this.error('Failed to parse prefix operator.');\n    }\n    parseUnaryTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseUnaryPrefix();\n        const term = this.parseTerm();\n        return new UnaryTermNode(SourceLocation.merge(start, term.getLocation()), op, term);\n    }\n    parseSimpleExpression() {\n        const left = this.isTermPrefix() ? this.parseUnaryTerm() : this.parseTerm();\n        if (!this.isTermInfix()) {\n            return left;\n        }\n        const rightTerms = this.parseListWithPredicate(this.parseRightTerm.bind(this), this.isTermInfix.bind(this));\n        return new TermChainNode(SourceLocation.merge(left.getLocation(), rightTerms[rightTerms.length - 1].getLocation()), left, rightTerms);\n    }\n    isBinaryExpressionOperator() {\n        return (this.hasTag(Tag.Equal) ||\n            this.hasTag(Tag.NumberSign) ||\n            this.hasTag(Tag.Less) ||\n            this.hasTag(Tag.LessEqual) ||\n            this.hasTag(Tag.Greater) ||\n            this.hasTag(Tag.GreaterEqual));\n    }\n    parseBinaryExpressionOperator() {\n        if (this.tryConsumeFixToken(Tag.Equal)) {\n            return LogicalOperator.Equal;\n        }\n        if (this.tryConsumeFixToken(Tag.NumberSign)) {\n            return LogicalOperator.NotEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Less)) {\n            return LogicalOperator.Less;\n        }\n        if (this.tryConsumeFixToken(Tag.LessEqual)) {\n            return LogicalOperator.LessEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Greater)) {\n            return LogicalOperator.More;\n        }\n        if (this.tryConsumeFixToken(Tag.GreaterEqual)) {\n            return LogicalOperator.MoreEqual;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseBinaryExpression(start, attributes, left) {\n        const op = this.parseBinaryExpressionOperator();\n        const right = this.parseSimpleExpression();\n        return new BinaryExpressionNode(SourceLocation.merge(start, right.getLocation()), attributes, left, op, right);\n    }\n    parseExpression() {\n        const attributes = this.parseAttributeList();\n        const simpleExpression = this.parseSimpleExpression();\n        if (simpleExpression instanceof DesignatorNode) {\n            const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n            if (this.tryConsumeFixToken(Tag.Offers)) {\n                const offeredList = this.parseOfferedInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, offeredList[offeredList.length - 1].getLocation()), attributes, OffersRequiresOperator.Offers, offeredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Requires)) {\n                const requiredList = this.parseRequiredInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, requiredList[requiredList.length - 1].getLocation()), attributes, OffersRequiresOperator.Requires, requiredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Is)) {\n                const type = this.parseType();\n                return new TypeCheckExpressionNode(SourceLocation.merge(start, type.getLocation()), attributes, simpleExpression, type);\n            }\n            if (this.isBinaryExpressionOperator()) {\n                return this.parseBinaryExpression(start, attributes, simpleExpression);\n            }\n            return simpleExpression;\n        }\n        const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n        if (!this.isBinaryExpressionOperator()) {\n            return new UnaryExpressionNode(SourceLocation.merge(start, simpleExpression.getLocation()), attributes, simpleExpression);\n        }\n        return this.parseBinaryExpression(start, attributes, simpleExpression);\n    }\n    parseProcedureCall() {\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ProcedureCallNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n    }\n    parseStatementSequenceBlock(tag) {\n        let statements = undefined;\n        if (this.hasTag(tag)) {\n            const beginStart = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(tag);\n            statements = this.parseStatementSequence(beginStart);\n        }\n        return statements;\n    }\n    parseBasicDesignator() {\n        const name = this.parseName();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const expressions = this.parseExpressionList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new BasicExpressionDesignatorNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n        }\n        return new BasicDesignatorNode(name.getLocation(), name);\n    }\n    parseDesignator() {\n        const designator = this.parseBasicDesignator();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            // if ANY we assume type otherwise designator.\n            // see original CCParser implementation\n            if (this.hasTag(Tag.Any)) {\n                const type = this.parseType();\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new DesignatorTypeNode(SourceLocation.merge(designator.getLocation(), end), designator, type);\n            }\n            const target = this.parseDesignator();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new BaseTargetDesignatorNode(SourceLocation.merge(designator.getLocation(), end), designator, target);\n        }\n        return designator;\n    }\n    tryParseDesignator() {\n        return this.tryParse(this.parseDesignator.bind(this));\n    }\n    parseStatementSequence(start) {\n        const attributes = this.parseAttributeList();\n        const statements = this.parseStatementList();\n        const end = statements[statements.length - 1].getLocation();\n        return new StatementSequenceNode(SourceLocation.merge(start, end), attributes, statements);\n    }\n    parseNewStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.New);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const args = new Array();\n        if (this.tryConsumeFixToken(Tag.Comma)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new NewNode(SourceLocation.merge(start, end), designator, args);\n    }\n    parseDeleteStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Delete);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DeleteNode(SourceLocation.merge(start, end), designator);\n    }\n    parseConnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Conncet);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ConnectNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseDisconnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Disconnect);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DisconnectNode(SourceLocation.merge(start, end), designator);\n    }\n    parseMoveStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Move);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new MoveNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseAwaitStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Await);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const expression = this.parseExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new AwaitNode(SourceLocation.merge(start, end), expression);\n    }\n    parseSendStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.ExclamationMark);\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new SendNode(SourceLocation.merge(start, end), designator, name, expressions);\n    }\n    parseReceiveStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const name = this.parseName();\n        const designators = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            designators.push(...this.parseDesignatorList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ReceiveNode(SourceLocation.merge(start, end), designator, name, designators);\n    }\n    parseAssignmentStatement(designator) {\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const expression = this.parseExpression();\n        return new AssignmentNode(SourceLocation.merge(designator.getLocation(), expression.getLocation()), designator, expression);\n    }\n    parseReturnStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Return);\n        const expression = this.tryParseExpression();\n        return new ReturnNode(SourceLocation.merge(start, expression?.getLocation() ?? start), expression);\n    }\n    parseIfStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.If);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Then);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const elsIfs = new Array();\n        this.loop(() => this.hasTag(Tag.Elsif), () => {\n            const start = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.Elsif);\n            const expression = this.parseExpression();\n            this.expectConsumeFixToken(Tag.Then);\n            const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n            elsIfs.push(new ElseIfNode(SourceLocation.merge(start, sequence.getLocation()), expression, sequence));\n        });\n        let elseSequence = undefined;\n        if (this.tryConsumeFixToken(Tag.Else)) {\n            elseSequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new IfNode(SourceLocation.merge(start, end), expression, sequence, elsIfs, elseSequence);\n    }\n    parseWhileStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.While);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new WhileNode(SourceLocation.merge(start, end), expression, sequence);\n    }\n    parseRepeatStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Repeat);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        this.expectConsumeFixToken(Tag.Until);\n        const expression = this.parseExpression();\n        return new RepeatNode(SourceLocation.merge(start, expression.getLocation()), sequence, expression);\n    }\n    parseForStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.For);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const assignExpression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.To);\n        const expression = this.parseExpression();\n        let stride = undefined;\n        if (this.tryConsumeFixToken(Tag.By)) {\n            stride = this.parseConstantExpression();\n        }\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForNode(SourceLocation.merge(start, end), designator, assignExpression, expression, stride, sequence);\n    }\n    parseForeachStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Foreach);\n        const designators = this.parseDesignatorList();\n        this.expectConsumeFixToken(Tag.Of);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForeachNode(SourceLocation.merge(start, end), designators, designator, sequence);\n    }\n    parseStatementBlock() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Begin);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new StatementBlockNode(SourceLocation.merge(start, end), sequence);\n    }\n    parseStatement() {\n        if (this.hasIdentifier(IdentifierKeywords.New)) {\n            return this.parseNewStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Delete)) {\n            return this.parseDeleteStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Conncet)) {\n            return this.parseConnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Disconnect)) {\n            return this.parseDisconnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Move)) {\n            return this.parseMoveStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Await)) {\n            return this.parseAwaitStatement();\n        }\n        if (this.hasTag(Tag.Return)) {\n            return this.parseReturnStatement();\n        }\n        if (this.hasTag(Tag.If)) {\n            return this.parseIfStatement();\n        }\n        if (this.hasTag(Tag.While)) {\n            return this.parseWhileStatement();\n        }\n        if (this.hasTag(Tag.Repeat)) {\n            return this.parseRepeatStatement();\n        }\n        if (this.hasTag(Tag.For)) {\n            return this.parseForStatement();\n        }\n        if (this.hasTag(Tag.Foreach)) {\n            return this.parseForeachStatement();\n        }\n        if (this.hasTag(Tag.Begin)) {\n            return this.parseStatementBlock();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.ExclamationMark)) {\n            return this.parseSendStatement(designator);\n        }\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveStatement(designator);\n        }\n        if (designator === undefined) {\n            return this.parseProcedureCall();\n        }\n        if (this.hasTag(Tag.ColonEqual)) {\n            return this.parseAssignmentStatement(designator);\n        }\n        if (designator instanceof BasicDesignatorNode) {\n            return new ProcedureCallNode(designator.getLocation(), designator.getName(), new Array());\n        }\n        if (designator instanceof BaseTargetDesignatorNode) {\n            const base = designator.getBase();\n            if (base instanceof BasicDesignatorNode) {\n                return new ProcedureCallNode(designator.getLocation(), base.getName(), new Array(designator.getTarget()));\n            }\n        }\n        return this.error('Failed to parse statement. Unknown statement.');\n    }\n    parseConstantExpression() {\n        const expression = this.parseExpression();\n        return new ConstantExpressionNode(expression.getLocation(), expression);\n    }\n    parseConstant() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Equal);\n        const expression = this.parseConstantExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new ConstantNode(SourceLocation.merge(name.getLocation(), end), name, expression);\n    }\n    tryParseConstant() {\n        return this.tryParse(this.parseConstant.bind(this));\n    }\n    parseConstantList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Constant);\n        const constants = new NonEmptyArray(this.parseConstant());\n        let parsedConstant = true;\n        this.loop(() => parsedConstant, () => {\n            const constant = this.tryParseConstant();\n            if (constant === undefined) {\n                parsedConstant = false;\n                return;\n            }\n            constants.push(constant);\n        });\n        return new ConstantListNode(SourceLocation.merge(start, constants[constants.length - 1].getLocation()), constants);\n    }\n    parseVariable() {\n        const start = this.lexer.peek(1).getLocation();\n        const names = this.parseIndexedIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        const attributes = this.parseAttributeList();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new VariableNode(SourceLocation.merge(start, end), names, type, attributes);\n    }\n    tryParseVariable() {\n        return this.tryParse(this.parseVariable.bind(this));\n    }\n    parseVariableList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Variable);\n        const variables = new NonEmptyArray(this.parseVariable());\n        let parsedVariable = true;\n        this.loop(() => parsedVariable, () => {\n            const variable = this.tryParseVariable();\n            if (variable === undefined) {\n                parsedVariable = false;\n                return;\n            }\n            variables.push(variable);\n        });\n        return new VariableListNode(SourceLocation.merge(start, variables[variables.length - 1].getLocation()), variables);\n    }\n    parseProcedure() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Procedure);\n        const name = this.parseName();\n        const params = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            if (!this.hasTag(Tag.CloseParentheses)) {\n                params.push(...this.parseProcedureParameterList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        const type = this.tryConsumeFixToken(Tag.Colon) ? this.parseType() : undefined;\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = new Array();\n        let beginBlock = undefined;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (beginBlock === undefined) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                return;\n            }\n            breakLoop = true;\n        });\n        const end = this.consumeEnd(name);\n        return new ProcedureNode(SourceLocation.merge(start, end), name, params, type, declarations, beginBlock);\n    }\n    parseDeclaration() {\n        if (this.hasTag(Tag.Component)) {\n            return this.parseComponent();\n        }\n        if (this.hasTag(Tag.Interface)) {\n            return this.parseInterface();\n        }\n        if (this.hasTag(Tag.Constant)) {\n            return this.parseConstantList();\n        }\n        if (this.hasTag(Tag.Variable)) {\n            return this.parseVariableList();\n        }\n        if (this.hasTag(Tag.Procedure)) {\n            return this.parseProcedure();\n        }\n        return undefined;\n    }\n    parseComponentBody() {\n        const start = this.lexer.peek(1).getLocation();\n        let beginBlock = undefined;\n        let activityBlock = undefined;\n        let finallyBlock = undefined;\n        const declarations = new Array();\n        const implementations = new Array();\n        let end = start;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                implementations.push(this.parseImplementation());\n                return;\n            }\n            if (beginBlock !== undefined && this.hasTag(Tag.Begin)) {\n                this.error('Cannot have more than one begin per component.');\n            }\n            if (beginBlock === undefined && this.hasTag(Tag.Begin)) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                if (beginBlock !== undefined) {\n                    end = beginBlock.getLocation();\n                }\n                return;\n            }\n            if (activityBlock !== undefined && this.hasTag(Tag.Activity)) {\n                this.error('Cannot have more than one activity per component.');\n            }\n            if (activityBlock === undefined && this.hasTag(Tag.Activity)) {\n                activityBlock = this.parseStatementSequenceBlock(Tag.Activity);\n                if (activityBlock !== undefined) {\n                    end = activityBlock.getLocation();\n                }\n                return;\n            }\n            if (finallyBlock !== undefined && this.hasTag(Tag.Finally)) {\n                this.error('Cannot have more than one finally per component.');\n            }\n            if (finallyBlock === undefined && this.hasTag(Tag.Finally)) {\n                finallyBlock = this.parseStatementSequenceBlock(Tag.Finally);\n                if (finallyBlock !== undefined) {\n                    end = finallyBlock.getLocation();\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Component)) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    declarations.push(component);\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                const implementation = this.parseImplementation();\n                if (implementation !== undefined) {\n                    implementations.push(implementation);\n                }\n                return;\n            }\n            breakLoop = true;\n        });\n        return new ComponentBodyNode(SourceLocation.merge(start, end), declarations, implementations, beginBlock, activityBlock, finallyBlock);\n    }\n    consumeEnd(name) {\n        this.expectConsumeFixToken(Tag.End);\n        const endName = this.parseName();\n        if (endName.getName() !== name.getName()) {\n            this.error('Name missmatch.');\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return end;\n    }\n    parseComponent() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Component);\n        const attributes = this.parseAttributeList();\n        const name = this.parseName();\n        const offers = this.parseOffers();\n        const requires = this.parseRequires();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const body = this.parseComponentBody();\n        const end = this.consumeEnd(name);\n        return new ComponentNode(SourceLocation.merge(start, end), name, attributes, offers, requires, body);\n    }\n    parseImplementation() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Implementation);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = this.parseDeclarationList();\n        const statements = this.parseStatementSequenceBlock(Tag.Begin);\n        const end = this.consumeEnd(name);\n        return new ImplementationNode(SourceLocation.merge(start, end), name, declarations, statements);\n    }\n    parseListWithPredicate(parseFunction, pred) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => pred(), () => {\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseList(parseFunction, separator) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => this.hasTag(separator), () => {\n            this.expectConsumeFixToken(separator);\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseIdentifierList() {\n        return this.parseList(this.parseName.bind(this), Tag.Comma);\n    }\n    parseParameterList() {\n        return this.parseList(this.parseParameter.bind(this), Tag.Semicolon);\n    }\n    parseProcedureParameterList() {\n        return this.parseList(this.parseProcedureParameter.bind(this), Tag.Semicolon);\n    }\n    parseIndexedIdentifierList() {\n        return this.parseList(this.parseIndexedName.bind(this), Tag.Comma);\n    }\n    parseExpressionList() {\n        return this.parseList(this.parseExpression.bind(this), Tag.Comma);\n    }\n    parseDesignatorList() {\n        return this.parseList(this.parseDesignator.bind(this), Tag.Comma);\n    }\n    parseOfferedInterfaceDeclarationList() {\n        return this.parseList(this.parseOfferedInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseRequiredInterfaceDeclarationList() {\n        return this.parseList(this.parseRequiredInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseStatementList() {\n        return this.parseList(this.parseStatement.bind(this), Tag.Semicolon);\n    }\n    parseAttributeList() {\n        if (!this.hasTag(Tag.OpenBrace)) {\n            return new Array();\n        }\n        this.expectConsumeFixToken(Tag.OpenBrace);\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.CloseBrace);\n        return names.map((name) => new AttributeNode(name.getLocation(), name));\n    }\n    parseDeclarationList() {\n        const declarations = new Array();\n        let foundDeclaration = true;\n        this.loop(() => foundDeclaration, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration === undefined) {\n                foundDeclaration = false;\n                return;\n            }\n            declarations.push(declaration);\n        });\n        return declarations;\n    }\n    parseType() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new BasicTypeNode(next.getLocation(), next.getIdentifier());\n        }\n        this.expectConsumeFixToken(Tag.Any);\n        const offered = new Array();\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n            if (this.tryConsumeFixToken(Tag.Pipe)) {\n                required.push(...this.parseRequiredInterfaceDeclarationList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new AnyTypeNode(next.getLocation(), offered, required);\n    }\n    parseParameter() {\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        return new ParameterNode(SourceLocation.merge(names[0].getLocation(), type.getLocation()), names, type);\n    }\n    parseProcedureParameter() {\n        const mutable = this.hasTag(Tag.Variable);\n        const start = this.lexer.peek(1).getLocation();\n        if (mutable) {\n            this.expectConsumeFixToken(Tag.Variable);\n        }\n        const param = this.parseParameter();\n        return new ProcedureParameterNode(SourceLocation.merge(start, param.getLocation()), mutable, param);\n    }\n    parseMessageParameters() {\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const params = this.parseParameterList();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return params;\n        }\n        return new Array();\n    }\n    parseMessageDeclaration() {\n        const start = this.lexer.peek(1).getLocation();\n        let direction = undefined;\n        if (this.tryConsumeFixToken(Tag.In)) {\n            direction = MessageDirection.IN;\n        }\n        if (this.tryConsumeFixToken(Tag.Out)) {\n            direction = MessageDirection.OUT;\n        }\n        if (direction === undefined) {\n            return this.error('Message declarations must have a direction.');\n        }\n        const name = this.parseName();\n        const params = this.parseMessageParameters();\n        return new MessageDeclarationNode(start, direction, name, params);\n    }\n    parseProtocolTermExpression(TermExpression, startTag, endTag) {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(startTag);\n        const expression = this.parseProtocolExpression();\n        if (expression !== undefined) {\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(endTag);\n            return new TermExpression(SourceLocation.merge(start, end), expression);\n        }\n        return this.error('Failed to parse protocol term expression.');\n    }\n    parseProtocolTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const factors = new Array();\n        this.loop(() => this.hasTag(Tag.In) ||\n            this.hasTag(Tag.Out) ||\n            this.hasTag(Tag.OpenSquareBracket) ||\n            this.hasTag(Tag.OpenParentheses) ||\n            this.hasTag(Tag.OpenBrace), () => {\n            if (this.hasTag(Tag.In) || this.hasTag(Tag.Out)) {\n                factors.push(this.parseMessageDeclaration());\n                return;\n            }\n            if (this.hasTag(Tag.OpenSquareBracket)) {\n                const factor = this.parseProtocolTermExpression(OptionalProtocolExpressionNode, Tag.OpenSquareBracket, Tag.CloseSquareBracket);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenParentheses)) {\n                const factor = this.parseProtocolTermExpression(GroupProtocolExpressionNode, Tag.OpenParentheses, Tag.CloseParentheses);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenBrace)) {\n                const factor = this.parseProtocolTermExpression(RepeatingProtocolExpressionNode, Tag.OpenBrace, Tag.CloseBrace);\n                factors.push(factor);\n                return;\n            }\n        });\n        const termFactors = NonEmptyArray.fromArray(factors);\n        if (termFactors === undefined) {\n            return this.error('At least one term factor needed.');\n        }\n        return new ProtocolTermNode(start, termFactors);\n    }\n    parseProtocolExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.hasTag(Tag.End)) {\n            return undefined;\n        }\n        const terms = new NonEmptyArray(this.parseProtocolTerm());\n        this.loop(() => this.hasTag(Tag.Pipe), () => {\n            this.expectConsumeFixToken(Tag.Pipe);\n            terms.push(this.parseProtocolTerm());\n        });\n        return new ProtocolExpressionNode(start, terms);\n    }\n    parseProtocol() {\n        const start = this.lexer.peek(1).getLocation();\n        const expression = this.parseProtocolExpression();\n        return new ProtocolNode(expression === undefined ? start : SourceLocation.merge(start, expression.getLocation()), expression);\n    }\n    parseInterface() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Interface);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const protocol = this.parseProtocol();\n        const end = this.consumeEnd(name);\n        return new InterfaceNode(SourceLocation.merge(start, end), name, protocol);\n    }\n    parse() {\n        const start = this.lexer.peek(1).getLocation();\n        const components = new Array();\n        const interfaces = new Array();\n        let breakLoop = false;\n        this.loop(() => !breakLoop, () => {\n            if (this.isComponent()) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    components.push(component);\n                }\n                return;\n            }\n            if (this.isInterface()) {\n                const interfaceDeclaration = this.parseInterface();\n                if (interfaceDeclaration !== undefined) {\n                    interfaces.push(interfaceDeclaration);\n                }\n                return;\n            }\n            this.error('Invalid top level node.');\n            breakLoop = true;\n        });\n        const end = this.lexer.peek(1).getLocation();\n        return new ProgramNode(SourceLocation.merge(start, end), components, interfaces);\n    }\n}\n//# sourceMappingURL=parser.js.map","var GlobalScopeSymbolTag;\n(function (GlobalScopeSymbolTag) {\n    GlobalScopeSymbolTag[GlobalScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GlobalScopeSymbolTag || (GlobalScopeSymbolTag = {}));\nexport class GlobalScopeSymbol {\n    constructor() {\n        this._globalScopeSymbolTag = GlobalScopeSymbolTag.Tag;\n    }\n}\nexport class ScopedSymbol {\n    constructor(scope) {\n        this.scope = scope;\n    }\n}\nexport class ProgramScopeSymbol extends ScopedSymbol {\n    constructor(scope, name) {\n        super(scope);\n        this.name = name;\n    }\n}\nexport class NamedScopeSymbol extends ScopedSymbol {\n    constructor(scope, identifier) {\n        super(scope);\n        this.identifier = identifier;\n    }\n}\nvar BlockScopeSymbolTag;\n(function (BlockScopeSymbolTag) {\n    BlockScopeSymbolTag[BlockScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BlockScopeSymbolTag || (BlockScopeSymbolTag = {}));\nexport class BlockScopeSymbol extends ScopedSymbol {\n    constructor() {\n        super(...arguments);\n        this._blockScopeSymbolTag = BlockScopeSymbolTag.Tag;\n    }\n}\nexport class ImplementationSymbol extends ScopedSymbol {\n    constructor(scope, interfaceSymbol) {\n        super(scope);\n        this.interfaceSymbol = interfaceSymbol;\n    }\n}\n//# sourceMappingURL=scope-symbols.js.map","import { NamedScopeSymbol } from './scope-symbols';\nvar TypeSymbolTag;\n(function (TypeSymbolTag) {\n    TypeSymbolTag[TypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeSymbolTag || (TypeSymbolTag = {}));\nexport class TypeSymbol extends NamedScopeSymbol {\n    constructor() {\n        super(...arguments);\n        this._typeSymbolTag = TypeSymbolTag.Tag;\n    }\n}\nexport class ConstantSymbol {\n    constructor(identifier, type) {\n        this.identifier = identifier;\n        this.type = type;\n    }\n}\nexport class ProcedureSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters, returnType) {\n        super(scope, identifier);\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n}\nvar BuiltInTypeSymbolTag;\n(function (BuiltInTypeSymbolTag) {\n    BuiltInTypeSymbolTag[BuiltInTypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BuiltInTypeSymbolTag || (BuiltInTypeSymbolTag = {}));\nexport class BuiltInTypeSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._builtInTypeSymbol = BuiltInTypeSymbolTag.Tag;\n    }\n}\nvar InterfaceSymbolTag;\n(function (InterfaceSymbolTag) {\n    InterfaceSymbolTag[InterfaceSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(InterfaceSymbolTag || (InterfaceSymbolTag = {}));\nexport class InterfaceSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._interfaceSymbolTag = InterfaceSymbolTag.Tag;\n        // TODO add protocol here.\n    }\n}\nvar ComponentSymbolTag;\n(function (ComponentSymbolTag) {\n    ComponentSymbolTag[ComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(ComponentSymbolTag || (ComponentSymbolTag = {}));\nexport class ComponentSymbol extends TypeSymbol {\n    constructor(scope, identifier, genericType, isEntryPoint) {\n        super(scope, identifier);\n        this.genericType = genericType;\n        this.isEntryPoint = isEntryPoint;\n        this._componentSymbolTag = ComponentSymbolTag.Tag;\n    }\n}\nvar GenericComponentSymbolTag;\n(function (GenericComponentSymbolTag) {\n    GenericComponentSymbolTag[GenericComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GenericComponentSymbolTag || (GenericComponentSymbolTag = {}));\nexport class GenericComponentSymbol extends ComponentSymbol {\n    constructor(scope, genericType) {\n        super(scope, '@@@__ANY__GENERIC_COMPONENT__@@@', genericType, false);\n        this._genericComponentSymbolTag = GenericComponentSymbolTag.Tag;\n    }\n}\nexport class MessageSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters) {\n        super(scope, identifier);\n        this.parameters = parameters;\n    }\n}\n//# sourceMappingURL=type-symbols.js.map","import { BooleanDescriptor, CharacterDescriptor, FloatDescriptor, Instruction, IntegerDescriptor, JumpDescriptor, OperatorCode, SystemCallDescriptor, TextDescriptor, } from '@composita/il';\nvar LabelTag;\n(function (LabelTag) {\n    LabelTag[LabelTag[\"Tag\"] = 0] = \"Tag\";\n})(LabelTag || (LabelTag = {}));\nexport class Label {\n    constructor() {\n        this._labelTag = LabelTag.Tag;\n    }\n}\nexport class ILAssembler {\n    constructor() {\n        this.targets = new Map();\n        this.origins = new Map();\n        this.code = new Array();\n    }\n    complete() {\n        this.fixLabels();\n        return this.code;\n    }\n    createLabel() {\n        return new Label();\n    }\n    setLabel(label) {\n        this.targets.set(label, this.code.length);\n    }\n    fixLabels() {\n        this.origins.forEach((origins, label) => {\n            const target = this.targets.get(label);\n            if (target === undefined) {\n                throw new Error('Cannot branch to unknown label.');\n            }\n            origins.forEach((origin) => {\n                const instruction = this.code[origin - 1];\n                if (instruction.code !== OperatorCode.Branch &&\n                    instruction.code !== OperatorCode.BranchFalse &&\n                    instruction.code !== OperatorCode.BranchTrue) {\n                    throw new Error('Not a jump instruction: ' + instruction.code + ', target: ' + target + ', origin: ' + origin);\n                }\n                this.code[origin - 1].arguments.push(new JumpDescriptor(target - origin));\n            });\n        });\n    }\n    emitLoadInteger(n) {\n        this.emit(OperatorCode.LoadConstantInteger, new IntegerDescriptor(n));\n    }\n    emitLoadFloat(n) {\n        this.emit(OperatorCode.LoadConstantFloat, new FloatDescriptor(n));\n    }\n    emitLoadCharacter(n) {\n        this.emit(OperatorCode.LoadConstantCharacter, new CharacterDescriptor(n));\n    }\n    emitLoadText(n) {\n        this.emit(OperatorCode.LoadConstantText, new TextDescriptor(n));\n    }\n    emitLoadBoolean(n) {\n        this.emit(OperatorCode.LoadConstantBoolean, new BooleanDescriptor(n));\n    }\n    emitJump(opCode, label) {\n        this.emit(opCode);\n        if (!this.origins.has(label)) {\n            this.origins.set(label, new Array());\n        }\n        this.origins.get(label)?.push(this.code.length);\n    }\n    emitBranch(label) {\n        this.emitJump(OperatorCode.Branch, label);\n    }\n    emitBranchFalse(label) {\n        this.emitJump(OperatorCode.BranchFalse, label);\n    }\n    emitBranchTrue(label) {\n        this.emitJump(OperatorCode.BranchTrue, label);\n    }\n    emitSystemCall(sysCall, numberOfArguments) {\n        const descriptor = new SystemCallDescriptor(sysCall);\n        descriptor.arguments.push(new IntegerDescriptor(numberOfArguments));\n        this.emit(OperatorCode.SystemCall, descriptor);\n    }\n    emit(opCode, ...args) {\n        this.code.push(new Instruction(opCode, ...args));\n    }\n}\n//# sourceMappingURL=il-assembler.js.map","export class InterfaceDeclarationSymbol {\n    constructor(interfaceSymbol, cardinality) {\n        this.interfaceSymbol = interfaceSymbol;\n        this.cardinality = cardinality;\n    }\n}\nexport class CardinalitySymbol {\n    constructor(min, max = min) {\n        this.min = min;\n        this.max = max;\n        if (min < 1) {\n            throw new Error('cardinality must be greater 0');\n        }\n        if (max !== undefined && max < min) {\n            throw new Error(`min ${min} must be greater than max ${max}`);\n        }\n    }\n    unlimited() {\n        return this.max === Infinity;\n    }\n}\nexport class GenericSymbol {\n    constructor(offered, required) {\n        this.offered = offered;\n        this.required = required;\n        GenericSymbol.validate(this.offered, 'Offered interface defined multiple times.');\n        GenericSymbol.validate(this.required, 'Required interface defined multiple times.');\n    }\n    static validate(data, msg) {\n        const uniqueNames = new Array(...new Set(data.map((offer) => offer.interfaceSymbol.identifier)));\n        if (uniqueNames.length !== data.length) {\n            throw new Error(msg);\n        }\n    }\n    static matchInterfaceDeclarations(genericAInterfaces, genericBInterfaces, minCompare, maxCompare) {\n        return (genericAInterfaces.filter((genericAInterface) => genericBInterfaces.find((genericBInterface) => genericAInterface.interfaceSymbol === genericBInterface.interfaceSymbol &&\n            maxCompare(genericAInterface.cardinality.max, genericBInterface.cardinality.max) &&\n            minCompare(genericAInterface.cardinality.min, genericBInterface.cardinality.min)) !== undefined).length === genericAInterfaces.length);\n    }\n    canBeSubstitutedBy(other) {\n        return (GenericSymbol.matchInterfaceDeclarations(this.offered, other.offered, (a, b) => a >= b, (a, b) => a >= b) &&\n            GenericSymbol.matchInterfaceDeclarations(this.required, other.required, (a, b) => a <= b, (a, b) => a <= b));\n    }\n    canSubstitute(other) {\n        return other.canBeSubstitutedBy(this);\n    }\n}\n//# sourceMappingURL=generic-symbols.js.map","import { ComponentSymbol, InterfaceSymbol, BuiltInTypeSymbol, MessageSymbol, } from './type-symbols';\nimport { GlobalScopeSymbol } from './scope-symbols';\nimport { GenericSymbol } from './generic-symbols';\nexport class SearchOptions {\n    constructor(scope, searchGlobalScope, searchParentScope) {\n        this.scope = scope;\n        this.searchGlobalScope = searchGlobalScope;\n        this.searchParentScope = searchParentScope;\n    }\n}\nexport class SymbolTable {\n    constructor() {\n        // varia\n        this.globalScope = new GlobalScopeSymbol();\n        this.voidType = new BuiltInTypeSymbol(this.globalScope, '@@@__VOID__@@@');\n        this.anyRequiredInterfaceType = new InterfaceSymbol(this.globalScope, '@@@__ANY_REQUIRED_INTERFACE__@@@');\n        this.anyGenericComponentType = new GenericSymbol([], []);\n        this.anyComponentType = new ComponentSymbol(this.globalScope, '@@@__ANY_COMPONENT__@@@', this.anyGenericComponentType, false);\n        this.anyMessage = new MessageSymbol(this.globalScope, 'ANY', []);\n        this.finishMessage = new MessageSymbol(this.globalScope, 'FINISH', []);\n        // mappings symbol -> node\n        this.symbolToDeclaration = new Map();\n        this.symbolToImplementation = new Map();\n        this.symbolToComponent = new Map();\n        this.symbolToInterface = new Map();\n        // mappings node -> symbol\n        this.expressionToSymbol = new Map();\n        this.typeToSymbol = new Map();\n        this.designatorToSymbol = new Map();\n        this.variableToSymbol = new Map();\n        this.callToSymbol = new Map();\n        this.sendReceiveToSymbol = new Map();\n        this.patternToSymbol = new Map();\n        this.componentToSymbol = new Map();\n        this.messageToSymbol = new Map();\n        this.implementationToSymbol = new Map();\n        this.procedureToSymbol = new Map();\n        this.interfaceToSymbol = new Map();\n        // types\n        this.types = new Array();\n        this.builtins = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n        this.messages = new Array();\n        // lookups\n        this.constants = new Array();\n        this.procedures = new Array();\n        this.impplementations = new Array();\n        this.variables = new Array();\n        this.collectionVariables = new Array();\n    }\n    getMessages(scope) {\n        return this.messages.filter((message) => message.scope === scope);\n    }\n    getSystemProcedures() {\n        return this.procedures.filter((procedure) => procedure.scope === this.globalScope);\n    }\n    getProcedures(scope) {\n        return this.procedures.filter((procedure) => procedure.scope === scope);\n    }\n    getImplementations(scope) {\n        return this.impplementations.filter((implementation) => implementation.scope === scope);\n    }\n    getVariables(scope) {\n        return this.variables.filter((variable) => variable.scope === scope);\n    }\n    getCollectionVariables(scope) {\n        return this.collectionVariables.filter((variable) => variable.scope === scope);\n    }\n    registerBuiltIns(builtin) {\n        this.builtins.push(builtin);\n        this.types.push(builtin);\n    }\n    registerComponent(component) {\n        this.components.push(component);\n        this.types.push(component);\n    }\n    registerInterface(interfaceSymbol) {\n        this.interfaces.push(interfaceSymbol);\n        this.types.push(interfaceSymbol);\n    }\n    registerMessage(message) {\n        this.messages.push(message);\n        this.types.push(message);\n    }\n    registerProcedure(procedure) {\n        this.procedures.push(procedure);\n    }\n    registerImplementation(implementation) {\n        this.impplementations.push(implementation);\n    }\n    registerVariable(variable) {\n        this.variables.push(variable);\n    }\n    registerCollectionVariable(variable) {\n        this.collectionVariables.push(variable);\n    }\n    getOrThrow(item) {\n        if (item === undefined) {\n            throw new Error('Item was undefined.');\n        }\n        return item;\n    }\n    getFirstOrThrow(data) {\n        if (data.length < 1) {\n            throw Error('Data containted no element.');\n        }\n        if (data.length > 1) {\n            throw Error('Data contained more than one element.');\n        }\n        return data[0];\n    }\n    static componentSatisfiesGeneric(component, generic) {\n        if (generic.offered.length === 0 && generic.required.length === 0) {\n            return true;\n        }\n        return generic.canBeSubstitutedBy(component.genericType);\n    }\n    findBuiltIn(name) {\n        return this.builtins.filter((builtin) => builtin.identifier === name);\n    }\n    findProcedure(identifier, params, returnType, options) {\n        const searchFunction = (procedure, searchScope) => {\n            return (procedure.identifier === identifier &&\n                procedure.parameters.length === params.length &&\n                procedure.parameters.filter((p, i) => this.isAssignable(p, params[i])).length === params.length &&\n                (returnType === undefined || procedure.returnType === returnType) &&\n                procedure.scope === searchScope);\n        };\n        return this.findInComponent(this.procedures, searchFunction.bind(this), options);\n    }\n    isAssignable(paramA, paramB) {\n        if (paramA instanceof ComponentSymbol && paramB instanceof ComponentSymbol) {\n            return paramA.genericType.canBeSubstitutedBy(paramB.genericType);\n        }\n        return paramA === paramB;\n    }\n    findInComponent(data, predicate, options) {\n        if (!options.searchGlobalScope && options.scope instanceof GlobalScopeSymbol) {\n            return new Array();\n        }\n        const results = data.filter((element) => predicate(element, options.scope));\n        if (results.length > 0 || options.scope instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!options.searchGlobalScope && options.scope.scope instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!options.searchParentScope &&\n            (options.scope instanceof ComponentSymbol || options.scope instanceof InterfaceSymbol)) {\n            if (options.searchGlobalScope) {\n                return this.findInComponent(data, predicate, new SearchOptions(this.globalScope, options.searchGlobalScope, options.searchParentScope));\n            }\n            return results;\n        }\n        return this.findInComponent(data, predicate, new SearchOptions(options.scope.scope, options.searchGlobalScope, options.searchParentScope));\n    }\n    findNameInScope(data, identifier, options) {\n        const searchFunction = (element, searchScope) => element.identifier === identifier && element.scope === searchScope;\n        return this.findInComponent(data, searchFunction.bind(this), options);\n    }\n    findVariable(identifier, options) {\n        return this.findNameInScope(this.variables, identifier, options);\n    }\n    findMessage(identifier, ignoreParams, params, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.identifier === identifier &&\n                symbol.scope === searchScope &&\n                (ignoreParams ||\n                    (symbol.parameters.length === params.length &&\n                        symbol.parameters.filter((p, i) => this.isAssignable(p, params[i])).length === params.length)));\n        };\n        return this.findInComponent(this.messages, searchFunction.bind(this), options);\n    }\n    findCollectionVariable(identifier, ignoreParams, params, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.identifier === identifier &&\n                (ignoreParams ||\n                    (symbol.parameters.length === params.length &&\n                        symbol.parameters.filter((p, i) => this.isAssignable(p, params[i])).length ===\n                            params.length)) &&\n                symbol.scope === searchScope);\n        };\n        return this.findInComponent(this.collectionVariables, searchFunction.bind(this), options);\n    }\n    findComponent(identifier, options) {\n        return this.findNameInScope(this.components, identifier, options);\n    }\n    findInterface(identifier, options) {\n        return this.findNameInScope(this.interfaces, identifier, options);\n    }\n    findType(identifier, options) {\n        return this.findNameInScope(this.types, identifier, options);\n    }\n    findImplementation(identifier, options) {\n        const searchFunction = (symbol, searchScope) => {\n            return symbol.interfaceSymbol.identifier === identifier && symbol.scope === searchScope;\n        };\n        return this.findInComponent(this.impplementations, searchFunction.bind(this), options);\n    }\n}\n//# sourceMappingURL=symboltable.js.map","import { NamedScopeSymbol } from './scope-symbols';\nexport class VariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, mutable, type) {\n        super(scope, identifier);\n        this.mutable = mutable;\n        this.type = type;\n    }\n}\nexport class CollectionVariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, type, parameters) {\n        super(scope, identifier);\n        this.type = type;\n        this.parameters = parameters;\n    }\n}\n//# sourceMappingURL=variable-symbols.js.map","import { Visitor } from '@composita/ast';\nimport { GenericComponentSymbol, GenericSymbol, SearchOptions } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nexport class FixTypeNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitBasicType(node) {\n        const types = this.symbolTable.findType(node.getIdentifier(), new SearchOptions(this.scope, true, true));\n        if (types.length < 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, no type found.`);\n        }\n        if (types.length > 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, multiple definitions found.`);\n        }\n        this.symbolTable.typeToSymbol.set(node, types[0]);\n    }\n    visitAnyType(node) {\n        const symbol = new GenericComponentSymbol(this.scope, new GenericSymbol(node\n            .getOffered()\n            .map((offered) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, offered, this.scope)), node\n            .getRequired()\n            .map((required) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, required, this.scope))));\n        this.symbolTable.typeToSymbol.set(node, symbol);\n    }\n}\n//# sourceMappingURL=fix-type-node.js.map","import { Visitor, TermChainNode, BasicDesignatorNode, LogicalOperator, PrefixOperator, FactorPrefix, NameNode, FixedMessagePattern, } from '@composita/ast';\nimport { BuiltInTypeSymbol, SearchOptions, NamedScopeSymbol, ProcedureSymbol, } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\nexport class FixExpressionNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    getType(node) {\n        const symbol = this.symbolTable.expressionToSymbol.get(node);\n        return this.symbolTable.getOrThrow(symbol);\n    }\n    getBuiltIn(typeName) {\n        return this.symbolTable.getFirstOrThrow(this.symbolTable.findBuiltIn(typeName));\n    }\n    visitAttributes(attributes) {\n        attributes.forEach((attr) => attr.accept(this));\n    }\n    visitConstantExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getExpression()));\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        const leftType = this.getType(node.getLeft());\n        const rightType = this.getType(node.getRight());\n        this.checkChainMatch(leftType, rightType);\n        if (!(leftType instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot compare non number values.`);\n        }\n        const typeIdentifier = leftType.identifier;\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n            case LogicalOperator.NotEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'BOOLEAN' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n            case LogicalOperator.Less:\n            case LogicalOperator.LessEqual:\n            case LogicalOperator.More:\n            case LogicalOperator.MoreEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitOffersRequiresExpression(node) {\n        this.visitAttributes(node.getAttributes());\n        node.getInterfaces().forEach((iface) => iface.accept(this));\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitTypeCheck(node) {\n        this.visitAttributes(node.getAttributes());\n        node.getDesignator().accept(this);\n        node.getType().accept(this);\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        const type = this.getType(node.getTerm());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary + - op to non builtin type.`);\n        }\n        const typeIdentifier = type.identifier;\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n            case PrefixOperator.Plus:\n                if (typeIdentifier !== 'REAL' && typeIdentifier !== 'INTEGER') {\n                    throw new Error(`Cannot apply + - to non numbers types.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getTerm()));\n    }\n    checkChainMatch(left, ...right) {\n        const unique = new Array(...new Set(right));\n        if (unique.length < 1) {\n            throw new Error(`Failed right factor type lookup.`);\n        }\n        if (unique.length > 1) {\n            throw new Error(`Ambiguous right factor type lookup.`);\n        }\n        if (unique[0] !== left) {\n            throw new Error(`Factor type missmatch. Left: ${left.identifier}, Right: ${unique[0].identifier}`);\n        }\n    }\n    getChainTypes(node) {\n        if (node instanceof TermChainNode) {\n            return node.getRight().map((right) => this.getType(right.getRight()));\n        }\n        return node.getRight().map((right) => this.getType(right.getRight()));\n    }\n    visitChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((term) => term.accept(this));\n        const type = this.getType(node.getLeft());\n        this.checkChainMatch(type, ...this.getChainTypes(node));\n        this.symbolTable.expressionToSymbol.set(node, type);\n    }\n    visitTermChain(node) {\n        this.visitChain(node);\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n    }\n    visitFactorChain(node) {\n        this.visitChain(node);\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        const type = this.getType(node.getFactor());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary not op to non builtin type.`);\n        }\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                if (type.identifier !== 'BOOLEAN') {\n                    throw new Error(`Cannot apply not op to non boolean types.`);\n                }\n                break;\n        }\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getFactor()));\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n        this.symbolTable.expressionToSymbol.set(node, this.getType(node.getExpression()));\n    }\n    visitIntegerNumber(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('INTEGER'));\n    }\n    visitRealNumber(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('REAL'));\n    }\n    visitConstantCharacter(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('CHARACTER'));\n    }\n    visitText(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('TEXT'));\n    }\n    getPatternName(pattern) {\n        if (pattern instanceof NameNode) {\n            return pattern.getName();\n        }\n        switch (pattern) {\n            case FixedMessagePattern.Any:\n                return this.symbolTable.anyMessage.identifier;\n            case FixedMessagePattern.Finish:\n                return this.symbolTable.finishMessage.identifier;\n            default:\n                throw new Error('Unknown message!');\n        }\n    }\n    visitMessageTest(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(this);\n        const designator = node.getDesignator();\n        const target = designator !== undefined\n            ? this.symbolTable.getOrThrow(this.symbolTable.designatorToSymbol.get(designator))\n            : undefined;\n        const pattern = node.getPattern();\n        if (target?.identifier === 'task') {\n            console.log(node);\n        }\n        const message = CheckerHelper.getMessage(this.symbolTable, this.scope, node.getDesignator(), this.getPatternName(pattern), true, []);\n        this.symbolTable.patternToSymbol.set(pattern, message);\n    }\n    visitReceiveTest(node) {\n        this.visitMessageTest(node);\n    }\n    visitInputTest(node) {\n        this.visitMessageTest(node);\n    }\n    visitExistsTest(node) {\n        this.symbolTable.expressionToSymbol.set(node, this.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(this);\n    }\n    visitFunctionCall(node) {\n        node.getArguments().forEach((expression) => expression.accept(this));\n        const params = node.getArguments().map((expression) => this.getType(expression));\n        const procedure = this.symbolTable.getFirstOrThrow(this.symbolTable.findProcedure(node.getName().getName(), params, undefined, new SearchOptions(this.scope, true, false)));\n        this.symbolTable.expressionToSymbol.set(node, procedure.returnType);\n        this.symbolTable.callToSymbol.set(node, procedure);\n    }\n    getProcedureParam(name) {\n        let localScope = this.scope;\n        while (!(localScope instanceof ProcedureSymbol) && localScope instanceof NamedScopeSymbol) {\n            // go up to procedure.\n            localScope = localScope.scope;\n        }\n        if (!(localScope instanceof ProcedureSymbol)) {\n            throw new Error(`${name} is not a procedure parameter.`);\n        }\n        const symbol = this.symbolTable.getFirstOrThrow(this.symbolTable.findVariable(name, new SearchOptions(localScope, false, false)));\n        if (!(symbol.scope instanceof ProcedureSymbol)) {\n            throw new Error(`Found ${name} outside procedure param.`);\n        }\n        return symbol;\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            const variable = this.symbolTable.getFirstOrThrow(this.symbolTable.findVariable(node.getName().getName(), new SearchOptions(this.scope, false, true)));\n            this.symbolTable.expressionToSymbol.set(node, variable.type);\n            this.symbolTable.designatorToSymbol.set(node, variable);\n            return;\n        }\n        catch (error) {\n            // let's try something else\n        }\n        try {\n            const constant = this.symbolTable.getFirstOrThrow(this.symbolTable.constants.filter((constant) => constant.identifier === name));\n            this.symbolTable.expressionToSymbol.set(node, constant.type);\n            this.symbolTable.designatorToSymbol.set(node, constant.type);\n            return;\n        }\n        catch (error) {\n            // let's try somethign else...\n        }\n        try {\n            const symbol = this.symbolTable.getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, symbol);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        try {\n            const symbol = this.symbolTable.getFirstOrThrow(this.symbolTable.findComponent(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, symbol);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // give it another go...\n        }\n        try {\n            const symbol = this.symbolTable.getFirstOrThrow(this.symbolTable.findCollectionVariable(name, true, [], new SearchOptions(this.scope, true, false)));\n            this.symbolTable.expressionToSymbol.set(node, symbol.type);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // one last try...\n        }\n        try {\n            const symbol = this.getProcedureParam(name);\n            this.symbolTable.expressionToSymbol.set(node, symbol.type);\n            this.symbolTable.designatorToSymbol.set(node, symbol);\n            return;\n        }\n        catch (error) {\n            // giving up now..\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBasicExpressionDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            const variable = this.symbolTable.getFirstOrThrow(this.symbolTable.findCollectionVariable(name, true, new Array(), new SearchOptions(this.scope, false, true)));\n            this.symbolTable.expressionToSymbol.set(node, variable.type);\n            this.symbolTable.designatorToSymbol.set(node, variable);\n            return;\n        }\n        catch (error) {\n            // one more try...\n        }\n        try {\n            const interfaceSymbol = this.symbolTable.getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, true, true)));\n            this.symbolTable.expressionToSymbol.set(node, interfaceSymbol);\n            this.symbolTable.designatorToSymbol.set(node, interfaceSymbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBaseTargetDesignator(node) {\n        const base = node.getBase();\n        const target = node.getTarget();\n        target.accept(this);\n        if (base instanceof BasicDesignatorNode) {\n            // potential function call\n            const name = base.getName().getName();\n            try {\n                const procedure = CheckerHelper.getProcedure(name, this.symbolTable, new Array(this.getType(target)), undefined, new SearchOptions(this.scope, true, false));\n                this.symbolTable.expressionToSymbol.set(base, procedure);\n                this.symbolTable.designatorToSymbol.set(node, procedure);\n                this.symbolTable.expressionToSymbol.set(node, procedure.returnType);\n                return;\n            }\n            catch (error) {\n                // it was not a procedure...\n            }\n        }\n        base.accept(this);\n        const baseType = this.getType(base);\n        this.symbolTable.expressionToSymbol.set(node, baseType);\n        this.symbolTable.designatorToSymbol.set(node, baseType);\n    }\n    visitDesignatorType(node) {\n        node.getDesignator().accept(this);\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n    }\n}\n//# sourceMappingURL=fix-expression-node.js.map","import { ComponentSymbol, InterfaceSymbol, ImplementationSymbol, ProcedureSymbol, NamedScopeSymbol, SearchOptions, GlobalScopeSymbol, } from '@composita/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class CheckerHelper {\n    static checkNotConstantSymbol(name, symbolTable) {\n        const value = symbolTable.constants.filter((constant) => constant.identifier === name);\n        if (value.length !== 0) {\n            throw new Error(`${name} is a constant variable!`);\n        }\n    }\n    static getComponent(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const components = symbolTable.findComponent(name, options);\n        if (components.length > 1) {\n            throw new Error(`Component ${name} defined ${components.length} times in the same scope.`);\n        }\n        if (components.length < 1) {\n            throw new Error(`No component ${name} found.`);\n        }\n        return components[0];\n    }\n    static getInterface(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const interfaces = symbolTable.findInterface(name, options);\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} defined ${interfaces.length} times in the same scope.`);\n        }\n        if (interfaces.length < 1) {\n            throw new Error(`No interface ${name} found.`);\n        }\n        return interfaces[0];\n    }\n    static getImplementation(symbolTable, name, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        if (!(options.scope instanceof ComponentSymbol)) {\n            throw new Error(`Failed to locate ${name}, must be inside a component.`);\n        }\n        const implementations = symbolTable.findImplementation(name, options);\n        if (implementations.length > 1) {\n            throw new Error(`Implementaiton ${name} defined ${implementations.length} times in the same scope.`);\n        }\n        if (implementations.length < 1) {\n            throw new Error(`No implementation ${name} found.`);\n        }\n        return implementations[0];\n    }\n    static getConstant(symbolTable, name) {\n        const constant = symbolTable.constants.filter((constant) => constant.identifier === name);\n        if (constant.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (constant.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return constant[0];\n    }\n    static getVariable(symbolTable, name, options) {\n        const symbol = symbolTable.findVariable(name, options);\n        if (symbol.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (symbol.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return symbol[0];\n    }\n    static getProcedureParam(symbolTable, scope, name) {\n        while (!(scope instanceof ProcedureSymbol) && scope instanceof NamedScopeSymbol) {\n            // go up to procedure.\n            scope = scope.scope;\n        }\n        if (!(scope instanceof ProcedureSymbol)) {\n            throw new Error(`${name} is not a procedure parameter.`);\n        }\n        const symbol = this.getVariable(symbolTable, name, new SearchOptions(scope, false, false));\n        if (!(symbol.scope instanceof ProcedureSymbol)) {\n            throw new Error(`Found ${name} outside procedure param.`);\n        }\n        return symbol;\n    }\n    static getProcedure(name, symbolTable, params, returnType, options) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const procedures = symbolTable.findProcedure(name, params, returnType, options);\n        if (procedures.length > 1) {\n            throw new Error(`Procedure ${name} defined ${procedures.length} times in the same scope.`);\n        }\n        if (procedures.length < 1) {\n            throw new Error(`No procedure ${name} found.`);\n        }\n        return procedures[0];\n    }\n    static getProcedureFromNode(node, symbolTable, options) {\n        const name = node.getName().getName();\n        this.checkNotConstantSymbol(name, symbolTable);\n        let returnType = symbolTable.voidType;\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(symbolTable, options.scope));\n            const foundType = symbolTable.typeToSymbol.get(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure ${name} return type.`);\n            }\n            returnType = foundType;\n        }\n        const paramTypes = CheckerHelper.convertParamTypes(symbolTable, options.scope, node.getParams().map((param) => param.getParameter()));\n        return this.getProcedure(name, symbolTable, paramTypes, returnType, options);\n    }\n    static getTypeType(symbolTable, node) {\n        const type = symbolTable.typeToSymbol.get(node);\n        if (type === undefined) {\n            throw new Error(`Type node type lookup failed.`);\n        }\n        return type;\n    }\n    static convertParamTypes(symbolTable, scope, params) {\n        return params.flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(symbolTable, scope));\n            const type = this.getTypeType(symbolTable, param.getType());\n            return param.getNames().map(() => type);\n        });\n    }\n    static getMessageInImplentation(symbolTable, scope, name, ignoreArgs, args) {\n        while (!(scope instanceof ImplementationSymbol)) {\n            if (scope instanceof GlobalScopeSymbol) {\n                throw new Error(`Failed message lookup for ${name}.`);\n            }\n            scope = scope.scope;\n        }\n        const messages = symbolTable.findMessage(name, ignoreArgs, args, new SearchOptions(scope.interfaceSymbol, false, false));\n        if (messages.length > 1) {\n            throw new Error(`Ambiguous message lookup for ${name}.`);\n        }\n        if (messages.length < 1) {\n            throw new Error(`Message lookup failed for ${name}.`);\n        }\n        return messages[0];\n    }\n    static getMessage(symbolTable, scope, interfaceTarget, name, ignoreArgs, args) {\n        const argTypes = args.map((argument) => {\n            argument.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n            const type = symbolTable.expressionToSymbol.get(argument);\n            if (type === undefined) {\n                throw new Error('Failed argument type lookup.');\n            }\n            return type;\n        });\n        interfaceTarget?.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n        if (interfaceTarget !== undefined) {\n            const type = symbolTable.expressionToSymbol.get(interfaceTarget);\n            const messages = new Array();\n            if (type instanceof ComponentSymbol) {\n                messages.push(...type.genericType.offered\n                    .map((offer) => offer.interfaceSymbol)\n                    .flatMap((potentialInterface) => symbolTable.findMessage(name, ignoreArgs, argTypes, new SearchOptions(potentialInterface, false, false))));\n            }\n            else if (type instanceof InterfaceSymbol) {\n                messages.push(...symbolTable.findMessage(name, ignoreArgs, argTypes, new SearchOptions(type, false, false)));\n            }\n            else {\n                throw new Error(`Failed interface lookup for ${name}.`);\n            }\n            if (messages.length > 1) {\n                throw new Error(`Ambigious message lookup for ${name}.`);\n            }\n            if (messages.length < 1) {\n                throw new Error(`Message lookup failed for ${name}.`);\n            }\n            return messages[0];\n        }\n        return this.getMessageInImplentation(symbolTable, scope, name, ignoreArgs, argTypes);\n    }\n}\n//# sourceMappingURL=static-helpers.js.map","import { Visitor } from '@composita/ast';\nimport { ComponentSymbol, GenericSymbol, SearchOptions } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { CheckerHelper } from './static-helpers';\n// register components, single layer\nexport class ComponentRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const attributes = node.getAttributes();\n        const componentSymbol = new ComponentSymbol(this.scope, name, new GenericSymbol(node\n            .getOffers()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope)), node\n            .getRequires()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope))), attributes.filter((attribute) => attribute.getName().getName() === 'ENTRYPOINT').length > 0);\n        try {\n            CheckerHelper.getComponent(this.symbolTable, name, new SearchOptions(this.scope, false, false));\n            throw new Error(`Duplicate component ${name} detected,`);\n        }\n        catch (error) {\n            // all good\n        }\n        if (componentSymbol.isEntryPoint && !this.isEntryPoint(componentSymbol)) {\n            throw new Error(`Marked entrypoint component ${name}, requires at least one non system interfaces to be connected.`);\n        }\n        this.symbolTable.registerComponent(componentSymbol);\n        this.symbolTable.symbolToComponent.set(componentSymbol, node);\n        this.symbolTable.componentToSymbol.set(node, componentSymbol);\n    }\n    isEntryPoint(component) {\n        const required = component.genericType.required;\n        return (required.length === 0 ||\n            required\n                .map((required) => this.isSystemInterface(required.interfaceSymbol.identifier))\n                .reduce((prev, current) => prev && current, true));\n    }\n    isSystemInterface(name) {\n        switch (name) {\n            case 'SystemTime':\n            case 'FileSystem':\n            case 'GraphicView':\n                return true;\n            default:\n                return false;\n        }\n    }\n}\n//# sourceMappingURL=register-component.js.map","import { Visitor } from '@composita/ast';\nimport { InterfaceSymbol, SearchOptions } from '@composita/symbols';\nexport class InterfaceRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    //visitProtocol(node: ProtocolNode): void {}\n    //visitProtocolExpression(node: ProtocolExpressionNode): void {}\n    //visitProtocolTerm(node: ProtocolTermNode): void {}\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaceSymbol = new InterfaceSymbol(this.scope, name);\n        try {\n            this.symbolTable.getFirstOrThrow(this.symbolTable.findInterface(name, new SearchOptions(this.scope, false, false)));\n            throw new Error(`Duplicate interface ${name} detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        // TODO\n        //node.getProtocol().accept(this);\n        this.symbolTable.registerInterface(interfaceSymbol);\n        this.symbolTable.symbolToInterface.set(interfaceSymbol, node);\n        this.symbolTable.interfaceToSymbol.set(node, interfaceSymbol);\n    }\n}\n//# sourceMappingURL=register-interface.js.map","import { Visitor, } from '@composita/ast';\nimport { MessageSymbol } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class MessageRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(this);\n    }\n    visitProtocolTerm(node) {\n        node.getFactors().forEach((factor) => factor.accept(this));\n    }\n    visitMessageDeclaration(node) {\n        const name = node.getName().getName();\n        const paramSymbols = node.getParams().flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const type = this.symbolTable.typeToSymbol.get(param.getType());\n            if (type === undefined) {\n                throw new Error(`Type lookup for message '${name}' param failed.`);\n            }\n            return param.getNames().map(() => type);\n        });\n        const message = new MessageSymbol(this.scope, name, paramSymbols);\n        this.symbolTable.registerMessage(message);\n        this.symbolTable.messageToSymbol.set(node, message);\n    }\n    visitOptionalProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitGroupProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitRepeatingProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitProtocolExpression(node) {\n        node.getTerms().forEach((term) => term.accept(this));\n    }\n}\n//# sourceMappingURL=register-messages.js.map","import { Visitor } from '@composita/ast';\nimport { ProcedureSymbol, VariableSymbol, SearchOptions, } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\n// register all procedures, single layer\nexport class ProcedureRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProcedure(node) {\n        const name = node.getName().getName();\n        const params = CheckerHelper.convertParamTypes(this.symbolTable, this.scope, node.getParams().map((param) => param.getParameter()));\n        let returnType = this.symbolTable.voidType;\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const foundType = this.symbolTable.typeToSymbol.get(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure return type for ${name}.`);\n            }\n            returnType = foundType;\n        }\n        try {\n            CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, false, false));\n            throw new Error('Duplicate procedure detected.');\n        }\n        catch (error) {\n            // all good\n        }\n        const procedure = new ProcedureSymbol(this.scope, name, params, returnType);\n        node.getParams().forEach((param) => {\n            const innerParam = param.getParameter();\n            innerParam\n                .getNames()\n                .forEach((name) => this.symbolTable.registerVariable(new VariableSymbol(procedure, name.getName(), param.isMutable(), CheckerHelper.getTypeType(this.symbolTable, innerParam.getType()))));\n        });\n        this.symbolTable.registerProcedure(procedure);\n        this.symbolTable.procedureToSymbol.set(node, procedure);\n    }\n}\n//# sourceMappingURL=register-procedure.js.map","import { Visitor } from '@composita/ast';\nimport { ImplementationSymbol, SearchOptions } from '@composita/symbols';\nimport { CheckerHelper } from './static-helpers';\n// implementations, single layer\nexport class ImplementationRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        const interfaceSymbols = this.scope.genericType.offered\n            .filter((symbol) => symbol.interfaceSymbol.identifier === name)\n            .map((symbol) => symbol.interfaceSymbol);\n        if (interfaceSymbols.length !== 1) {\n            throw new Error(`Could not find interface for '${name}' implementation.`);\n        }\n        try {\n            CheckerHelper.getImplementation(this.symbolTable, name, new SearchOptions(this.scope, false, false));\n            throw new Error(`Duplicate '${name}' implementation detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        const implementationSymbol = new ImplementationSymbol(this.scope, interfaceSymbols[0]);\n        this.symbolTable.registerImplementation(implementationSymbol);\n        this.symbolTable.symbolToImplementation.set(implementationSymbol, node);\n        this.symbolTable.implementationToSymbol.set(node, implementationSymbol);\n    }\n}\n//# sourceMappingURL=register-implementation.js.map","import { Visitor } from '@composita/ast';\nimport { VariableSymbol } from '@composita/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nexport class ConstantListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitConstant(node) {\n        const name = node.getName().getName();\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        const expressionSymbol = this.symbolTable.getOrThrow(this.symbolTable.expressionToSymbol.get(node.getExpression().getExpression()));\n        const variable = new VariableSymbol(this.scope, name, false, expressionSymbol);\n        this.symbolTable.registerVariable(variable);\n        this.symbolTable.variableToSymbol.set(node, variable);\n    }\n    visitConstantList(node) {\n        node.getConstants().forEach((constant) => constant.accept(this));\n    }\n}\n//# sourceMappingURL=register-constant-list.js.map","import { Visitor } from '@composita/ast';\nimport { VariableSymbol, CollectionVariableSymbol, BuiltInTypeSymbol, } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { CheckerHelper } from './static-helpers';\nexport class VariableListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitVariable(node) {\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n        const type = this.symbolTable.typeToSymbol.get(node.getType());\n        if (type === undefined) {\n            throw new Error(`${node.getNames()[0].getName()}: Unknown type.`);\n        }\n        node.getNames().forEach((name) => {\n            const identifier = name.getName();\n            if (type instanceof BuiltInTypeSymbol && type.identifier === 'TEXT') {\n                this.symbolTable.registerCollectionVariable(new CollectionVariableSymbol(this.scope, identifier, type, new Array(this.symbolTable.getFirstOrThrow(this.symbolTable.findBuiltIn('INTEGER')))));\n                // TODO fix variable here as well.\n                return;\n            }\n            if (name.getParams().length === 0) {\n                const variable = new VariableSymbol(this.scope, identifier, true, type);\n                this.symbolTable.registerVariable(variable);\n                this.symbolTable.variableToSymbol.set(node, variable);\n                return;\n            }\n            this.symbolTable.registerCollectionVariable(new CollectionVariableSymbol(this.scope, identifier, type, CheckerHelper.convertParamTypes(this.symbolTable, this.scope, name.getParams())));\n        });\n    }\n    visitVariableList(node) {\n        node.getVariables().forEach((variable) => variable.accept(this));\n    }\n}\n//# sourceMappingURL=register-variable-list.js.map","import { Visitor, ComponentNode, InterfaceNode, ProcedureNode, VariableListNode, ConstantListNode, } from '@composita/ast';\nimport { ComponentSymbol, SearchOptions } from '@composita/symbols';\nimport { ComponentRegisterVisitor } from './register-component';\nimport { InterfaceRegisterVisitor } from './register-interface';\nimport { MessageRegisterVisitor } from './register-messages';\nimport { ProcedureRegisterVisitor } from './register-procedure';\nimport { ImplementationRegisterVisitor } from './register-implementation';\nimport { ConstantListRegisterVisitor } from './register-constant-list';\nimport { VariableListRegisterVisitor } from './register-variable-list';\nimport { CheckerHelper } from './static-helpers';\nexport class TypeRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProgram(node) {\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new InterfaceRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new ComponentRegisterVisitor(this.symbolTable, this.scope)));\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const components = this.symbolTable.findComponent(name, new SearchOptions(this.scope, false, false));\n        if (components.length !== 1) {\n            throw new Error(`Failed lookup for component ${name}.`);\n        }\n        node.getBody()?.accept(new TypeRegisterVisitor(this.symbolTable, components[0]));\n    }\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaces = this.symbolTable.findInterface(name, new SearchOptions(this.scope, false, false));\n        if (interfaces.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        node.getProtocol().accept(new MessageRegisterVisitor(this.symbolTable, interfaces[0]));\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(new MessageRegisterVisitor(this.symbolTable, this.scope));\n    }\n    visitProcedure(node) {\n        const procedure = CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, false, false));\n        this.registerLayer(node.getDeclarations(), procedure);\n    }\n    registerLayer(declarations, currentScope, processAddtionalLayer, processAddtionalSubLayer) {\n        const components = declarations\n            .filter((declaration) => declaration instanceof ComponentNode)\n            .map((declaration) => declaration);\n        const interfaces = declarations\n            .filter((declaration) => declaration instanceof InterfaceNode)\n            .map((declaration) => declaration);\n        const procedures = declarations\n            .filter((declaration) => declaration instanceof ProcedureNode)\n            .map((declaration) => declaration);\n        const variables = declarations\n            .filter((declaration) => declaration instanceof VariableListNode)\n            .map((declaration) => declaration);\n        const constants = declarations\n            .filter((declaration) => declaration instanceof ConstantListNode)\n            .map((declaration) => declaration);\n        interfaces.forEach((declaration) => declaration.accept(new InterfaceRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((declaration) => declaration.accept(new ComponentRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((declaration) => declaration.accept(new ProcedureRegisterVisitor(this.symbolTable, currentScope)));\n        variables.forEach((declaration) => declaration.accept(new VariableListRegisterVisitor(this.symbolTable, currentScope)));\n        constants.forEach((declaration) => declaration.accept(new ConstantListRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalLayer !== undefined) {\n            processAddtionalLayer();\n        }\n        interfaces.forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((procedure) => procedure.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalSubLayer !== undefined) {\n            processAddtionalSubLayer(new TypeRegisterVisitor(this.symbolTable, currentScope));\n        }\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Implementation must be in a component scope!');\n        }\n        const implementations = this.symbolTable.findImplementation(name, new SearchOptions(this.scope, false, false));\n        if (implementations.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        this.registerLayer(node.getDeclarations(), implementations[0]);\n    }\n    visitComponentBody(node) {\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Component body must be a component scope!');\n        }\n        const localScope = this.scope;\n        this.registerLayer(node.getDeclarations(), localScope, () => {\n            node.getImplementations().forEach((implementation) => implementation.accept(new ImplementationRegisterVisitor(this.symbolTable, localScope)));\n        }, (visitor) => {\n            node.getImplementations().forEach((implementation) => implementation.accept(visitor));\n        });\n    }\n}\n//# sourceMappingURL=register-types.js.map","import { ProcedureSymbol, BuiltInTypeSymbol, ConstantSymbol, InterfaceDeclarationSymbol, CardinalitySymbol, VariableSymbol, SearchOptions, } from '@composita/symbols';\nimport { TypeRegisterVisitor } from './register-types';\nexport class SymbolConstruction {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n        const bool_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'BOOLEAN');\n        const char_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'CHARACTER');\n        const text_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'TEXT');\n        const int_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'INTEGER');\n        const real_t = new BuiltInTypeSymbol(this.symbolTable.globalScope, 'REAL');\n        this.builtInTypes = new Array(bool_t, char_t, text_t, int_t, real_t);\n        this.constants = new Map([\n            ['TRUE', bool_t],\n            ['FALSE', bool_t],\n            ['PI', real_t],\n        ]);\n        this.variables = new Map([['TIME', int_t]]);\n        this.systemProcedures = new Array(\n        // propper procedures\n        ['ASSERT', [this.symbolTable.voidType, new Array(bool_t)]], ['ASSERT', [this.symbolTable.voidType, new Array(bool_t, int_t)]], ['HALT', [this.symbolTable.voidType, new Array(int_t)]], ['INC', [this.symbolTable.voidType, new Array(int_t)]], ['INC', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['DEC', [this.symbolTable.voidType, new Array(int_t)]], ['DEC', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['PASSIVATE', [this.symbolTable.voidType, new Array(int_t)]], ['WRITE', [this.symbolTable.voidType, new Array(text_t)]], ['WRITE', [this.symbolTable.voidType, new Array(int_t)]], ['WRITE', [this.symbolTable.voidType, new Array(real_t)]], ['WRITE', [this.symbolTable.voidType, new Array(char_t)]], ['WRITEHEX', [this.symbolTable.voidType, new Array(int_t)]], ['WRITELINE', [this.symbolTable.voidType, new Array()]], \n        // alloc and dealloc\n        ['NEW', [this.symbolTable.voidType, new Array(this.symbolTable.anyComponentType)]], ['NEW', [this.symbolTable.voidType, new Array(int_t)]], ['NEW', [this.symbolTable.voidType, new Array(int_t, int_t)]], ['NEW', [this.symbolTable.voidType, new Array(int_t, int_t, int_t)]], ['DELETE', [this.symbolTable.voidType, new Array(this.symbolTable.anyComponentType)]], \n        // function procedures\n        ['COUNT', [int_t, new Array(this.symbolTable.anyRequiredInterfaceType)]], ['LENGTH', [int_t, new Array(text_t)]], ['SQRT', [real_t, new Array(real_t)]], ['SIN', [real_t, new Array(real_t)]], ['COS', [real_t, new Array(real_t)]], ['TAN', [real_t, new Array(real_t)]], ['ARCSIN', [real_t, new Array(real_t)]], ['ARCCOS', [real_t, new Array(real_t)]], ['ARCTAN', [real_t, new Array(real_t)]], ['RANDOM', [int_t, new Array(int_t, int_t)]], ['MIN', [real_t, new Array(real_t)]], ['MIN', [int_t, new Array(int_t)]], ['MAX', [real_t, new Array(real_t)]], ['MAX', [int_t, new Array(int_t)]], \n        // type conversion\n        ['CHARACTER', [char_t, new Array(int_t)]], ['INTEGER', [int_t, new Array(real_t)]], ['REAL', [real_t, new Array(int_t)]], ['TEXT', [text_t, new Array(char_t)]]);\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolConstruction(symbolTable, scope);\n        construction.register(program);\n    }\n    register(program) {\n        this.registerBuiltIns();\n        program.accept(new TypeRegisterVisitor(this.symbolTable, this.programScope));\n    }\n    registerBuiltIns() {\n        this.registerBuiltInTypes();\n        this.registerBuiltInProcedures();\n        this.registerBuiltInConstants();\n        this.registerBuiltInVariables();\n    }\n    registerBuiltInTypes() {\n        this.builtInTypes.forEach((value) => this.symbolTable.registerBuiltIns(value));\n    }\n    registerBuiltInProcedures() {\n        this.systemProcedures.forEach((value) => {\n            const procedure = new ProcedureSymbol(this.symbolTable.globalScope, value[0], value[1][1], value[1][0]);\n            this.symbolTable.registerProcedure(procedure);\n        });\n    }\n    registerBuiltInConstants() {\n        this.constants.forEach((value, key) => this.symbolTable.constants.push(new ConstantSymbol(key, value)));\n    }\n    registerBuiltInVariables() {\n        this.variables.forEach((value, key) => this.symbolTable.registerVariable(new VariableSymbol(this.symbolTable.globalScope, key, false, value)));\n    }\n    static createInterfaceDeclarationSymbol(symbolTable, node, scope) {\n        const name = node.getName().getName();\n        const interfaces = symbolTable.findInterface(name, new SearchOptions(scope, true, true));\n        if (interfaces.length === 0) {\n            throw new Error(`Interface ${name} not defined.`);\n        }\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} multiple times defined.`);\n        }\n        const cardinality = node.getCardinality();\n        return new InterfaceDeclarationSymbol(interfaces[0], new CardinalitySymbol(cardinality?.getMin() ?? 1, cardinality?.getMax()));\n    }\n}\n//# sourceMappingURL=symbol-construction.js.map","import { Visitor, BasicDesignatorNode, BasicExpressionDesignatorNode, } from '@composita/ast';\nimport { BlockScopeSymbol, CollectionVariableSymbol, VariableSymbol, SearchOptions, } from '@composita/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nimport { CheckerHelper } from './static-helpers';\nexport class FixStatementNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    findCollectionVariable(node) {\n        if (node instanceof BasicExpressionDesignatorNode || node instanceof BasicDesignatorNode) {\n            const name = node.getName().getName();\n            const symbol = this.symbolTable.findCollectionVariable(name, true, [], new SearchOptions(this.scope, false, false));\n            if (symbol.length > 1) {\n                throw new Error(`Found ${name} multiple times.`);\n            }\n            if (symbol.length < 1) {\n                throw new Error(`Failed to find ${name}.`);\n            }\n            return symbol[0];\n        }\n        // TODO\n        throw new Error('Not implemented yet.');\n    }\n    visitProgram(node) {\n        node.getComponents().forEach((component) => component.accept(this));\n    }\n    visitComponent(node) {\n        const component = CheckerHelper.getComponent(this.symbolTable, node.getName().getName(), new SearchOptions(this.scope, true, true));\n        node.getBody()?.accept(new FixStatementNodeVisitor(this.symbolTable, component));\n    }\n    visitComponentBody(node) {\n        node.getDeclarations().forEach((declaration) => declaration.accept(this));\n        node.getImplementations().forEach((implementation) => implementation.accept(this));\n        node.getBeginBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getActivityBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getFinallyBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitImplementation(node) {\n        const implementation = CheckerHelper.getImplementation(this.symbolTable, node.getName().getName(), new SearchOptions(this.scope, true, false));\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, implementation)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, implementation));\n    }\n    visitProcedure(node) {\n        const procedure = CheckerHelper.getProcedureFromNode(node, this.symbolTable, new SearchOptions(this.scope, true, false));\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, procedure)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, procedure));\n    }\n    visitStatementSequence(node) {\n        node.getStatements().forEach((statement) => statement.accept(new FixStatementNodeVisitor(this.symbolTable, new BlockScopeSymbol(this.scope))));\n    }\n    visitProcedureCall(node) {\n        const params = node.getParams().map((param) => {\n            param.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n            return this.symbolTable.getOrThrow(this.symbolTable.expressionToSymbol.get(param));\n        });\n        const procedure = CheckerHelper.getProcedure(node.getName().getName(), this.symbolTable, params, undefined, new SearchOptions(this.scope, true, false));\n        this.symbolTable.callToSymbol.set(node, procedure);\n    }\n    visitAssignment(node) {\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        const symbol = this.symbolTable.getOrThrow(this.symbolTable.designatorToSymbol.get(node.getDesignator()));\n        if (!(symbol instanceof VariableSymbol && symbol.mutable) && !(symbol instanceof CollectionVariableSymbol)) {\n            console.dir(symbol);\n            throw new Error('Cannot asign to to a constant variable.');\n        }\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitNew(node) {\n        // TODO check if valid\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getArgs().forEach((argument) => argument.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope)));\n    }\n    visitConnect(node) {\n        // TODO check if connection is even possible\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitDisconnect(node) {\n        // TODO validity check\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitSend(node) {\n        if (node.getTarget().getName() === 'FINISHED') {\n            throw new Error('foo');\n        }\n        this.symbolTable.sendReceiveToSymbol.set(node, CheckerHelper.getMessage(this.symbolTable, this.scope, node.getFrom(), node.getTarget().getName(), false, node.getArgs()));\n    }\n    visitReceive(node) {\n        this.symbolTable.sendReceiveToSymbol.set(node, CheckerHelper.getMessage(this.symbolTable, this.scope, node.getFrom(), node.getReceiver().getName(), false, node.getTargets()));\n    }\n    visitDelete(node) {\n        node.getTarget().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitMove(node) {\n        node.getFrom().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitAwait(node) {\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n        node.getElseIfs().forEach((elseif) => elseif.accept(new FixStatementNodeVisitor(this.symbolTable, newScope)));\n        node.getElse()?.accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitElseIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitWhile(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitRepeat(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n    }\n    visitFor(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const designator = node.getDesignator();\n        if (!(designator instanceof BasicDesignatorNode)) {\n            throw new Error('Only basic designators currently supported.');\n        }\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBy()?.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getStatements().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitForeach(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getOf().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const variable = this.findCollectionVariable(node.getOf());\n        if (variable.parameters.length < node.getDesignators().length) {\n            throw new Error('Foreach designator match error.');\n        }\n        node.getDesignators().forEach((designator, index) => {\n            if (!(designator instanceof BasicDesignatorNode)) {\n                throw new Error('Only basic designators supported.');\n            }\n            this.symbolTable.registerVariable(new VariableSymbol(this.scope, designator.getName().getName(), true, variable.parameters[index]));\n            designator.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        });\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n}\n//# sourceMappingURL=fix-statement-node.js.map","import { VariableListRegisterVisitor } from './register-variable-list';\nimport { FixStatementNodeVisitor } from './fix-statement-node';\nexport class SymbolFix {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolFix(symbolTable, scope);\n        construction.fix(program);\n    }\n    fix(node) {\n        node.accept(new FixStatementNodeVisitor(this.symbolTable, this.programScope));\n        node.accept(new VariableListRegisterVisitor(this.symbolTable, this.programScope));\n    }\n}\n//# sourceMappingURL=symbol-fix.js.map","import { SymbolTable, ProgramScopeSymbol } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { SymbolFix } from './symbol-fix';\nexport class Checker {\n    check(uri, ast) {\n        const symbolTable = new SymbolTable();\n        const programScope = new ProgramScopeSymbol(symbolTable.globalScope, uri);\n        SymbolConstruction.run(symbolTable, ast, programScope);\n        SymbolFix.run(symbolTable, ast, programScope);\n        return symbolTable;\n    }\n}\n//# sourceMappingURL=checker.js.map","import { Visitor, LogicalOperator, PrefixOperator, InfixTermOperator, FactorPrefix, InfixFactorOperator, BasicDesignatorNode, ConstantListNode, VariableListNode, } from '@composita/ast';\nimport { OperatorCode, SystemCallOperator } from '@composita/il';\nimport { ComponentSymbol, ProcedureSymbol, BuiltInTypeSymbol, VariableSymbol, InterfaceSymbol, CollectionVariableSymbol, } from '@composita/symbols';\nimport { ILAssembler } from './il-assembler';\nexport class CodeGeneratorVisitor extends Visitor {\n    constructor(symbols, scope, metadata) {\n        super();\n        this.symbols = symbols;\n        this.scope = scope;\n        this.metadata = metadata;\n        this.assembler = new ILAssembler();\n    }\n    getInstructions() {\n        return this.assembler.complete();\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        const symbol = this.symbols.getOrThrow(this.symbols.designatorToSymbol.get(node));\n        if (symbol instanceof BuiltInTypeSymbol && symbol.scope === this.symbols.globalScope) {\n            switch (name) {\n                case 'FALSE':\n                    this.assembler.emitLoadBoolean(false);\n                    return;\n                case 'TRUE':\n                    this.assembler.emitLoadBoolean(true);\n                    return;\n                case 'PI':\n                    this.assembler.emitLoadFloat(Math.PI);\n                    return;\n            }\n        }\n        if (symbol instanceof VariableSymbol || symbol instanceof CollectionVariableSymbol) {\n            const variable = this.metadata.findVariable(symbol);\n            this.assembler.emit(OperatorCode.LoadVariable, variable);\n            return;\n        }\n        if (symbol instanceof InterfaceSymbol) {\n            const interfaceDescriptor = this.metadata.findInterface(symbol);\n            this.assembler.emit(OperatorCode.LoadService, interfaceDescriptor);\n            return;\n        }\n        throw Error(`Unsupported BasicDesignatorNode ${name}`);\n    }\n    visitBaseTargetDesignator(node) {\n        const symbol = this.symbols.designatorToSymbol.get(node);\n        if (symbol === undefined) {\n            throw new Error(`Failed base target designator node lookup.`);\n        }\n        node.getTarget().accept(this);\n        if (symbol instanceof ProcedureSymbol) {\n            this.handleCall(symbol);\n            return;\n        }\n        node.getBase().accept(this);\n    }\n    visitAttribute(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OperatorCode.AcquireShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OperatorCode.AcquireExclusive);\n                break;\n        }\n    }\n    handleLockRelease(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OperatorCode.ReleaseShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OperatorCode.ReleaseExclusive);\n                break;\n        }\n    }\n    visitStatementSequence(node) {\n        node.getAttributes().forEach((attribute) => attribute.accept(this));\n        node.getStatements().forEach((statement) => statement.accept(this));\n        node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n    }\n    handleSystemCall(procedure) {\n        const name = procedure.identifier;\n        const numberOfParams = procedure.parameters.length;\n        if (procedure.scope !== this.symbols.globalScope) {\n            return false;\n        }\n        switch (name) {\n            case 'WRITELINE':\n                this.assembler.emitSystemCall(SystemCallOperator.WriteLine, numberOfParams);\n                return true;\n            case 'ASSERT':\n                this.assembler.emitSystemCall(SystemCallOperator.Assert, numberOfParams);\n                return true;\n            case 'HALT':\n                this.assembler.emitSystemCall(SystemCallOperator.Halt, numberOfParams);\n                return true;\n            case 'INC':\n                this.assembler.emitSystemCall(SystemCallOperator.Inc, numberOfParams);\n                return true;\n            case 'DEC':\n                this.assembler.emitSystemCall(SystemCallOperator.Dec, numberOfParams);\n                return true;\n            case 'PASSIVATE':\n                this.assembler.emitSystemCall(SystemCallOperator.Passivate, numberOfParams);\n                return true;\n            case 'WRITE':\n                this.assembler.emitSystemCall(SystemCallOperator.Write, numberOfParams);\n                return true;\n            case 'WRITEHEX':\n                this.assembler.emitSystemCall(SystemCallOperator.WriteHex, numberOfParams);\n                return true;\n            case 'COUNT':\n                this.assembler.emitSystemCall(SystemCallOperator.Count, numberOfParams);\n                return true;\n            case 'LENGTH':\n                this.assembler.emitSystemCall(SystemCallOperator.Length, numberOfParams);\n                return true;\n            case 'SQRT':\n                this.assembler.emitSystemCall(SystemCallOperator.Sqrt, numberOfParams);\n                return true;\n            case 'SIN':\n                this.assembler.emitSystemCall(SystemCallOperator.Sin, numberOfParams);\n                return true;\n            case 'COS':\n                this.assembler.emitSystemCall(SystemCallOperator.Cos, numberOfParams);\n                return true;\n            case 'TAN':\n                this.assembler.emitSystemCall(SystemCallOperator.Tan, numberOfParams);\n                return true;\n            case 'ARCSIN':\n                this.assembler.emitSystemCall(SystemCallOperator.ArcSin, numberOfParams);\n                return true;\n            case 'ARCCOS':\n                this.assembler.emitSystemCall(SystemCallOperator.ArcCos, numberOfParams);\n                return true;\n            case 'ARCTAN':\n                this.assembler.emitSystemCall(SystemCallOperator.ArcTan, numberOfParams);\n                return true;\n            case 'MIN':\n                this.assembler.emitSystemCall(SystemCallOperator.Min, numberOfParams);\n                return true;\n            case 'MAX':\n                this.assembler.emitSystemCall(SystemCallOperator.Max, numberOfParams);\n                return true;\n            case 'CHARACTER':\n                this.assembler.emitSystemCall(SystemCallOperator.ToCharacter, numberOfParams);\n                return true;\n            case 'INTEGER':\n                this.assembler.emitSystemCall(SystemCallOperator.ToInteger, numberOfParams);\n                return true;\n            case 'REAL':\n                this.assembler.emitSystemCall(SystemCallOperator.ToReal, numberOfParams);\n                return true;\n            case 'TEXT':\n                this.assembler.emitSystemCall(SystemCallOperator.ToText, numberOfParams);\n                return true;\n            case 'RANDOM':\n                this.assembler.emitSystemCall(SystemCallOperator.Random, numberOfParams);\n                return true;\n        }\n        return false;\n    }\n    handleCall(procedure) {\n        if (this.handleSystemCall(procedure)) {\n            return;\n        }\n        this.assembler.emit(OperatorCode.ProcedureCall, this.metadata.findProcedure(procedure));\n    }\n    visitProcedureCall(node) {\n        node.getParams().forEach((param) => {\n            param.accept(this);\n        });\n        this.handleCall(this.symbols.getOrThrow(this.symbols.callToSymbol.get(node)));\n    }\n    visitAssignment(node) {\n        node.getDesignator().accept(this);\n        node.getExpression().accept(this);\n        this.assembler.emit(OperatorCode.StoreVariable);\n    }\n    visitConstantList(node) {\n        node.getConstants().forEach((constant) => {\n            const symbol = this.symbols.getOrThrow(this.symbols.variableToSymbol.get(constant));\n            const variable = this.metadata.findVariable(symbol);\n            this.assembler.emit(OperatorCode.LoadVariable, variable);\n            constant.getExpression().getExpression().accept(this);\n            this.assembler.emit(OperatorCode.StoreVariable);\n        });\n    }\n    visitNew(node) {\n        const designatorNode = node.getDesignator();\n        const designator = this.symbols.designatorToSymbol.get(designatorNode);\n        node.getArgs().forEach((arg) => arg.accept(this));\n        designatorNode.accept(this);\n        if (designator instanceof VariableSymbol || designator instanceof CollectionVariableSymbol) {\n            const type = designator.type;\n            if (type instanceof ComponentSymbol) {\n                this.assembler.emit(OperatorCode.New, this.metadata.findComponent(type));\n                return;\n            }\n            if (type instanceof BuiltInTypeSymbol) {\n                this.assembler.emit(OperatorCode.New, this.metadata.builtInTypeDescriptor(type));\n                return;\n            }\n        }\n        throw new Error(`Unsupported new statement.`);\n    }\n    visitConnect(node) {\n        node.getWhat().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OperatorCode.Connect);\n    }\n    visitDisconnect(node) {\n        node.getWhat().accept(this);\n        this.assembler.emit(OperatorCode.Disconnect);\n    }\n    visitSend(node) {\n        node.getArgs().forEach((arg) => arg.accept(this));\n        const from = node.getFrom();\n        if (from === undefined || from instanceof BasicDesignatorNode) {\n            this.assembler.emit(OperatorCode.LoadThis);\n        }\n        from?.accept(this);\n        const message = this.metadata.findMessage(this.symbols.getOrThrow(this.symbols.sendReceiveToSymbol.get(node)));\n        this.assembler.emit(OperatorCode.Send, message);\n    }\n    visitReceive(node) {\n        node.getTargets().forEach((arg) => arg.accept(this));\n        const from = node.getFrom();\n        if (from === undefined || from instanceof BasicDesignatorNode) {\n            this.assembler.emit(OperatorCode.LoadThis);\n        }\n        from?.accept(this);\n        const message = this.metadata.findMessage(this.symbols.getOrThrow(this.symbols.sendReceiveToSymbol.get(node)));\n        this.assembler.emit(OperatorCode.Receive, message);\n    }\n    visitDelete(node) {\n        node.getTarget().accept(this);\n        this.assembler.emit(OperatorCode.Delete);\n    }\n    visitMove(node) {\n        node.getFrom().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OperatorCode.Move);\n    }\n    visitAwait(node) {\n        const startAwait = this.assembler.createLabel();\n        const endAwait = this.assembler.createLabel();\n        this.assembler.setLabel(startAwait);\n        node.getExpression().accept(this);\n        this.assembler.emitBranchFalse(endAwait);\n        this.assembler.emitBranch(startAwait);\n        this.assembler.setLabel(endAwait);\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(this);\n        this.assembler.emit(OperatorCode.Return);\n    }\n    visitIf(node) {\n        const endIfLabel = this.assembler.createLabel();\n        const elseIfLabels = node.getElseIfs().map(() => this.assembler.createLabel());\n        const elseLabel = this.assembler.createLabel();\n        node.getExpression().accept(this);\n        if (node.getElseIfs().length > 0) {\n            this.assembler.emitBranchFalse(elseIfLabels[0]);\n            node.getThen().accept(this);\n            node.getElseIfs().forEach((elseIf, i) => {\n                this.assembler.emitBranch(endIfLabel);\n                this.assembler.setLabel(elseIfLabels[i]);\n                elseIf.getExpression().accept(this);\n                this.assembler.emitBranchFalse(i + 1 < node.getElseIfs().length\n                    ? elseIfLabels[i + 1]\n                    : node.getElse() !== undefined\n                        ? elseLabel\n                        : endIfLabel);\n                elseIf.getThen().accept(this);\n            });\n        }\n        if (node.getElse() !== undefined) {\n            this.assembler.emitBranchFalse(elseLabel);\n            node.getThen().accept(this);\n            this.assembler.emitBranch(endIfLabel);\n            this.assembler.setLabel(elseLabel);\n            node.getElse()?.accept(this);\n        }\n        if (node.getElseIfs().length === 0 && node.getElse() === undefined) {\n            this.assembler.emitBranchFalse(endIfLabel);\n            node.getThen().accept(this);\n        }\n        this.assembler.setLabel(endIfLabel);\n    }\n    visitWhile(node) {\n        const conditionLabel = this.assembler.createLabel();\n        const endWhile = this.assembler.createLabel();\n        this.assembler.setLabel(conditionLabel);\n        node.getExpresssion().accept(this);\n        this.assembler.emitBranchFalse(endWhile);\n        node.getBody().accept(this);\n        this.assembler.emitBranch(conditionLabel);\n        this.assembler.setLabel(endWhile);\n    }\n    visitRepeat(node) {\n        const repeatStart = this.assembler.createLabel();\n        const repeatEnd = this.assembler.createLabel();\n        this.assembler.setLabel(repeatStart);\n        node.getBody().accept(this);\n        node.getExpresssion().accept(this);\n        this.assembler.emitBranchFalse(repeatEnd);\n        this.assembler.emitBranch(repeatStart);\n        this.assembler.setLabel(repeatEnd);\n    }\n    visitFor(node) {\n        const conditionLabel = this.assembler.createLabel();\n        const forEnd = this.assembler.createLabel();\n        const designator = node.getDesignator();\n        designator.accept(this);\n        node.getExpression().accept(this);\n        this.assembler.emit(OperatorCode.StoreVariable);\n        this.assembler.setLabel(conditionLabel);\n        designator.accept(this);\n        node.getTo().accept(this);\n        const increment = node.getBy();\n        if (increment !== undefined) {\n            const decrement = this.assembler.createLabel();\n            const body = this.assembler.createLabel();\n            const constExpr = increment.getExpression();\n            constExpr.accept(this);\n            this.assembler.emitLoadInteger(0);\n            this.assembler.emit(OperatorCode.Greater); // is BY > 0\n            this.assembler.emitBranchFalse(decrement);\n            this.assembler.emit(OperatorCode.LessEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            this.assembler.emitBranch(body);\n            this.assembler.setLabel(decrement);\n            this.assembler.emit(OperatorCode.GreaterEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            this.assembler.setLabel(body);\n            node.getStatements().accept(this);\n            designator.accept(this);\n            constExpr.accept(this);\n            this.assembler.emitSystemCall(SystemCallOperator.Inc, 2);\n        }\n        else {\n            this.assembler.emit(OperatorCode.LessEqual);\n            this.assembler.emitBranchFalse(forEnd);\n            node.getStatements().accept(this);\n            designator.accept(this);\n            this.assembler.emitSystemCall(SystemCallOperator.Inc, 1);\n        }\n        this.assembler.emitBranch(conditionLabel);\n        this.assembler.setLabel(forEnd);\n    }\n    visitForeach(node) {\n        console.warn('FOREACH is not yet fully supported by the code generator and runtime.');\n        const conditionLabel = this.assembler.createLabel();\n        const forEnd = this.assembler.createLabel();\n        this.assembler.setLabel(conditionLabel);\n        node.getDesignators().forEach((designator) => designator.accept(this));\n        node.getOf().accept(this);\n        this.assembler.emitSystemCall(SystemCallOperator.LoadForEachDesignators, node.getDesignators().length);\n        this.assembler.emitBranchFalse(forEnd);\n        node.getBody().accept(this);\n        this.assembler.emitBranch(conditionLabel);\n        this.assembler.setLabel(forEnd);\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n    // EXPRESSIONS:\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n                this.assembler.emit(OperatorCode.Equal);\n                break;\n            case LogicalOperator.Less:\n                this.assembler.emit(OperatorCode.Less);\n                break;\n            case LogicalOperator.LessEqual:\n                this.assembler.emit(OperatorCode.LessEqual);\n                break;\n            case LogicalOperator.More:\n                this.assembler.emit(OperatorCode.Greater);\n                break;\n            case LogicalOperator.MoreEqual:\n                this.assembler.emit(OperatorCode.GreaterEqual);\n                break;\n            case LogicalOperator.NotEqual:\n                this.assembler.emit(OperatorCode.NotEqual);\n                break;\n        }\n    }\n    // TODO\n    //visitOffersRequiresExpression(_node: OffersRequiresExpressionNode): void {\n    //}\n    visitTypeCheck(node) {\n        node.getDesignator().accept(this);\n        node.getType().accept(this);\n        this.assembler.emit(OperatorCode.IsType);\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n                this.assembler.emit(OperatorCode.Negate);\n        }\n    }\n    visitTermChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixTermOperator.Minus:\n                this.assembler.emit(OperatorCode.Subtract);\n                break;\n            case InfixTermOperator.Or:\n                this.assembler.emit(OperatorCode.LogicOr);\n                break;\n            case InfixTermOperator.Plus:\n                this.assembler.emit(OperatorCode.Add);\n                break;\n        }\n    }\n    visitFactorChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixFactorOperator.AndText:\n                this.assembler.emit(OperatorCode.Add);\n                break;\n            case InfixFactorOperator.Div:\n            case InfixFactorOperator.DivText:\n                this.assembler.emit(OperatorCode.Divide);\n                break;\n            case InfixFactorOperator.Times:\n                this.assembler.emit(OperatorCode.Multiply);\n                break;\n            case InfixFactorOperator.ModText:\n                this.assembler.emit(OperatorCode.Modulo);\n                break;\n        }\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                this.assembler.emit(OperatorCode.Not);\n        }\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n    }\n    visitIntegerNumber(node) {\n        this.assembler.emitLoadInteger(node.getValue());\n    }\n    visitRealNumber(node) {\n        this.assembler.emitLoadFloat(node.getValue());\n    }\n    visitConstantCharacter(node) {\n        this.assembler.emitLoadCharacter(node.getCharacter());\n    }\n    visitText(node) {\n        this.assembler.emitLoadText(node.getText());\n    }\n    visitReceiveTest(node) {\n        const message = this.symbols.getOrThrow(this.symbols.patternToSymbol.get(node.getPattern()));\n        // this should probably be handled in the runtime\n        //const block = this.assembler.createLabel();\n        //this.assembler.setLabel(block);\n        const designator = node.getDesignator();\n        if (designator === undefined) {\n            this.assembler.emit(OperatorCode.LoadThis);\n        }\n        else {\n            designator.accept(this);\n        }\n        this.assembler.emit(OperatorCode.ReceiveTest, this.metadata.findMessage(message));\n        //this.assembler.emitBranchFalse(block);\n    }\n    visitInputTest(node) {\n        const designator = node.getDesignator();\n        if (designator === undefined) {\n            this.assembler.emit(OperatorCode.LoadThis);\n        }\n        else {\n            designator.accept(this);\n        }\n        this.assembler.emit(OperatorCode.InputTest);\n    }\n    visitExistsTest(node) {\n        node.getDesignator().accept(this);\n        this.assembler.emit(OperatorCode.ExistsTest);\n    }\n    visitFunctionCall(node) {\n        node.getArguments().forEach((arg) => arg.accept(this));\n        this.handleCall(this.symbols.getOrThrow(this.symbols.callToSymbol.get(node)));\n    }\n    visitProcedure(node) {\n        const symbol = this.symbols.getOrThrow(this.symbols.procedureToSymbol.get(node));\n        const visitor = new CodeGeneratorVisitor(this.symbols, symbol, this.metadata);\n        node.getStatements()?.accept(visitor);\n        const descriptor = this.metadata.findProcedure(symbol);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n    }\n}\nexport class ImplementationGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitImplementation(node) {\n        const descriptor = this.metadata.findImplementation(this.symbol);\n        let visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getDeclarations()\n            .filter((declaration) => declaration instanceof VariableListNode || declaration instanceof ConstantListNode)\n            .forEach((declaration) => declaration.accept(visitor));\n        descriptor.declarations.init.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getStatements()?.accept(visitor);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n    }\n}\nexport class ComponentGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitComponentBody(node) {\n        const descriptor = this.metadata.findComponent(this.symbol);\n        let visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getDeclarations()\n            .filter((declaration) => declaration instanceof VariableListNode || declaration instanceof ConstantListNode)\n            .forEach((declaration) => declaration.accept(visitor));\n        descriptor.declarations.init.instructions.push(...visitor.getInstructions());\n        node.getImplementations().forEach((declaration) => {\n            const implSymbol = this.symbols.getOrThrow(this.symbols.implementationToSymbol.get(declaration));\n            const implVisitor = new ImplementationGeneratorVisitor(implSymbol, this.metadata, this.symbols);\n            declaration.accept(implVisitor);\n        });\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getBeginBlock()?.accept(visitor);\n        descriptor.begin.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getActivityBlock()?.accept(visitor);\n        descriptor.activity.instructions.push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getFinallyBlock()?.accept(visitor);\n        descriptor.finally.instructions.push(...visitor.getInstructions());\n    }\n}\n//# sourceMappingURL=code-generator.js.map","import { ComponentDescriptor, BooleanDescriptor, CharacterDescriptor, FloatDescriptor, IntegerDescriptor, TextDescriptor, } from '@composita/il';\nexport class Metadata {\n    constructor() {\n        this.componentMapping = new Map();\n        this.interfaceMapping = new Map();\n        this.implementationMapping = new Map();\n        this.procedureMapping = new Map();\n        this.variableMapping = new Map();\n        this.messageMapping = new Map();\n        this.globalDescriptor = new ComponentDescriptor('@___@GLOBAL_DESCRIPTOR@___@');\n    }\n    getGlobalComponent() {\n        return this.globalDescriptor;\n    }\n    pushComponent(symbol, descriptor) {\n        this.componentMapping.set(symbol, descriptor);\n    }\n    findComponent(symbol) {\n        const result = this.componentMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushInterface(symbol, descriptor) {\n        this.interfaceMapping.set(symbol, descriptor);\n    }\n    findInterface(symbol) {\n        const result = this.interfaceMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Interface Mapping.');\n        }\n        return result;\n    }\n    pushImplementation(symbol, descriptor) {\n        this.implementationMapping.set(symbol, descriptor);\n    }\n    findImplementation(symbol) {\n        const result = this.implementationMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushProcedure(symbol, descriptor) {\n        this.procedureMapping.set(symbol, descriptor);\n    }\n    findProcedure(symbol) {\n        const result = this.procedureMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushVariable(symbol, descriptor) {\n        this.variableMapping.set(symbol, descriptor);\n    }\n    findVariable(symbol) {\n        const result = this.variableMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Variable Mapping.');\n        }\n        return result;\n    }\n    pushMessage(symbol, descriptor) {\n        this.messageMapping.set(symbol, descriptor);\n    }\n    findMessage(symbol) {\n        const result = this.messageMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Message Mapping.');\n        }\n        return result;\n    }\n    builtInTypeDescriptor(symbol) {\n        switch (symbol.identifier) {\n            case 'INTEGER':\n                return new IntegerDescriptor();\n            case 'REAL':\n                return new FloatDescriptor();\n            case 'BOOLEAN':\n                return new BooleanDescriptor();\n            case 'CHARACTER':\n                return new CharacterDescriptor();\n            case 'TEXT':\n                return new TextDescriptor();\n            default:\n                throw new Error('Unsupported variable built in type symbol.');\n        }\n    }\n}\n//# sourceMappingURL=metadata.js.map","import { IL, ComponentDescriptor, ImplementationDescriptor, ProcedureDescriptor, VariableDescriptor, InterfaceDescriptor, MessageDescriptor, TextDescriptor, IntegerDescriptor, } from '@composita/il';\nimport { ComponentSymbol, BuiltInTypeSymbol, InterfaceSymbol } from '@composita/symbols';\nimport { ComponentGeneratorVisitor } from './code-generator';\nimport { Metadata } from './metadata';\nimport { ComponentNode } from '@composita/ast';\nexport class Generator {\n    generate(symbols) {\n        const il = new IL();\n        const metadata = this.generateMetadata(symbols);\n        symbols.components.forEach((component) => this.generateComponent(component, symbols, il, metadata));\n        return il;\n    }\n    generateMetadata(symbols) {\n        const metadata = new Metadata();\n        metadata.pushComponent(symbols.anyComponentType, new ComponentDescriptor(symbols.anyComponentType.identifier));\n        metadata.pushInterface(symbols.anyRequiredInterfaceType, new InterfaceDescriptor(symbols.anyRequiredInterfaceType.identifier));\n        metadata.pushMessage(symbols.finishMessage, new MessageDescriptor(symbols.finishMessage.identifier));\n        metadata.pushMessage(symbols.anyMessage, new MessageDescriptor(symbols.anyMessage.identifier));\n        symbols.getSystemProcedures().forEach((procedure) => {\n            const descriptor = new ProcedureDescriptor(procedure.identifier, undefined);\n            descriptor.parameters.push(...procedure.parameters.map((type) => {\n                return new VariableDescriptor(type.identifier, this.convertSymbolToDescriptor(type, metadata), true);\n            }));\n            metadata.pushProcedure(procedure, descriptor);\n        });\n        symbols.interfaces.forEach((symbol) => metadata.pushInterface(symbol, new InterfaceDescriptor(symbol.identifier)));\n        symbols.components.forEach((component) => metadata.pushComponent(component, new ComponentDescriptor(component.identifier)));\n        symbols.messages.forEach((symbol) => {\n            const message = new MessageDescriptor(symbol.identifier);\n            symbol.parameters.forEach((value) => {\n                message.data.push(this.convertSymbolToDescriptor(value, metadata));\n            });\n            metadata.pushMessage(symbol, message);\n        });\n        symbols.interfaces.forEach((component) => this.fillInterface(component, metadata, symbols));\n        symbols.impplementations.forEach((implementation) => {\n            const implementationDescriptor = new ImplementationDescriptor(metadata.findInterface(implementation.interfaceSymbol));\n            metadata.pushImplementation(implementation, implementationDescriptor);\n        });\n        symbols.variables.forEach((variable) => {\n            const typeDescriptor = this.convertSymbolToDescriptor(variable.type, metadata);\n            const varDescriptor = new VariableDescriptor(variable.identifier, typeDescriptor, true);\n            if (typeDescriptor instanceof TextDescriptor) {\n                varDescriptor.indexTypes.push(new IntegerDescriptor());\n            }\n            metadata.pushVariable(variable, varDescriptor);\n        });\n        symbols.collectionVariables.forEach((variable) => {\n            const typeDescriptor = this.convertSymbolToDescriptor(variable.type, metadata);\n            const varDescriptor = new VariableDescriptor(variable.identifier, typeDescriptor, true);\n            varDescriptor.indexTypes.push(...variable.parameters.map((type) => this.convertSymbolToDescriptor(type, metadata)));\n            metadata.pushVariable(variable, varDescriptor);\n        });\n        symbols.procedures.forEach((procedure) => {\n            const returnType = procedure.returnType;\n            const returnTypeDescriptor = returnType === symbols.voidType ? undefined : this.convertSymbolToDescriptor(returnType, metadata);\n            const procedureDescriptor = new ProcedureDescriptor(procedure.identifier, returnTypeDescriptor);\n            procedureDescriptor.parameters.push(...procedure.parameters.map((type) => {\n                return new VariableDescriptor(type.identifier, this.convertSymbolToDescriptor(type, metadata), true);\n            }));\n            metadata.pushProcedure(procedure, procedureDescriptor);\n        });\n        symbols.components.forEach((component) => this.fillComponent(component, metadata, symbols));\n        return metadata;\n    }\n    convertSymbolToDescriptor(symbol, metadata) {\n        if (symbol instanceof BuiltInTypeSymbol) {\n            return metadata.builtInTypeDescriptor(symbol);\n        }\n        if (symbol instanceof ComponentSymbol) {\n            return metadata.findComponent(symbol);\n        }\n        if (symbol instanceof InterfaceSymbol) {\n            return metadata.findInterface(symbol);\n        }\n        throw new Error('Cannot convert to descriptor');\n    }\n    fillInterface(interfaceSymbol, metadata, symbols) {\n        // TODO\n        metadata.findInterface(interfaceSymbol);\n        symbols;\n    }\n    fillComponent(component, metadata, symbols) {\n        const descriptor = metadata.findComponent(component);\n        component.genericType.offered.forEach((interfaceDeclaration) => descriptor.offers.push(metadata.findInterface(interfaceDeclaration.interfaceSymbol)));\n        component.genericType.required.forEach((interfaceDeclaration) => descriptor.requires.push(metadata.findInterface(interfaceDeclaration.interfaceSymbol)));\n        symbols\n            .getImplementations(component)\n            .forEach((implementation) => descriptor.implementations.push(metadata.findImplementation(implementation)));\n        symbols\n            .getVariables(component)\n            .forEach((variable) => descriptor.declarations.variables.push(metadata.findVariable(variable)));\n        symbols\n            .getCollectionVariables(component)\n            .forEach((variable) => descriptor.declarations.variables.push(metadata.findVariable(variable)));\n        symbols\n            .getProcedures(component)\n            .forEach((procedure) => descriptor.declarations.procedures.push(metadata.findProcedure(procedure)));\n    }\n    generateComponent(component, symbols, il, metadata) {\n        const node = symbols.symbolToComponent.get(component);\n        if (node === undefined || !(node instanceof ComponentNode)) {\n            throw new Error(`Failed node lookup for component ${component.identifier}`);\n        }\n        node.getBody()?.accept(new ComponentGeneratorVisitor(component, metadata, symbols));\n        const descriptor = metadata.findComponent(component);\n        il.components.push(descriptor);\n        if (component.isEntryPoint) {\n            il.entryPoints.push(descriptor);\n        }\n    }\n}\n//# sourceMappingURL=generator.js.map","import { Lexer } from '@composita/lexer';\nimport { Parser } from '@composita/parser';\nimport { CompilerDiagnosis } from '@composita/diagnosis';\nimport { Checker } from '@composita/checker';\nimport { Generator } from '@composita/generator';\nexport class Compiler {\n    async compile(uri, code) {\n        const diagnosis = new CompilerDiagnosis();\n        const lexer = new Lexer(diagnosis, uri, code);\n        const parser = new Parser(diagnosis, lexer);\n        const ast = parser.parse();\n        if (diagnosis.hasErrors()) {\n            diagnosis.print(console.log);\n            throw new Error('Error during Lexing and/or Parsing. See console.log.');\n        }\n        const checker = new Checker();\n        const symbols = checker.check(uri, ast);\n        const generator = new Generator();\n        return generator.generate(symbols);\n    }\n}\n//# sourceMappingURL=compiler.js.map","import { System } from '@composita/system';\n\n// inspired from https://stackoverflow.com/questions/53818157/using-webpack-worker-loader-with-typescript-causes-cannot-find-module-error\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-restricted-globals */\nconst ctx: Worker = self as any;\n\nlet isRunning = false;\n\nfunction capture(...msgs: Array<string>): void {\n    msgs.forEach((msg) => {\n        if (msg !== undefined) {\n            ctx.postMessage({ output: msg, running: isRunning });\n        }\n    });\n}\n\nfunction updater(update: boolean): void {\n    isRunning = update;\n    ctx.postMessage({ output: '', running: isRunning });\n}\n\nfunction postError(msg: string): void {\n    isRunning = false;\n    ctx.postMessage({ output: `\\n!!! ${msg} !!!\\n\\n`, running: isRunning });\n}\n\nconst system = new System(capture.bind(ctx), updater.bind(ctx));\n\nctx.onmessage = async (event) => {\n    if (event.data.fn === 'run') {\n        try {\n            updater(true);\n            await system.run(event.data.uri, event.data.code);\n            ctx.postMessage({ output: '\\n> ', running: false });\n        } catch (err) {\n            postError(err.message);\n        }\n    }\n\n    if (event.data.fn === 'stop') {\n        try {\n            await system.stop();\n        } catch (err) {\n            postError(err.message);\n        }\n    }\n};\n\nexport default ctx;\n","import { Compiler } from '@composita/compiler';\nimport { Runtime } from '@composita/runtime';\nexport class System {\n    constructor(out, runningUpdate) {\n        this.out = out;\n        this.runningUpdate = runningUpdate;\n        this.compiler = new Compiler();\n        this.runtime = new Runtime();\n    }\n    async run(uri, code) {\n        this.runtime.changeOutput(this.out);\n        this.runtime.isRunningUpdate(this.runningUpdate);\n        const il = await this.compiler.compile(uri, code);\n        await this.runtime.execute(il);\n    }\n    async stop() {\n        this.runtime.reset();\n    }\n}\n//# sourceMappingURL=system.js.map"],"sourceRoot":""}