{"version":3,"sources":["../webpack/bootstrap","../../../src/descriptor.ts","../../../src/instruction.ts","../../../src/il.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../src/runtime.ts","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../src/tasks.ts","../../../src/scheduler.ts","../../../src/interpreter.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/process/browser.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../../src/types.ts","../../../src/location.ts","../../../src/tokens.ts","../node_modules/vscode-languageserver-types/lib/esm/main.js","../../../src/diagnosis.ts","../../../src/lexer.ts","../../../src/declaration.ts","../../../src/node.ts","../../../src/attribute.ts","../../../src/cardinality.ts","../../../src/expression.ts","../../../src/component.ts","../../../src/constant.ts","../../../src/simple-expression.ts","../../../src/term.ts","../../../src/factor.ts","../../../src/operand.ts","../../../src/designator.ts","../../../src/interface-declaration.ts","../../../src/implementation.ts","../../../src/interface.ts","../../../src/protocol-factor.ts","../../../src/name.ts","../../../src/parameter.ts","../../../src/procedure.ts","../../../src/program.ts","../../../src/statement.ts","../../../src/type.ts","../../../src/statement-sequence.ts","../../../src/keywords.ts","../../../src/variable.ts","../../../src/visitor.ts","../../../src/parser.ts","../../../src/compilation-symbols.ts","../../../src/scope-symbols.ts","../../../src/type-symbols.ts","../../../src/symboltable.ts","../../../src/cardinality-symbols.ts","../../../src/constant-symbols.ts","../../../src/generic-symbols.ts","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../src/implementation-symbols.ts","../../../src/procedure-symbols.ts","../../../src/variable-symbols.ts","../../../src/register-component.ts","../../../src/register-interface.ts","../../../src/fix-type-node.ts","../../../src/register-messages.ts","../../../src/register-procedure.ts","../../../src/register-implementation.ts","../../../src/fix-expression-node.ts","../../../src/register-constant-list.ts","../../../src/register-variable-list.ts","../../../src/register-types.ts","../../../src/symbol-construction.ts","../../../src/fix-statement-node.ts","../../../src/symbol-fix.ts","../../../src/checker.ts","../../../src/il-assembler.ts","../../../src/code-generator.ts","../../../src/metadata.ts","../../../src/generator.ts","../../../src/compiler.ts","workers/system.worker.ts","../../../src/system.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","push","OpCode","SystemCall","components","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","constructor","_typeof","obj","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","args","err","undefined","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","iter","from","minLen","toString","slice","test","_construct","Parent","Class","a","Function","_getPrototypeOf","setPrototypeOf","__proto__","_setPrototypeOf","_isNativeReflectConstruct","sham","Proxy","Date","e","Interpreter","tryLoadVariableValue","value2","right","evalStack","pop","left","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","keys","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_cache","Map","indexOf","has","set","Wrapper","other","SourcePosition","line","character","startACompare","start","compareTo","b","endACompare","end","Tag","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","Diagnostic","Command","TextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","is","candidate","Is","objectLiteral","number","one","two","three","four","uri","range","defined","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","color","label","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","location","message","Warning","Information","Hint","Unnecessary","Deprecated","severity","code","source","relatedInformation","command","_i","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","options","overwrite","ignoreIfExists","boolean","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","textEditChange","getTextEditChange","textDocumentEdit","createFile","checkDocumentChanges","renameFile","deleteFile","languageId","text","PlainText","Markdown","Text","Method","Field","Variable","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","containerName","detail","selectionRange","children","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","commandOrEdit","isPreferred","data","tabSize","insertSpaces","parent","TextDocument","mergeSort","compare","leftIdx","rightIdx","ret","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","startOffset","endOffset","substring","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","check","SpecialCharacter","currentCharacter","getCurrentCharacter","visitor","visitProcedure","what","expression","node","IdentifierKeywords","tryConsumeFixToken","designator","expectConsumeFixToken","getLocation","loop","scope","BuiltInTypeSymbolTag","BuiltInTypeSymbol","GenericComponentSymbol","receiver","base","desc","getOwnPropertyDescriptor","getName","componentSymbol","interfaceSymbol","getInterface","symbolTable","types","findType","getIdentifier","fixTypeNode","params","interfaceSymbols","getGenericType","getOffered","filter","symbol","map","getImplementation","implementationSymbol","fixExpressionNode","getExpression","accept","expressionSymbol","findExpressionType","registerVariable","assembler","ctx","isRunning","updater","postMessage","output","running","postError","msg","system","msgs","onmessage"],"mappings":"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","file":"static/js/system.worker.330edea8.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","export class Descriptor {\n    constructor(name) {\n        this.name = name;\n    }\n    static push(target, descriptor) {\n        return target.push(descriptor) - 1;\n    }\n    static load(target, index) {\n        if (index >= target.length || index < 0) {\n            throw new Error(`Invalid load index ${index}, target size ${target.length}.`);\n        }\n        return target[index];\n    }\n}\nexport class ComponentDescriptor extends Descriptor {\n    constructor(name) {\n        super(name);\n        this.procedures = new Array();\n        this.implementations = new Array();\n        this.fields = new Array();\n        this.offers = new Array();\n        this.requires = new Array();\n        this.initCode = new LocalCodeBlockDescriptor();\n        this.beginCode = new LocalCodeBlockDescriptor();\n        this.activityCode = new LocalCodeBlockDescriptor();\n        this.finallyCode = new LocalCodeBlockDescriptor();\n    }\n    getInitCode() {\n        return this.initCode;\n    }\n    getBeginCode() {\n        return this.beginCode;\n    }\n    getActivityCode() {\n        return this.activityCode;\n    }\n    getFinallyCode() {\n        return this.finallyCode;\n    }\n    pushProcedure(descriptor) {\n        return Descriptor.push(this.procedures, descriptor);\n    }\n    loadProcedure(index) {\n        return Descriptor.load(this.procedures, index);\n    }\n    pushImplementation(descriptor) {\n        return Descriptor.push(this.implementations, descriptor);\n    }\n    loadImplementation(index) {\n        return Descriptor.load(this.implementations, index);\n    }\n    pushField(descriptor) {\n        return Descriptor.push(this.fields, descriptor);\n    }\n    loadField(index) {\n        return Descriptor.load(this.fields, index);\n    }\n    pushOffer(descriptor) {\n        return Descriptor.push(this.offers, descriptor);\n    }\n    loadOffer(index) {\n        return Descriptor.load(this.offers, index);\n    }\n    pushRequires(descriptor) {\n        return Descriptor.push(this.requires, descriptor);\n    }\n    loadRequires(index) {\n        return Descriptor.load(this.requires, index);\n    }\n}\nexport class ProtocolDescriptor extends Descriptor {\n    constructor(parent) {\n        super('@@__PROTOCOL__@@');\n        this.parent = parent;\n    }\n    getParent() {\n        return this.parent;\n    }\n}\nexport var MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[MessageDirection[\"IN\"] = 0] = \"IN\";\n    MessageDirection[MessageDirection[\"OUT\"] = 1] = \"OUT\";\n})(MessageDirection || (MessageDirection = {}));\nexport class MessageDescriptor extends Descriptor {\n    constructor(name, direction) {\n        super(name);\n        this.direction = direction;\n        this.params = new Array();\n    }\n    getDirection() {\n        return this.direction;\n    }\n    loadParam(index) {\n        return Descriptor.load(this.params, index);\n    }\n    pushParam(variable) {\n        return Descriptor.push(this.params, variable);\n    }\n}\nexport class InterfaceDescriptor extends Descriptor {\n    constructor(name, min, max) {\n        super(name);\n        this.min = min;\n        this.max = max;\n        this.protocols = new Array();\n    }\n    loadProtocol(index) {\n        return Descriptor.load(this.protocols, index);\n    }\n    pushProtocol(descriptor) {\n        return Descriptor.push(this.protocols, descriptor);\n    }\n    getMin() {\n        return this.min;\n    }\n    getMax() {\n        return this.max;\n    }\n}\nexport class CodeBlockDescriptor extends Descriptor {\n    constructor() {\n        super(...arguments);\n        this.instructions = new Array();\n    }\n    getInstructions() {\n        return this.instructions;\n    }\n}\nvar LocalCodeBlockDescriptorTag;\n(function (LocalCodeBlockDescriptorTag) {\n    LocalCodeBlockDescriptorTag[LocalCodeBlockDescriptorTag[\"Tag\"] = 0] = \"Tag\";\n})(LocalCodeBlockDescriptorTag || (LocalCodeBlockDescriptorTag = {}));\nexport class LocalCodeBlockDescriptor extends CodeBlockDescriptor {\n    constructor() {\n        super('@@__LOCAL_CODE_BLOCK__@@');\n        this._localCodeBlockDescriptor = LocalCodeBlockDescriptorTag.Tag;\n    }\n}\nexport class ProcedureDescriptor extends CodeBlockDescriptor {\n    constructor(name, parent, paramTypes) {\n        super(name);\n        this.parent = parent;\n        this.paramTypes = paramTypes;\n    }\n}\nexport class ImplementationDescriptor extends CodeBlockDescriptor {\n    constructor(name, parent) {\n        super(name);\n        this.parent = parent;\n    }\n}\nexport class VariableIndexDescriptor extends Descriptor {\n    constructor(index) {\n        super('@@__VARIABLE_INDEX__@@');\n        this.index = index;\n    }\n    getIndex() {\n        return this.index;\n    }\n}\nvar VariableDescriptorBaseTag;\n(function (VariableDescriptorBaseTag) {\n    VariableDescriptorBaseTag[VariableDescriptorBaseTag[\"Tag\"] = 0] = \"Tag\";\n})(VariableDescriptorBaseTag || (VariableDescriptorBaseTag = {}));\nexport class VariableDescriptorBase extends Descriptor {\n    constructor() {\n        super(...arguments);\n        this._variableDescriptorBaseTag = VariableDescriptorBaseTag.Tag;\n    }\n}\nexport class VariableDescriptor extends VariableDescriptorBase {\n    constructor() {\n        super(...arguments);\n        this.value = undefined;\n    }\n    getValue() {\n        return this.value;\n    }\n    updateValue(value) {\n        this.value = value;\n    }\n}\nexport class CollectionVariableDescriptor extends VariableDescriptorBase {\n    constructor() {\n        super(...arguments);\n        this.values = new Map();\n    }\n    getValue(index) {\n        const value = this.values.get(index);\n        if (value === undefined) {\n            throw new Error(`Failed to lookup collection variable.`);\n        }\n        return value;\n    }\n    updateValue(index, value) {\n        this.values.set(index, value);\n    }\n}\n//# sourceMappingURL=descriptor.js.map","export var OpCode;\n(function (OpCode) {\n    // math binary\n    OpCode[OpCode[\"Add\"] = 0] = \"Add\";\n    OpCode[OpCode[\"Subtract\"] = 1] = \"Subtract\";\n    OpCode[OpCode[\"Multiply\"] = 2] = \"Multiply\";\n    OpCode[OpCode[\"Divide\"] = 3] = \"Divide\";\n    OpCode[OpCode[\"Negate\"] = 4] = \"Negate\";\n    OpCode[OpCode[\"Modulo\"] = 5] = \"Modulo\";\n    // compare\n    OpCode[OpCode[\"Equal\"] = 6] = \"Equal\";\n    OpCode[OpCode[\"Less\"] = 7] = \"Less\";\n    OpCode[OpCode[\"LessEqual\"] = 8] = \"LessEqual\";\n    OpCode[OpCode[\"Greater\"] = 9] = \"Greater\";\n    OpCode[OpCode[\"GreaterEqual\"] = 10] = \"GreaterEqual\";\n    OpCode[OpCode[\"NotEqual\"] = 11] = \"NotEqual\";\n    // unary invert\n    OpCode[OpCode[\"Not\"] = 12] = \"Not\";\n    // logic binary ops\n    OpCode[OpCode[\"LogicOr\"] = 13] = \"LogicOr\";\n    OpCode[OpCode[\"LogicAnd\"] = 14] = \"LogicAnd\";\n    // new component\n    OpCode[OpCode[\"New\"] = 15] = \"New\";\n    OpCode[OpCode[\"Delete\"] = 16] = \"Delete\";\n    OpCode[OpCode[\"Send\"] = 17] = \"Send\";\n    OpCode[OpCode[\"Receive\"] = 18] = \"Receive\";\n    OpCode[OpCode[\"Connect\"] = 19] = \"Connect\";\n    OpCode[OpCode[\"Disconnect\"] = 20] = \"Disconnect\";\n    OpCode[OpCode[\"CheckReceive\"] = 21] = \"CheckReceive\";\n    OpCode[OpCode[\"SysCall\"] = 22] = \"SysCall\";\n    OpCode[OpCode[\"ProcedureCall\"] = 23] = \"ProcedureCall\";\n    OpCode[OpCode[\"Return\"] = 24] = \"Return\";\n    // load constants\n    OpCode[OpCode[\"LoadConstantBoolean\"] = 25] = \"LoadConstantBoolean\";\n    OpCode[OpCode[\"LoadConstantText\"] = 26] = \"LoadConstantText\";\n    OpCode[OpCode[\"LoadConstantCharacter\"] = 27] = \"LoadConstantCharacter\";\n    OpCode[OpCode[\"LoadConstantFloat\"] = 28] = \"LoadConstantFloat\";\n    OpCode[OpCode[\"LoadConstantInteger\"] = 29] = \"LoadConstantInteger\";\n    OpCode[OpCode[\"LoadDescriptor\"] = 30] = \"LoadDescriptor\";\n    OpCode[OpCode[\"LoadThis\"] = 31] = \"LoadThis\";\n    OpCode[OpCode[\"Move\"] = 32] = \"Move\";\n    OpCode[OpCode[\"StoreArgument\"] = 33] = \"StoreArgument\";\n    OpCode[OpCode[\"LoadArgument\"] = 34] = \"LoadArgument\";\n    OpCode[OpCode[\"StoreLocalVariable\"] = 35] = \"StoreLocalVariable\";\n    OpCode[OpCode[\"LoadLocalVariable\"] = 36] = \"LoadLocalVariable\";\n    OpCode[OpCode[\"StoreVariable\"] = 37] = \"StoreVariable\";\n    OpCode[OpCode[\"LoadVariable\"] = 38] = \"LoadVariable\";\n    OpCode[OpCode[\"StoreCollectionVariable\"] = 39] = \"StoreCollectionVariable\";\n    OpCode[OpCode[\"LoadCollectionVariable\"] = 40] = \"LoadCollectionVariable\";\n    OpCode[OpCode[\"StoreConstantVariable\"] = 41] = \"StoreConstantVariable\";\n    OpCode[OpCode[\"LoadConstantVariable\"] = 42] = \"LoadConstantVariable\";\n    // concurrency\n    OpCode[OpCode[\"Await\"] = 43] = \"Await\";\n    OpCode[OpCode[\"AcquireShared\"] = 44] = \"AcquireShared\";\n    OpCode[OpCode[\"ReleaseShared\"] = 45] = \"ReleaseShared\";\n    OpCode[OpCode[\"AcquireExclusive\"] = 46] = \"AcquireExclusive\";\n    OpCode[OpCode[\"ReleaseExclusive\"] = 47] = \"ReleaseExclusive\";\n    OpCode[OpCode[\"Branch\"] = 48] = \"Branch\";\n    OpCode[OpCode[\"BranchTrue\"] = 49] = \"BranchTrue\";\n    OpCode[OpCode[\"BranchFalse\"] = 50] = \"BranchFalse\";\n    OpCode[OpCode[\"IsType\"] = 51] = \"IsType\";\n})(OpCode || (OpCode = {}));\nexport var SystemCall;\n(function (SystemCall) {\n    SystemCall[SystemCall[\"Write\"] = 0] = \"Write\";\n    SystemCall[SystemCall[\"WriteLine\"] = 1] = \"WriteLine\";\n    SystemCall[SystemCall[\"WriteHex\"] = 2] = \"WriteHex\";\n    SystemCall[SystemCall[\"Assert1\"] = 3] = \"Assert1\";\n    SystemCall[SystemCall[\"Assert2\"] = 4] = \"Assert2\";\n    SystemCall[SystemCall[\"Halt\"] = 5] = \"Halt\";\n    SystemCall[SystemCall[\"Inc1\"] = 6] = \"Inc1\";\n    SystemCall[SystemCall[\"Inc2\"] = 7] = \"Inc2\";\n    SystemCall[SystemCall[\"Dec1\"] = 8] = \"Dec1\";\n    SystemCall[SystemCall[\"Dec2\"] = 9] = \"Dec2\";\n    SystemCall[SystemCall[\"Passivate\"] = 10] = \"Passivate\";\n    SystemCall[SystemCall[\"Count\"] = 11] = \"Count\";\n    SystemCall[SystemCall[\"Length\"] = 12] = \"Length\";\n    SystemCall[SystemCall[\"Sqrt\"] = 13] = \"Sqrt\";\n    SystemCall[SystemCall[\"Sin\"] = 14] = \"Sin\";\n    SystemCall[SystemCall[\"Cos\"] = 15] = \"Cos\";\n    SystemCall[SystemCall[\"Tan\"] = 16] = \"Tan\";\n    SystemCall[SystemCall[\"ArcSin\"] = 17] = \"ArcSin\";\n    SystemCall[SystemCall[\"ArcCos\"] = 18] = \"ArcCos\";\n    SystemCall[SystemCall[\"ArcTan\"] = 19] = \"ArcTan\";\n    SystemCall[SystemCall[\"Random\"] = 20] = \"Random\";\n    SystemCall[SystemCall[\"Min\"] = 21] = \"Min\";\n    SystemCall[SystemCall[\"Max\"] = 22] = \"Max\";\n    SystemCall[SystemCall[\"ToCharacter\"] = 23] = \"ToCharacter\";\n    SystemCall[SystemCall[\"ToInteger\"] = 24] = \"ToInteger\";\n    SystemCall[SystemCall[\"ToReal\"] = 25] = \"ToReal\";\n    SystemCall[SystemCall[\"ToText\"] = 26] = \"ToText\";\n})(SystemCall || (SystemCall = {}));\nvar TextValueTag;\n(function (TextValueTag) {\n    TextValueTag[TextValueTag[\"Tag\"] = 0] = \"Tag\";\n})(TextValueTag || (TextValueTag = {}));\nexport class TextValue {\n    constructor(value) {\n        this.value = value;\n        this._textValueTag = TextValueTag.Tag;\n    }\n}\nvar CharacterValueTag;\n(function (CharacterValueTag) {\n    CharacterValueTag[CharacterValueTag[\"Tag\"] = 0] = \"Tag\";\n})(CharacterValueTag || (CharacterValueTag = {}));\nexport class CharacterValue {\n    constructor(value) {\n        this.value = value;\n        this._characterValueTag = CharacterValueTag.Tag;\n    }\n}\nvar FloatValueTag;\n(function (FloatValueTag) {\n    FloatValueTag[FloatValueTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatValueTag || (FloatValueTag = {}));\nexport class FloatValue {\n    constructor(value) {\n        this.value = value;\n        this._floatValueTag = FloatValueTag.Tag;\n    }\n}\nvar IntegerValueTag;\n(function (IntegerValueTag) {\n    IntegerValueTag[IntegerValueTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerValueTag || (IntegerValueTag = {}));\nexport class IntegerValue {\n    constructor(value) {\n        this.value = value;\n        this._integerValueTag = IntegerValueTag.Tag;\n    }\n}\nvar BooleanValueTag;\n(function (BooleanValueTag) {\n    BooleanValueTag[BooleanValueTag[\"Tag\"] = 0] = \"Tag\";\n})(BooleanValueTag || (BooleanValueTag = {}));\nexport class BooleanValue {\n    constructor(value) {\n        this.value = value;\n        this._booleanValueTag = BooleanValueTag.Tag;\n    }\n}\nvar SystemCallValueTag;\n(function (SystemCallValueTag) {\n    SystemCallValueTag[SystemCallValueTag[\"Tag\"] = 0] = \"Tag\";\n})(SystemCallValueTag || (SystemCallValueTag = {}));\nexport class SystemCallValue {\n    constructor(value) {\n        this.value = value;\n        this._systemCallValueTag = SystemCallValueTag.Tag;\n    }\n}\nvar FieldIndexTag;\n(function (FieldIndexTag) {\n    FieldIndexTag[FieldIndexTag[\"Tag\"] = 0] = \"Tag\";\n})(FieldIndexTag || (FieldIndexTag = {}));\nexport class FieldIndex {\n    constructor(index) {\n        this.index = index;\n        this._fieldIndexTag = FieldIndexTag.Tag;\n    }\n}\nvar LocalVariableIndexTag;\n(function (LocalVariableIndexTag) {\n    LocalVariableIndexTag[LocalVariableIndexTag[\"Tag\"] = 0] = \"Tag\";\n})(LocalVariableIndexTag || (LocalVariableIndexTag = {}));\nexport class LocalVariableIndex {\n    constructor(index) {\n        this.index = index;\n        this._localVariableIndexTag = LocalVariableIndexTag.Tag;\n    }\n}\nvar IndexValueTag;\n(function (IndexValueTag) {\n    IndexValueTag[IndexValueTag[\"Tag\"] = 0] = \"Tag\";\n})(IndexValueTag || (IndexValueTag = {}));\nexport class IndexValue {\n    constructor(index) {\n        this.index = index;\n        this._indexValueTag = IndexValueTag.Tag;\n    }\n}\nvar JumpOffsetTag;\n(function (JumpOffsetTag) {\n    JumpOffsetTag[JumpOffsetTag[\"Tag\"] = 0] = \"Tag\";\n})(JumpOffsetTag || (JumpOffsetTag = {}));\nexport class JumpOffset {\n    constructor(offset) {\n        this.offset = offset;\n        this._jumpOffsetTag = JumpOffsetTag.Tag;\n    }\n}\nvar LabelTag;\n(function (LabelTag) {\n    LabelTag[LabelTag[\"Tag\"] = 0] = \"Tag\";\n})(LabelTag || (LabelTag = {}));\nexport class Label {\n    constructor() {\n        this._labelTag = LabelTag.Tag;\n    }\n}\nexport class Instruction {\n    constructor(opCode, ...operands) {\n        this.opCode = opCode;\n        this.operands = new Array(...operands);\n    }\n    getOpCode() {\n        return this.opCode;\n    }\n    getOperands() {\n        return this.operands;\n    }\n}\n//# sourceMappingURL=instruction.js.map","import { Descriptor } from './descriptor';\nexport class IL {\n    constructor() {\n        this.entryPoints = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n    }\n    pushEntry(descriptor) {\n        this.entryPoints.push(descriptor);\n    }\n    getEntryPoints() {\n        return this.entryPoints;\n    }\n    pushComponent(descriptor) {\n        return Descriptor.push(this.components, descriptor);\n    }\n    loadComponent(index) {\n        return Descriptor.load(this.components, index);\n    }\n    pushInterface(descriptor) {\n        return Descriptor.push(this.interfaces, descriptor);\n    }\n    loadInterface(index) {\n        return Descriptor.load(this.interfaces, index);\n    }\n}\nexport * from './descriptor';\nexport * from './instruction';\n//# sourceMappingURL=il.js.map","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import { Scheduler } from '@composita/scheduler';\nimport { ComponentTask } from '@composita/tasks';\nimport { Interpreter } from '@composita/interpreter';\nexport class Runtime {\n    constructor() {\n        this.scheduler = new Scheduler();\n        this.nextTaskId = 0;\n        this.stop = false;\n        this.out = (...msgs) => msgs.forEach((msg) => process.stdout.write(msg));\n        this.isRunning = () => {\n            /* */\n        };\n        this.currentIl = undefined;\n        /* prevent creating multiple runtimes. */\n    }\n    static getInstance() {\n        if (this.instance === undefined) {\n            this.instance = new Runtime();\n        }\n        return this.instance;\n    }\n    reset() {\n        this.stop = true;\n    }\n    changeOutput(out) {\n        this.out = out;\n    }\n    isRunningUpdate(fn) {\n        this.isRunning = fn;\n    }\n    async haltProcess(processId) {\n        this.scheduler.killTask(processId);\n    }\n    async haltProcessWithCode(processId, n) {\n        await this.print(`Halting process, code ${n}`);\n        this.scheduler.killTask(processId);\n    }\n    async time() {\n        return new Date().getMilliseconds();\n    }\n    async execute(il) {\n        this.stop = false;\n        this.currentIl = il;\n        await this.run();\n    }\n    async run() {\n        this.isRunning(true);\n        this.currentIl?.getEntryPoints().forEach(async (descriptor) => {\n            await this.createTask(descriptor);\n        });\n        let task = this.scheduler.getActiveTask();\n        while (task !== undefined && !this.stop) {\n            await task.execute();\n            task = this.scheduler.getActiveTask();\n        }\n        this.isRunning(false);\n    }\n    async print(...msgs) {\n        this.out(...msgs);\n    }\n    async createTask(descriptor) {\n        const taskId = this.nextTaskId++;\n        const task = new ComponentTask(taskId, new Interpreter(this, taskId), descriptor);\n        this.scheduler.enqueue(task);\n    }\n}\nRuntime.instance = undefined;\n//# sourceMappingURL=runtime.js.map","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export var TaskState;\n(function (TaskState) {\n    TaskState[TaskState[\"Waiting\"] = 0] = \"Waiting\";\n    TaskState[TaskState[\"Init\"] = 1] = \"Init\";\n    TaskState[TaskState[\"Ready\"] = 2] = \"Ready\";\n    TaskState[TaskState[\"Running\"] = 3] = \"Running\";\n    TaskState[TaskState[\"Finally\"] = 4] = \"Finally\";\n    TaskState[TaskState[\"Done\"] = 5] = \"Done\";\n})(TaskState || (TaskState = {}));\nexport class Mailbox {\n    post(data) {\n        this.data = data;\n    }\n    receive() {\n        return this.data;\n    }\n    check() {\n        return this.data !== undefined;\n    }\n}\nexport class Task {\n    constructor(id, state, processor) {\n        this.id = id;\n        this.state = state;\n        this.processor = processor;\n        this.mailbox = new Mailbox();\n    }\n    getMailbox() {\n        return this.mailbox;\n    }\n    async execute() {\n        if (await this.isDone()) {\n            this.state = TaskState.Done;\n            return;\n        }\n        await this.processor.processNext();\n    }\n    getTaskId() {\n        return this.id;\n    }\n    getState() {\n        return this.state;\n    }\n}\nvar ActiveComponentCodeblock;\n(function (ActiveComponentCodeblock) {\n    ActiveComponentCodeblock[ActiveComponentCodeblock[\"None\"] = 0] = \"None\";\n    ActiveComponentCodeblock[ActiveComponentCodeblock[\"Begin\"] = 1] = \"Begin\";\n    ActiveComponentCodeblock[ActiveComponentCodeblock[\"Activity\"] = 2] = \"Activity\";\n    ActiveComponentCodeblock[ActiveComponentCodeblock[\"Finally\"] = 3] = \"Finally\";\n})(ActiveComponentCodeblock || (ActiveComponentCodeblock = {}));\nexport class ComponentTask extends Task {\n    constructor(id, processor, descriptor) {\n        super(id, TaskState.Waiting, processor);\n        this.descriptor = descriptor;\n        this.childTasks = new Array();\n        this.activeBlock = ActiveComponentCodeblock.None;\n    }\n    addChild(childTaskId) {\n        this.childTasks.push(childTaskId);\n    }\n    loadBlock(code, block) {\n        if (code.getInstructions().length === 0) {\n            return false;\n        }\n        this.activeBlock = block;\n        this.processor.load(...code.getInstructions());\n        return true;\n    }\n    loadNextCodeBlock() {\n        switch (this.activeBlock) {\n            case ActiveComponentCodeblock.None:\n                return (this.loadBlock(this.descriptor.getBeginCode(), ActiveComponentCodeblock.Begin) ||\n                    this.loadBlock(this.descriptor.getActivityCode(), ActiveComponentCodeblock.Activity) ||\n                    this.loadBlock(this.descriptor.getFinallyCode(), ActiveComponentCodeblock.Finally));\n            case ActiveComponentCodeblock.Begin:\n                return (this.loadBlock(this.descriptor.getActivityCode(), ActiveComponentCodeblock.Activity) ||\n                    this.loadBlock(this.descriptor.getFinallyCode(), ActiveComponentCodeblock.Finally));\n            case ActiveComponentCodeblock.Activity:\n                return this.loadBlock(this.descriptor.getFinallyCode(), ActiveComponentCodeblock.Finally);\n        }\n        return false;\n    }\n    async isDone() {\n        return this.processor.isDone() && !this.loadNextCodeBlock();\n    }\n}\nexport class ImplementationTask extends Task {\n    constructor(id, parentId, processor, descriptor) {\n        super(id, TaskState.Waiting, processor);\n        this.parentId = parentId;\n        this.descriptor = descriptor;\n    }\n    getParentTaskId() {\n        return this.parentId;\n    }\n    init() {\n        this.state = TaskState.Ready;\n        this.processor.load(...this.descriptor.getInstructions());\n    }\n    async isDone() {\n        return this.processor.isDone();\n    }\n}\n//# sourceMappingURL=tasks.js.map","import { TaskState } from '@composita/tasks';\nexport class Scheduler {\n    constructor() {\n        this.activeTask = undefined;\n        this.readyTasks = new Array();\n    }\n    enqueue(task) {\n        this.readyTasks.push(task);\n    }\n    getActiveTask() {\n        // simple scheduling, just loop through all the tasks.\n        this.scheduleNext();\n        return this.activeTask;\n    }\n    killTask(id) {\n        // TODO probably something more sofisticated.\n        this.readyTasks = this.readyTasks.filter((task) => task.getTaskId() !== id);\n    }\n    scheduleNext() {\n        if (this.activeTask !== undefined && this.activeTask.getState() !== TaskState.Done) {\n            this.readyTasks.push(this.activeTask);\n        }\n        this.activeTask = this.readyTasks.shift();\n    }\n}\n//# sourceMappingURL=scheduler.js.map","import { ComponentDescriptor, OpCode, SystemCall, TextValue, FloatValue, IntegerValue, SystemCallValue, CharacterValue, BooleanValue, JumpOffset, VariableDescriptor, } from '@composita/il';\nexport class EvaluationStack {\n    constructor() {\n        this.stack = new Array();\n    }\n    pop() {\n        if (this.stack.length === 0) {\n            return undefined;\n        }\n        return this.stack.pop();\n    }\n    push(data) {\n        this.stack.push(data);\n    }\n}\nexport class Interpreter {\n    constructor(sysCaller, processId) {\n        this.sysCaller = sysCaller;\n        this.processId = processId;\n        this.code = new Array();\n        this.instructionPointer = 0;\n        this.evalStack = new EvaluationStack();\n    }\n    load(...code) {\n        this.code = code;\n        this.instructionPointer = 0;\n        this.evalStack = new EvaluationStack();\n    }\n    isDone() {\n        return this.code.length <= this.instructionPointer;\n    }\n    static tryLoadVariableValue(value) {\n        return value instanceof VariableDescriptor ? value.getValue() : value;\n    }\n    async syscall(operands) {\n        if (operands.length === 0) {\n            throw new Error('System call operation failed, no operand found.');\n        }\n        if (!(operands[0] instanceof SystemCallValue)) {\n            throw new Error('System call operation failed, first operandmust be a system call value.');\n        }\n        switch (operands[0].value) {\n            case SystemCall.WriteLine:\n                await this.sysCaller.print('\\n');\n                return;\n        }\n        let value = this.evalStack.pop();\n        switch (operands[0].value) {\n            case SystemCall.Write:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof TextValue ||\n                    value instanceof CharacterValue ||\n                    value instanceof FloatValue ||\n                    value instanceof IntegerValue) {\n                    await this.sysCaller.print(value.value.toString());\n                    return;\n                }\n                break;\n            case SystemCall.WriteHex:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof IntegerValue) {\n                    await this.sysCaller.print(value.value.toString(16));\n                    return;\n                }\n                break;\n            case SystemCall.Assert1:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof BooleanValue) {\n                    if (!value.value) {\n                        await this.sysCaller.print(`Assertion failed.\\n`);\n                        await this.sysCaller.haltProcess(this.processId);\n                    }\n                }\n                break;\n            case SystemCall.Halt:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof IntegerValue) {\n                    await this.sysCaller.haltProcessWithCode(this.processId, value.value);\n                    return;\n                }\n                break;\n            case SystemCall.Inc1:\n                if (value instanceof VariableDescriptor) {\n                    const currentValue = value.getValue();\n                    if (currentValue instanceof IntegerValue) {\n                        value.updateValue(new IntegerValue(currentValue.value + 1));\n                        this.evalStack.push(value);\n                        return;\n                    }\n                }\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(value.value + 1));\n                    return;\n                }\n                break;\n            case SystemCall.Dec1:\n                if (value instanceof VariableDescriptor) {\n                    const currentValue = value.getValue();\n                    if (currentValue instanceof IntegerValue) {\n                        value.updateValue(new IntegerValue(currentValue.value - 1));\n                        this.evalStack.push(value);\n                        return;\n                    }\n                }\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(value.value - 1));\n                    return;\n                }\n                break;\n            case SystemCall.Passivate:\n                // TODO\n                return;\n            case SystemCall.Count:\n                // TODO: not supported yet, defaulting to 1\n                if (value instanceof TextValue) {\n                    this.evalStack.push(new IntegerValue(1));\n                    return;\n                }\n                return;\n            case SystemCall.Length:\n                if (value instanceof TextValue) {\n                    this.evalStack.push(new IntegerValue(value.value.length));\n                    return;\n                }\n                break;\n            case SystemCall.Sqrt:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.sqrt(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.Sin:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.sin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.Cos:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.cos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.Tan:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.tan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.ArcSin:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.asin(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.ArcCos:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.acos(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.ArcTan:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new FloatValue(Math.atan(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.Min:\n                // TODO\n                this.evalStack.push(new FloatValue(Number.MIN_VALUE));\n                return;\n            case SystemCall.Max:\n                // TODO\n                this.evalStack.push(new FloatValue(Number.MAX_VALUE));\n                return;\n            case SystemCall.ToCharacter:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new CharacterValue(String.fromCharCode(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.ToText:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof CharacterValue) {\n                    this.evalStack.push(new TextValue(value.value));\n                    return;\n                }\n                break;\n            case SystemCall.ToInteger:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof FloatValue) {\n                    this.evalStack.push(new IntegerValue(Math.trunc(value.value)));\n                    return;\n                }\n                break;\n            case SystemCall.ToReal:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value instanceof IntegerValue) {\n                    this.evalStack.push(new FloatValue(value.value));\n                    return;\n                }\n                break;\n        }\n        let value2 = this.evalStack.pop();\n        switch (operands[0].value) {\n            case SystemCall.Assert2:\n                value = Interpreter.tryLoadVariableValue(value);\n                value2 = Interpreter.tryLoadVariableValue(value2);\n                if (value2 instanceof BooleanValue && value instanceof IntegerValue) {\n                    if (!value2.value) {\n                        // ignore param n\n                        this.sysCaller.print(`Assertion failed. Code ${value}.`);\n                        this.sysCaller.haltProcessWithCode(this.processId, value.value);\n                        return;\n                    }\n                }\n                break;\n            case SystemCall.Inc2:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value2 instanceof VariableDescriptor) {\n                    const currentValue = value2.getValue();\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.updateValue(new IntegerValue(currentValue.value + value.value));\n                        this.evalStack.push(value);\n                        return;\n                    }\n                }\n                if (value2 instanceof IntegerValue && value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(value2.value + value.value));\n                    return;\n                }\n                break;\n            case SystemCall.Dec2:\n                value = Interpreter.tryLoadVariableValue(value);\n                if (value2 instanceof VariableDescriptor) {\n                    const currentValue = value2.getValue();\n                    if (currentValue instanceof IntegerValue && value instanceof IntegerValue) {\n                        value2.updateValue(new IntegerValue(currentValue.value - value.value));\n                        this.evalStack.push(value);\n                        return;\n                    }\n                }\n                if (value2 instanceof IntegerValue && value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(value2.value - value.value));\n                    return;\n                }\n                break;\n            case SystemCall.Random:\n                value = Interpreter.tryLoadVariableValue(value);\n                value2 = Interpreter.tryLoadVariableValue(value2);\n                if (value2 instanceof IntegerValue && value instanceof IntegerValue) {\n                    this.evalStack.push(new IntegerValue(Math.trunc(Math.random() * value.value) + value2.value));\n                    return;\n                }\n                break;\n        }\n        throw new Error(`Failed system call '${operands[0].value}'. Operation not supported.`);\n    }\n    async add() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof TextValue && left instanceof TextValue) {\n            this.evalStack.push(new TextValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value + right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value + right.value)));\n            return;\n        }\n        throw new Error(`Add operation failed.`);\n    }\n    async sub() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value - right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value - right.value)));\n            return;\n        }\n        throw new Error(`Sub operation failed.`);\n    }\n    async mul() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value * right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value * right.value)));\n            return;\n        }\n        throw new Error(`Mul operation failed.`);\n    }\n    async div() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value / right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value / right.value)));\n            return;\n        }\n        throw new Error(`Div operation failed.`);\n    }\n    async mod() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof FloatValue && left instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(left.value % right.value));\n            return;\n        }\n        if (right instanceof IntegerValue && left instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(Math.trunc(left.value % right.value)));\n            return;\n        }\n        throw new Error(`Mod operation failed.`);\n    }\n    async and() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(left.value && right.value));\n            return;\n        }\n        throw new Error(`And operation failed.`);\n    }\n    async or() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof BooleanValue && left instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(left.value || right.value));\n            return;\n        }\n        throw new Error(`Or operation failed.`);\n    }\n    async not() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(!right.value));\n            return;\n        }\n        throw new Error(`Not operation failed.`);\n    }\n    async negate() {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right instanceof FloatValue) {\n            this.evalStack.push(new FloatValue(-right.value));\n            return;\n        }\n        if (right instanceof IntegerValue) {\n            this.evalStack.push(new IntegerValue(-right.value));\n            return;\n        }\n        throw new Error(`Negate operation failed.`);\n    }\n    async loadText(operands) {\n        if (operands.length >= 1 && operands[0] instanceof TextValue) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Text load operation failed.`);\n    }\n    async loadCharacter(operands) {\n        if (operands.length >= 1 && operands[0] instanceof CharacterValue) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Character load operation failed.`);\n    }\n    async loadFloat(operands) {\n        if (operands.length > 0 && operands[0] instanceof FloatValue) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Float load operation failed.`);\n    }\n    async loadInteger(operands) {\n        if (operands.length > 0 && operands[0] instanceof IntegerValue) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Integer load operation failed.`);\n    }\n    async loadBoolean(operands) {\n        if (operands.length > 0 && operands[0] instanceof BooleanValue) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Boolean load operation failed.`);\n    }\n    async branch(operands) {\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions only have one operand.`);\n        }\n        const operand = operands[0];\n        if (operand instanceof JumpOffset) {\n            this.instructionPointer = this.instructionPointer + operand.offset;\n            return;\n        }\n        throw new Error(`Failed jump.`);\n    }\n    async branchConditionally(branch, operands) {\n        const condition = this.evalStack.pop();\n        if (operands.length !== 1) {\n            throw new Error(`Branch conditions only have one operand.`);\n        }\n        if (condition instanceof BooleanValue && operands[0] instanceof JumpOffset) {\n            if (condition.value === branch) {\n                this.branch(operands);\n                return;\n            }\n            return;\n        }\n        throw new Error(`Conditional jump failed.`);\n    }\n    async compareLessGreater(left, right, fn) {\n        left = Interpreter.tryLoadVariableValue(left) ?? left;\n        right = Interpreter.tryLoadVariableValue(right) ?? right;\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported less/greater comparison.`);\n    }\n    async compareEquality(left, right, fn) {\n        left = Interpreter.tryLoadVariableValue(left) ?? left;\n        right = Interpreter.tryLoadVariableValue(right) ?? right;\n        if (left instanceof BooleanValue && right instanceof BooleanValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof IntegerValue && right instanceof IntegerValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof FloatValue && right instanceof FloatValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof TextValue && right instanceof TextValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        if (left instanceof CharacterValue && right instanceof CharacterValue) {\n            this.evalStack.push(new BooleanValue(fn(left.value, right.value)));\n            return;\n        }\n        throw new Error(`Unsupported equality comparison.`);\n    }\n    async handleCompareOp(op) {\n        const right = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (right === undefined) {\n            throw new Error(`Unknown right compare argument.`);\n        }\n        const left = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        if (left === undefined) {\n            throw new Error(`Unknown left compare argument.`);\n        }\n        switch (op) {\n            case OpCode.Equal:\n                await this.compareEquality(left, right, (l, r) => l === r);\n                return;\n            case OpCode.NotEqual:\n                await this.compareEquality(left, right, (l, r) => l !== r);\n                return;\n            case OpCode.Less:\n                await this.compareLessGreater(left, right, (l, r) => l < r);\n                return;\n            case OpCode.LessEqual:\n                await this.compareLessGreater(left, right, (l, r) => l <= r);\n                return;\n            case OpCode.Greater:\n                await this.compareLessGreater(left, right, (l, r) => l > r);\n                return;\n            case OpCode.GreaterEqual:\n                await this.compareLessGreater(left, right, (l, r) => l >= r);\n                return;\n        }\n        throw new Error(`Unsupprted compare op.`);\n    }\n    async storeVariable() {\n        const value = Interpreter.tryLoadVariableValue(this.evalStack.pop());\n        const variable = this.evalStack.pop();\n        if (variable instanceof VariableDescriptor) {\n            const varValue = variable.getValue();\n            if (varValue === undefined &&\n                (value instanceof IntegerValue ||\n                    value instanceof FloatValue ||\n                    value instanceof BooleanValue ||\n                    value instanceof CharacterValue ||\n                    value instanceof TextValue ||\n                    value instanceof ComponentDescriptor)) {\n                variable.updateValue(value);\n                return;\n            }\n            if ((value instanceof IntegerValue && varValue instanceof IntegerValue) ||\n                (value instanceof IntegerValue && varValue instanceof IntegerValue) ||\n                (value instanceof FloatValue && varValue instanceof FloatValue) ||\n                (value instanceof BooleanValue && varValue instanceof BooleanValue) ||\n                (value instanceof CharacterValue && varValue instanceof CharacterValue) ||\n                (value instanceof TextValue && varValue instanceof TextValue) ||\n                (value instanceof ComponentDescriptor && varValue instanceof ComponentDescriptor)) {\n                variable.updateValue(value);\n                return;\n            }\n        }\n        throw new Error(`Unsupported Variable Store.`);\n    }\n    async loadVariable(operands) {\n        if (operands.length === 1 && operands[0] instanceof VariableDescriptor) {\n            this.evalStack.push(operands[0]);\n            return;\n        }\n        throw new Error(`Unsupported Variable Load.`);\n    }\n    async processNext() {\n        if (this.isDone()) {\n            return;\n        }\n        const nextInstruction = this.code[this.instructionPointer++];\n        switch (nextInstruction.getOpCode()) {\n            case OpCode.New:\n                await this.sysCaller.createTask(nextInstruction.getOperands()[0]);\n                break;\n            case OpCode.Delete:\n                // TODO\n                break;\n            case OpCode.SysCall:\n                await this.syscall(nextInstruction.getOperands());\n                break;\n            case OpCode.LoadConstantText:\n                this.loadText(nextInstruction.getOperands());\n                break;\n            case OpCode.LoadConstantCharacter:\n                this.loadCharacter(nextInstruction.getOperands());\n                break;\n            case OpCode.LoadConstantFloat:\n                this.loadFloat(nextInstruction.getOperands());\n                break;\n            case OpCode.LoadConstantInteger:\n                await this.loadInteger(nextInstruction.getOperands());\n                break;\n            case OpCode.LoadConstantBoolean:\n                await this.loadBoolean(nextInstruction.getOperands());\n                break;\n            case OpCode.Add:\n                await this.add();\n                break;\n            case OpCode.Subtract:\n                await this.sub();\n                break;\n            case OpCode.Multiply:\n                await this.mul();\n                break;\n            case OpCode.Divide:\n                await this.div();\n                break;\n            case OpCode.Modulo:\n                await this.mod();\n                break;\n            case OpCode.LogicAnd:\n                await this.and();\n                break;\n            case OpCode.LogicOr:\n                await this.or();\n                break;\n            case OpCode.Not:\n                await this.not();\n                break;\n            case OpCode.Negate:\n                await this.negate();\n                break;\n            case OpCode.Equal:\n            case OpCode.Less:\n            case OpCode.LessEqual:\n            case OpCode.Greater:\n            case OpCode.GreaterEqual:\n            case OpCode.NotEqual:\n                await this.handleCompareOp(nextInstruction.getOpCode());\n                break;\n            case OpCode.Branch:\n                await this.branch(nextInstruction.getOperands());\n                break;\n            case OpCode.BranchFalse:\n                await this.branchConditionally(false, nextInstruction.getOperands());\n                break;\n            case OpCode.BranchTrue:\n                await this.branchConditionally(true, nextInstruction.getOperands());\n                break;\n            case OpCode.Send:\n                // TODO\n                break;\n            case OpCode.Receive:\n                // TODO\n                break;\n            case OpCode.Connect:\n                // TODO\n                break;\n            case OpCode.Disconnect:\n                // TODO\n                break;\n            case OpCode.CheckReceive:\n                // TODO\n                break;\n            case OpCode.ProcedureCall:\n                // TODO\n                break;\n            case OpCode.Return:\n                // TODO\n                break;\n            case OpCode.LoadDescriptor:\n                // TODO\n                break;\n            case OpCode.LoadThis:\n                // TODO\n                break;\n            case OpCode.Move:\n                // TODO\n                break;\n            case OpCode.StoreArgument:\n                // TODO\n                break;\n            case OpCode.LoadArgument:\n                // TODO\n                break;\n            case OpCode.StoreLocalVariable:\n                // TODO\n                break;\n            case OpCode.LoadLocalVariable:\n                // TODO\n                break;\n            case OpCode.StoreVariable:\n                this.storeVariable();\n                break;\n            case OpCode.LoadVariable:\n                this.loadVariable(nextInstruction.getOperands());\n                break;\n            case OpCode.StoreCollectionVariable:\n                // TODO\n                break;\n            case OpCode.LoadCollectionVariable:\n                // TODO\n                break;\n            case OpCode.StoreConstantVariable:\n                // TODO\n                break;\n            case OpCode.LoadConstantVariable:\n                // TODO\n                break;\n            case OpCode.Await:\n                // TODO\n                break;\n            case OpCode.AcquireShared:\n                // TODO\n                break;\n            case OpCode.ReleaseShared:\n                // TODO\n                break;\n            case OpCode.AcquireExclusive:\n                // TODO\n                break;\n            case OpCode.ReleaseExclusive:\n                // TODO\n                break;\n            case OpCode.IsType:\n                // TODO\n                break;\n        }\n    }\n}\n//# sourceMappingURL=interpreter.js.map","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export class Sleep {\n    static async forMilliseconds(ms) {\n        await new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    static async forSeconds(s) {\n        await this.forMilliseconds(s * 1000);\n    }\n}\nvar NonEmptyArrayTag;\n(function (NonEmptyArrayTag) {\n    NonEmptyArrayTag[NonEmptyArrayTag[\"Tag\"] = 0] = \"Tag\";\n})(NonEmptyArrayTag || (NonEmptyArrayTag = {}));\n/**\n * Simple Array extension requiring at least one element.\n */\nexport class NonEmptyArray extends Array {\n    constructor(firstItem, ...items) {\n        super(firstItem, ...items);\n        this._tag = NonEmptyArrayTag.Tag;\n    }\n    static fromArray(array) {\n        if (array.length < 1) {\n            return undefined;\n        }\n        const firstItem = array.shift();\n        if (firstItem === undefined) {\n            return undefined;\n        }\n        const result = new NonEmptyArray(firstItem);\n        array.forEach((item) => {\n            result.push(item);\n        });\n        return result;\n    }\n}\nexport var CompareValue;\n(function (CompareValue) {\n    CompareValue[CompareValue[\"LT\"] = -1] = \"LT\";\n    CompareValue[CompareValue[\"EQ\"] = 0] = \"EQ\";\n    CompareValue[CompareValue[\"GT\"] = 1] = \"GT\";\n})(CompareValue || (CompareValue = {}));\n//# sourceMappingURL=types.js.map","import { CompareValue } from '@composita/ts-utility-types';\nexport class SourcePosition {\n    constructor(line, character) {\n        this.line = line;\n        this.character = character;\n    }\n    static from(other) {\n        return other instanceof SourcePosition ? other : new SourcePosition(other.line, other.character);\n    }\n    compareTo(other) {\n        if (this.line < other.line || (this.line === other.line && this.character < other.character)) {\n            return CompareValue.LT;\n        }\n        if (this.line > other.line || (this.line === other.line && this.character > other.character)) {\n            return CompareValue.GT;\n        }\n        return CompareValue.EQ;\n    }\n}\nexport class SourceRange {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    static merge(a, b) {\n        const startACompare = SourcePosition.from(a.start).compareTo(b.start);\n        const endACompare = SourcePosition.from(a.end).compareTo(b.end);\n        const startRange = startACompare === CompareValue.LT ? a.start : startACompare === CompareValue.GT ? b.start : a.start;\n        const endRange = endACompare === CompareValue.LT ? b.end : endACompare === CompareValue.GT ? a.end : b.end;\n        return new SourceRange(startRange, endRange);\n    }\n}\nexport class SourceLocation {\n    constructor(uri, range) {\n        this.uri = uri;\n        this.range = range;\n    }\n    static merge(a, b) {\n        if (a.uri !== b.uri) {\n            throw Error('Source location URI missmatch.');\n        }\n        return new SourceLocation(a.uri, SourceRange.merge(a.range, b.range));\n    }\n}\n//# sourceMappingURL=location.js.map","export var Tag;\n(function (Tag) {\n    Tag[\"EOT\"] = \"EOT\";\n    Tag[\"Begin\"] = \"BEGIN\";\n    Tag[\"Activity\"] = \"ACTIVITY\";\n    Tag[\"Finally\"] = \"FINALLY\";\n    Tag[\"End\"] = \"END\";\n    Tag[\"Constant\"] = \"CONSTANT\";\n    Tag[\"Variable\"] = \"VARIABLE\";\n    Tag[\"In\"] = \"IN\";\n    Tag[\"Out\"] = \"OUT\";\n    Tag[\"Is\"] = \"IS\";\n    Tag[\"Type\"] = \"TYPE\";\n    Tag[\"Any\"] = \"ANY\";\n    Tag[\"Finish\"] = \"FINISH\";\n    Tag[\"Component\"] = \"COMPONENT\";\n    Tag[\"Interface\"] = \"INTERFACE\";\n    Tag[\"Procedure\"] = \"PROCEDURE\";\n    Tag[\"Implementation\"] = \"IMPLEMENTATION\";\n    Tag[\"Offers\"] = \"OFFERS\";\n    Tag[\"Requires\"] = \"REQUIRES\";\n    Tag[\"OpenBrace\"] = \"{\";\n    Tag[\"CloseBrace\"] = \"}\";\n    Tag[\"OpenSquareBracket\"] = \"[\";\n    Tag[\"CloseSquareBracket\"] = \"]\";\n    Tag[\"OpenParentheses\"] = \"(\";\n    Tag[\"CloseParentheses\"] = \")\";\n    Tag[\"Semicolon\"] = \";\";\n    Tag[\"Colon\"] = \":\";\n    Tag[\"Comma\"] = \",\";\n    Tag[\"Asterisk\"] = \"*\";\n    Tag[\"Pipe\"] = \"|\";\n    Tag[\"For\"] = \"FOR\";\n    Tag[\"To\"] = \"TO\";\n    Tag[\"By\"] = \"BY\";\n    Tag[\"Do\"] = \"DO\";\n    Tag[\"Foreach\"] = \"FOREACH\";\n    Tag[\"Of\"] = \"OF\";\n    Tag[\"While\"] = \"WHILE\";\n    Tag[\"Repeat\"] = \"REPEAT\";\n    Tag[\"Until\"] = \"UNTIL\";\n    Tag[\"If\"] = \"IF\";\n    Tag[\"Then\"] = \"THEN\";\n    Tag[\"Elsif\"] = \"ELSIF\";\n    Tag[\"Else\"] = \"ELSE\";\n    Tag[\"Return\"] = \"RETURN\";\n    Tag[\"NumberSign\"] = \"#\";\n    Tag[\"Equal\"] = \"=\";\n    Tag[\"Less\"] = \"<\";\n    Tag[\"LessEqual\"] = \"<=\";\n    Tag[\"Greater\"] = \">\";\n    Tag[\"GreaterEqual\"] = \">=\";\n    Tag[\"ColonEqual\"] = \":=\";\n    Tag[\"Ellipsis\"] = \"..\";\n    Tag[\"Plus\"] = \"+\";\n    Tag[\"Minus\"] = \"-\";\n    Tag[\"Tilde\"] = \"~\";\n    Tag[\"Slash\"] = \"/\";\n    Tag[\"Div\"] = \"DIV\";\n    Tag[\"Mod\"] = \"MOD\";\n    Tag[\"And\"] = \"AND\";\n    Tag[\"Or\"] = \"OR\";\n    Tag[\"ExclamationMark\"] = \"!\";\n    Tag[\"QuestionMark\"] = \"?\";\n})(Tag || (Tag = {}));\nexport function tagFromString(identifier) {\n    switch (identifier) {\n        case Tag.Begin:\n            return Tag.Begin;\n        case Tag.Activity:\n            return Tag.Activity;\n        case Tag.Finally:\n            return Tag.Finally;\n        case Tag.End:\n            return Tag.End;\n        case Tag.Constant:\n            return Tag.Constant;\n        case Tag.Variable:\n            return Tag.Variable;\n        case Tag.In:\n            return Tag.In;\n        case Tag.Out:\n            return Tag.Out;\n        case Tag.Is:\n            return Tag.Is;\n        case Tag.Type:\n            return Tag.Type;\n        case Tag.Any:\n            return Tag.Any;\n        case Tag.Finish:\n            return Tag.Finish;\n        case Tag.Component:\n            return Tag.Component;\n        case Tag.Interface:\n            return Tag.Interface;\n        case Tag.Procedure:\n            return Tag.Procedure;\n        case Tag.Implementation:\n            return Tag.Implementation;\n        case Tag.Offers:\n            return Tag.Offers;\n        case Tag.Requires:\n            return Tag.Requires;\n        case Tag.OpenBrace:\n            return Tag.OpenBrace;\n        case Tag.CloseBrace:\n            return Tag.CloseBrace;\n        case Tag.OpenSquareBracket:\n            return Tag.OpenSquareBracket;\n        case Tag.CloseSquareBracket:\n            return Tag.CloseSquareBracket;\n        case Tag.OpenParentheses:\n            return Tag.OpenParentheses;\n        case Tag.CloseParentheses:\n            return Tag.CloseParentheses;\n        case Tag.Semicolon:\n            return Tag.Semicolon;\n        case Tag.Colon:\n            return Tag.Colon;\n        case Tag.Comma:\n            return Tag.Comma;\n        case Tag.Asterisk:\n            return Tag.Asterisk;\n        case Tag.Pipe:\n            return Tag.Pipe;\n        case Tag.For:\n            return Tag.For;\n        case Tag.To:\n            return Tag.To;\n        case Tag.By:\n            return Tag.By;\n        case Tag.Do:\n            return Tag.Do;\n        case Tag.Foreach:\n            return Tag.Foreach;\n        case Tag.Of:\n            return Tag.Of;\n        case Tag.While:\n            return Tag.While;\n        case Tag.Repeat:\n            return Tag.Repeat;\n        case Tag.Until:\n            return Tag.Until;\n        case Tag.If:\n            return Tag.If;\n        case Tag.Then:\n            return Tag.Then;\n        case Tag.Elsif:\n            return Tag.Elsif;\n        case Tag.Else:\n            return Tag.Else;\n        case Tag.Return:\n            return Tag.Return;\n        case Tag.NumberSign:\n            return Tag.NumberSign;\n        case Tag.Equal:\n            return Tag.Equal;\n        case Tag.Less:\n            return Tag.Less;\n        case Tag.LessEqual:\n            return Tag.LessEqual;\n        case Tag.Greater:\n            return Tag.Greater;\n        case Tag.GreaterEqual:\n            return Tag.GreaterEqual;\n        case Tag.ColonEqual:\n            return Tag.ColonEqual;\n        case Tag.Ellipsis:\n            return Tag.Ellipsis;\n        case Tag.Plus:\n            return Tag.Plus;\n        case Tag.Minus:\n            return Tag.Minus;\n        case Tag.Tilde:\n            return Tag.Tilde;\n        case Tag.Slash:\n            return Tag.Slash;\n        case Tag.Div:\n            return Tag.Div;\n        case Tag.Mod:\n            return Tag.Mod;\n        case Tag.And:\n            return Tag.And;\n        case Tag.Or:\n            return Tag.Or;\n        case Tag.ExclamationMark:\n            return Tag.ExclamationMark;\n        case Tag.QuestionMark:\n            return Tag.QuestionMark;\n        default:\n            return undefined;\n    }\n}\nexport class Token {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\nexport class UnknownCharacterToken extends Token {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n}\nvar ErrorTokenTag;\n(function (ErrorTokenTag) {\n    ErrorTokenTag[ErrorTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(ErrorTokenTag || (ErrorTokenTag = {}));\nexport class ErrorToken extends Token {\n    constructor(location) {\n        super(location);\n        this._errorTag = ErrorTokenTag.Tag;\n    }\n}\nexport class FixToken extends Token {\n    constructor(location, tag) {\n        super(location);\n        this.tag = tag;\n    }\n    getTag() {\n        return this.tag;\n    }\n}\nexport class IdentifierToken extends Token {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n}\nexport class NumberToken extends Token {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getNumber() {\n        return this.value;\n    }\n}\nvar HexNumberTokenTag;\n(function (HexNumberTokenTag) {\n    HexNumberTokenTag[HexNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(HexNumberTokenTag || (HexNumberTokenTag = {}));\nexport class HexNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = HexNumberTokenTag.Tag;\n    }\n}\nvar IntegerNumberTokenTag;\n(function (IntegerNumberTokenTag) {\n    IntegerNumberTokenTag[IntegerNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTokenTag || (IntegerNumberTokenTag = {}));\nexport class IntegerNumberToken extends NumberToken {\n    constructor() {\n        super(...arguments);\n        this._tag = IntegerNumberTokenTag.Tag;\n    }\n}\nvar FloatNumberTokenTag;\n(function (FloatNumberTokenTag) {\n    FloatNumberTokenTag[FloatNumberTokenTag[\"Tag\"] = 0] = \"Tag\";\n})(FloatNumberTokenTag || (FloatNumberTokenTag = {}));\nexport class FloatNumberToken extends NumberToken {\n    constructor(location, mantissa, exponent) {\n        super(location, mantissa * 10 ** exponent);\n        this.mantissa = mantissa;\n        this.exponent = exponent;\n        this._tag = FloatNumberTokenTag.Tag;\n    }\n    getMantissa() {\n        return this.mantissa;\n    }\n    getExponent() {\n        return this.exponent;\n    }\n}\nexport class TextToken extends Token {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n}\n//# sourceMappingURL=tokens.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","import { DiagnosticSeverity, } from 'vscode-languageserver-types';\nexport class CompilerDiagnostic {\n    constructor(range, severity, message, code, source, tags, relatedInformation) {\n        this.range = range;\n        this.severity = severity;\n        this.message = message;\n        this.code = code;\n        this.source = source;\n        this.tags = tags;\n        this.relatedInformation = relatedInformation;\n    }\n}\nclass DiagnosisState {\n    constructor() {\n        this.diagnostics = new Array();\n        this.warning = false;\n        this.error = false;\n    }\n    copy() {\n        const state = new DiagnosisState();\n        state.diagnostics = new Array(...this.diagnostics);\n        state.warning = this.warning;\n        state.error = this.error;\n        return state;\n    }\n}\nexport class CompilerDiagnosis {\n    constructor() {\n        this.state = new DiagnosisState();\n        this.stateStack = new Array();\n    }\n    log(diagnostic) {\n        this.state.diagnostics.push(diagnostic);\n        if (diagnostic.severity === DiagnosticSeverity.Warning) {\n            this.state.warning = true;\n        }\n        if (diagnostic.severity === DiagnosticSeverity.Error) {\n            this.state.error = true;\n        }\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    restoreState() {\n        const oldState = this.stateStack.pop();\n        if (oldState === undefined) {\n            // TODO maybe do something different here...\n            console.warn('Failed to restore diagnosis state, no state saved.');\n            return;\n        }\n        this.state = oldState;\n    }\n    hasErrors() {\n        return this.state.error;\n    }\n    hasWarnings() {\n        return this.state.warning;\n    }\n    getDiagnostics() {\n        return this.state.diagnostics;\n    }\n    print(out) {\n        this.state.diagnostics.forEach((value) => {\n            out(`[${value.range.start.line}:${value.range.start.character}]: ${this.toString(value.severity)}: ${value.message}.`);\n        });\n    }\n    toString(severity) {\n        switch (severity) {\n            case DiagnosticSeverity.Error:\n                return 'Error';\n            case DiagnosticSeverity.Warning:\n                return 'Warning';\n            case DiagnosticSeverity.Information:\n                return 'Information';\n            case DiagnosticSeverity.Hint:\n                return 'Hint';\n            default:\n                return 'undefined';\n        }\n    }\n}\n//# sourceMappingURL=diagnosis.js.map","import { SourceLocation, SourceRange, SourcePosition } from '@composita/source-location';\nimport { IdentifierToken, TextToken, FixToken, ErrorToken, HexNumberToken, IntegerNumberToken, FloatNumberToken, Tag, tagFromString, } from '@composita/tokens';\nimport { CompilerDiagnostic } from '@composita/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nvar SpecialCharacter;\n(function (SpecialCharacter) {\n    SpecialCharacter[\"Null\"] = \"\\0\";\n    SpecialCharacter[\"Backspace\"] = \"\\b\";\n    SpecialCharacter[\"Space\"] = \" \";\n    SpecialCharacter[\"HorizontalTab\"] = \"\\t\";\n    SpecialCharacter[\"VerticalTab\"] = \"\\v\";\n    SpecialCharacter[\"FormFeed\"] = \"\\f\";\n    SpecialCharacter[\"CarriageReturn\"] = \"\\r\";\n    SpecialCharacter[\"LineFeed\"] = \"\\n\";\n    SpecialCharacter[\"Backslash\"] = \"\\\\\";\n    SpecialCharacter[\"SingleQuote\"] = \"'\";\n    SpecialCharacter[\"DoubleQuote\"] = \"\\\"\";\n})(SpecialCharacter || (SpecialCharacter = {}));\nfunction toSpecialCharacter(character) {\n    switch (character) {\n        case '0':\n            return SpecialCharacter.Null;\n        case 'b':\n            return SpecialCharacter.Backspace;\n        case 't':\n            return SpecialCharacter.HorizontalTab;\n        case 'v':\n            return SpecialCharacter.VerticalTab;\n        case 'f':\n            return SpecialCharacter.FormFeed;\n        case 'r':\n            return SpecialCharacter.CarriageReturn;\n        case 'n':\n            return SpecialCharacter.LineFeed;\n        case '\\\\':\n            return SpecialCharacter.Backslash;\n        case \"'\":\n            return SpecialCharacter.SingleQuote;\n        case '\"':\n            return SpecialCharacter.DoubleQuote;\n        default:\n            return undefined;\n    }\n}\nclass LexerState {\n    constructor() {\n        this.tokenCache = new Array();\n        this.currentPosition = 0;\n        this.currentLinePosition = 0;\n        this.currentLine = 0;\n    }\n    copy() {\n        const newState = new LexerState();\n        newState.tokenCache = new Array(...this.tokenCache);\n        newState.currentPosition = this.currentPosition;\n        newState.currentLinePosition = this.currentLinePosition;\n        newState.currentLine = this.currentLine;\n        return newState;\n    }\n}\nexport class Lexer {\n    constructor(diagnosis, uri, code) {\n        this.diagnosis = diagnosis;\n        this.uri = uri;\n        this.code = Array.from(code);\n        this.state = new LexerState();\n        this.stateStack = new Array();\n    }\n    advance(n = 1) {\n        while (n > 0 && !this.isEOT()) {\n            if (this.isLineFeed()) {\n                this.state.currentLine = this.state.currentLine + 1;\n                this.state.currentLinePosition = 0;\n            }\n            else {\n                this.state.currentLinePosition = this.state.currentLinePosition + 1;\n            }\n            this.state.currentPosition = this.state.currentPosition + 1;\n            n = n - 1;\n        }\n    }\n    getCurrentCharacter() {\n        return !this.isEOT() ? this.code[this.state.currentPosition] : undefined;\n    }\n    createSourceLocation(range) {\n        return new SourceLocation(this.uri, range);\n    }\n    createSourcePosition() {\n        return new SourcePosition(this.state.currentLine, this.state.currentLinePosition);\n    }\n    createEOTToken() {\n        const endPosition = this.createSourcePosition();\n        return new FixToken(this.createSourceLocation(new SourceRange(endPosition, endPosition)), Tag.EOT);\n    }\n    isSpace() {\n        return this.getCurrentCharacter() === SpecialCharacter.Space;\n    }\n    isTab() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter === SpecialCharacter.HorizontalTab || currentCharacter === SpecialCharacter.VerticalTab;\n    }\n    isFormFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.FormFeed;\n    }\n    isLineFeed() {\n        return this.getCurrentCharacter() === SpecialCharacter.LineFeed;\n    }\n    isCarriageReturn() {\n        return this.getCurrentCharacter() === SpecialCharacter.CarriageReturn;\n    }\n    isBackslash() {\n        return this.getCurrentCharacter() === SpecialCharacter.Backslash;\n    }\n    isLetter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'z') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'Z')));\n    }\n    isDot() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter === '.';\n    }\n    isEllipsis() {\n        return (this.isDot() &&\n            this.state.currentPosition + 1 < this.code.length &&\n            this.code[this.state.currentPosition + 1] === '.');\n    }\n    isNumber() {\n        const currentCharacter = this.getCurrentCharacter();\n        return currentCharacter !== undefined && currentCharacter >= '0' && currentCharacter <= '9';\n    }\n    isHexCharacter() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            ((currentCharacter >= 'a' && currentCharacter <= 'f') ||\n                (currentCharacter >= 'A' && currentCharacter <= 'F')));\n    }\n    isDoubleQuote() {\n        return this.getCurrentCharacter() === SpecialCharacter.DoubleQuote;\n    }\n    isWhitespace() {\n        return this.isSpace() || this.isTab() || this.isLineFeed() || this.isCarriageReturn() || this.isFormFeed();\n    }\n    isEOT() {\n        return this.state.currentPosition >= this.code.length;\n    }\n    isCommentStart() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.OpenParentheses &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.Asterisk);\n    }\n    isCommentEnd() {\n        const currentCharacter = this.getCurrentCharacter();\n        return (currentCharacter !== undefined &&\n            tagFromString(currentCharacter) === Tag.Asterisk &&\n            this.state.currentPosition + 1 < this.code.length &&\n            tagFromString(this.code[this.state.currentPosition + 1]) === Tag.CloseParentheses);\n    }\n    skipWhitespace() {\n        let hasSkipped = false;\n        while (this.isWhitespace()) {\n            hasSkipped = true;\n            this.advance();\n        }\n        return hasSkipped;\n    }\n    skipComment() {\n        let hasSkipped = false;\n        if (this.isCommentStart()) {\n            hasSkipped = true;\n            this.advance(2);\n            while (!this.isEOT() && !this.isCommentEnd()) {\n                this.advance();\n            }\n            if (!this.isEOT()) {\n                this.advance(2);\n            }\n        }\n        return hasSkipped;\n    }\n    skipUntilWhitespace() {\n        while (!this.isWhitespace() && !this.isEOT()) {\n            this.advance();\n        }\n    }\n    readCharacter() {\n        const character = this.getCurrentCharacter();\n        if (this.isBackslash()) {\n            this.advance();\n            const specialCharacter = toSpecialCharacter(this.getCurrentCharacter());\n            if (specialCharacter !== undefined) {\n                this.advance();\n                return specialCharacter;\n            }\n        }\n        this.advance();\n        return character;\n    }\n    readText() {\n        let text = '';\n        const start = this.createSourcePosition();\n        this.advance();\n        while (!this.isDoubleQuote()) {\n            const character = this.readCharacter();\n            if (character === undefined) {\n                return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n            }\n            text = text + character;\n        }\n        if (this.isDoubleQuote()) {\n            this.advance();\n            const end = this.createSourcePosition();\n            return new TextToken(this.createSourceLocation(new SourceRange(start, end)), text);\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readIdentifier() {\n        let identifier = '';\n        const start = this.createSourcePosition();\n        while (!this.isEOT() && (this.isLetter() || this.isNumber())) {\n            identifier = identifier + this.getCurrentCharacter();\n            this.advance();\n        }\n        const location = this.createSourceLocation(new SourceRange(start, this.createSourcePosition()));\n        const tag = tagFromString(identifier);\n        return tag !== undefined ? new FixToken(location, tag) : new IdentifierToken(location, identifier);\n    }\n    readFixToken() {\n        const start = this.createSourcePosition();\n        const currentCharacter = this.getCurrentCharacter();\n        if (currentCharacter !== undefined) {\n            const tag = tagFromString(currentCharacter);\n            this.advance();\n            if (tag !== undefined) {\n                const nextCharacter = this.getCurrentCharacter();\n                if (nextCharacter !== undefined) {\n                    const nextTag = tagFromString(nextCharacter);\n                    if (nextTag === Tag.Equal) {\n                        switch (tag) {\n                            case Tag.Less:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.LessEqual);\n                            case Tag.Greater:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.GreaterEqual);\n                            case Tag.Colon:\n                                this.advance();\n                                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.ColonEqual);\n                        }\n                    }\n                }\n                return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), tag);\n            }\n        }\n        return new ErrorToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())));\n    }\n    readScaleFactor() {\n        let scaleFactor = 0;\n        if (!this.isNumber()) {\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(this.createSourcePosition(), this.createSourcePosition()), DiagnosticSeverity.Error, 'Scale factor must be at least one digit long.'));\n        }\n        while (this.isNumber()) {\n            const current = this.getCurrentCharacter();\n            if (current !== undefined) {\n                scaleFactor = scaleFactor * 10 + Number.parseInt(current);\n                this.advance();\n            }\n        }\n        return scaleFactor;\n    }\n    readNumber() {\n        const start = this.createSourcePosition();\n        let mantissa = undefined;\n        let isHex = false;\n        let isFloat = false;\n        let exponent = 0;\n        while (this.isNumber() || this.isHexCharacter()) {\n            if (this.isHexCharacter()) {\n                isHex = true;\n            }\n            mantissa = mantissa === undefined ? this.getCurrentCharacter() : mantissa + this.getCurrentCharacter();\n            this.advance();\n            if (isFloat && isHex) {\n                this.skipUntilWhitespace();\n                this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Floating point hex numbers are not supported.'));\n                break;\n            }\n            if (isFloat) {\n                exponent = exponent - 1;\n            }\n            if (this.isEllipsis()) {\n                break;\n            }\n            if (this.isDot()) {\n                this.advance();\n                isFloat = true;\n            }\n            if (isFloat && this.getCurrentCharacter() === 'E') {\n                this.advance();\n                const current = this.getCurrentCharacter();\n                let prefix = 1;\n                if (current === '-' || current === '+') {\n                    prefix = current === '-' ? -1 : 1;\n                    this.advance();\n                }\n                exponent = prefix * this.readScaleFactor();\n                break;\n            }\n        }\n        if (mantissa === undefined) {\n            return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), 0);\n        }\n        const hexModifier = this.getCurrentCharacter() === 'H' || this.getCurrentCharacter() === 'X';\n        if (hexModifier) {\n            this.advance();\n        }\n        if (isHex && !hexModifier) {\n            this.skipUntilWhitespace();\n            this.diagnosis.log(new CompilerDiagnostic(new SourceRange(start, this.createSourcePosition()), DiagnosticSeverity.Error, 'Missing \"H\" or \"X\" after hex number'));\n        }\n        if (isHex || hexModifier) {\n            return new HexNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt('0x' + mantissa));\n        }\n        if (isFloat) {\n            return new FloatNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa), exponent);\n        }\n        return new IntegerNumberToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Number.parseInt(mantissa));\n    }\n    readEllipsis() {\n        const start = this.createSourcePosition();\n        this.advance();\n        this.advance();\n        return new FixToken(this.createSourceLocation(new SourceRange(start, this.createSourcePosition())), Tag.Ellipsis);\n    }\n    read() {\n        while (!this.isEOT() && (this.skipWhitespace() || this.skipComment())) {\n            /* do nothing, just skip */\n        }\n        if (this.isEOT()) {\n            return this.createEOTToken();\n        }\n        if (this.isDoubleQuote()) {\n            return this.readText();\n        }\n        if (this.isLetter()) {\n            return this.readIdentifier();\n        }\n        if (this.isNumber()) {\n            return this.readNumber();\n        }\n        if (this.isEllipsis()) {\n            return this.readEllipsis();\n        }\n        return this.readFixToken();\n    }\n    getUri() {\n        return this.uri;\n    }\n    saveState() {\n        this.stateStack.push(this.state.copy());\n    }\n    popSaveState() {\n        this.stateStack.pop();\n    }\n    restoreState() {\n        const lastState = this.stateStack.pop();\n        if (lastState === undefined) {\n            console.warn('No lexer state to restore.');\n            return;\n        }\n        this.state = lastState;\n    }\n    peek(n) {\n        if (n < 1) {\n            // TODO: replace with something cleverer\n            throw RangeError('peek range must be greater than 0.');\n        }\n        let cacheSize = this.state.tokenCache.length;\n        if (n <= cacheSize) {\n            return this.state.tokenCache[n - 1];\n        }\n        do {\n            if (cacheSize > 0) {\n                const lastToken = this.state.tokenCache[cacheSize - 1];\n                if (lastToken instanceof FixToken && lastToken.getTag() === Tag.EOT) {\n                    return lastToken;\n                }\n            }\n            cacheSize = this.state.tokenCache.push(this.read());\n        } while (n > cacheSize);\n        return this.state.tokenCache[n - 1];\n    }\n    next() {\n        const nextToken = this.peek(1);\n        this.state.tokenCache.shift();\n        return nextToken;\n    }\n}\n//# sourceMappingURL=lexer.js.map","import { Node } from './node';\nvar DeclarationNodeTag;\n(function (DeclarationNodeTag) {\n    DeclarationNodeTag[DeclarationNodeTag[\"Tag\"] = 0] = \"Tag\";\n})(DeclarationNodeTag || (DeclarationNodeTag = {}));\nexport class DeclarationNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = DeclarationNodeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitDeclaration(this);\n    }\n}\n//# sourceMappingURL=declaration.js.map","export class Node {\n    constructor(location) {\n        this.location = location;\n    }\n    getLocation() {\n        return this.location;\n    }\n}\n//# sourceMappingURL=node.js.map","import { Node } from './node';\nexport class AttributeNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitAttribute(this);\n    }\n}\n//# sourceMappingURL=attribute.js.map","import { Node } from './node';\nexport class CardinalityNode extends Node {\n    constructor(location, min, max) {\n        super(location);\n        this.min = min;\n        this.max = max;\n    }\n    getMin() {\n        return this.min;\n    }\n    getMax() {\n        return this.max;\n    }\n    accept(visitor) {\n        visitor.visitCardinality(this);\n    }\n}\n//# sourceMappingURL=cardinality.js.map","import { Node } from './node';\nvar ExpressionTag;\n(function (ExpressionTag) {\n    ExpressionTag[ExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ExpressionTag || (ExpressionTag = {}));\nexport class ExpressionNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._expressionTag = ExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitExpression(this);\n    }\n}\nvar AttributedExpressionTag;\n(function (AttributedExpressionTag) {\n    AttributedExpressionTag[AttributedExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(AttributedExpressionTag || (AttributedExpressionTag = {}));\nexport class AttributedExpressionNode extends ExpressionNode {\n    constructor(location, attributes) {\n        super(location);\n        this.attributes = attributes;\n        this._attributedExpressionTag = AttributedExpressionTag.Tag;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitAttributedExpression(this);\n    }\n}\nexport class UnaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, expression) {\n        super(location, attributes);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitUnaryExpression(this);\n    }\n}\nexport var LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[LogicalOperator[\"Equal\"] = 0] = \"Equal\";\n    LogicalOperator[LogicalOperator[\"NotEqual\"] = 1] = \"NotEqual\";\n    LogicalOperator[LogicalOperator[\"Less\"] = 2] = \"Less\";\n    LogicalOperator[LogicalOperator[\"LessEqual\"] = 3] = \"LessEqual\";\n    LogicalOperator[LogicalOperator[\"More\"] = 4] = \"More\";\n    LogicalOperator[LogicalOperator[\"MoreEqual\"] = 5] = \"MoreEqual\";\n})(LogicalOperator || (LogicalOperator = {}));\nexport class BinaryExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, left, op, right) {\n        super(location, attributes);\n        this.left = left;\n        this.op = op;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitBinaryExpression(this);\n    }\n}\nexport var OffersRequiresOperator;\n(function (OffersRequiresOperator) {\n    OffersRequiresOperator[OffersRequiresOperator[\"Offers\"] = 0] = \"Offers\";\n    OffersRequiresOperator[OffersRequiresOperator[\"Requires\"] = 1] = \"Requires\";\n})(OffersRequiresOperator || (OffersRequiresOperator = {}));\nexport class OffersRequiresExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, op, interfaces) {\n        super(location, attributes);\n        this.op = op;\n        this.interfaces = interfaces;\n    }\n    getOp() {\n        return this.op;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitOffersRequiresExpression(this);\n    }\n}\nexport class TypeCheckExpressionNode extends AttributedExpressionNode {\n    constructor(location, attributes, designator, type) {\n        super(location, attributes);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitTypeCheck(this);\n    }\n}\n//# sourceMappingURL=expression.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ComponentNode extends DeclarationNode {\n    constructor(location, name, offers, requires, body) {\n        super(location);\n        this.name = name;\n        this.offers = offers;\n        this.requires = requires;\n        this.body = body;\n    }\n    getName() {\n        return this.name;\n    }\n    getOffers() {\n        return this.offers;\n    }\n    getRequires() {\n        return this.requires;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitComponent(this);\n    }\n}\nexport class ComponentBodyNode extends Node {\n    constructor(location, declarations, implementations, beginBlock, activityBlock, finallyBlock) {\n        super(location);\n        this.declarations = declarations;\n        this.implementations = implementations;\n        this.beginBlock = beginBlock;\n        this.activityBlock = activityBlock;\n        this.finallyBlock = finallyBlock;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getImplementations() {\n        return this.implementations;\n    }\n    getBeginBlock() {\n        return this.beginBlock;\n    }\n    getActivityBlock() {\n        return this.activityBlock;\n    }\n    getFinallyBlock() {\n        return this.finallyBlock;\n    }\n    accept(visitor) {\n        visitor.visitComponentBody(this);\n    }\n}\n//# sourceMappingURL=component.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class ConstantNode extends Node {\n    constructor(location, name, expression) {\n        super(location);\n        this.name = name;\n        this.expression = expression;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstant(this);\n    }\n}\nexport class ConstantExpressionNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitConstantExpression(this);\n    }\n}\nexport class ConstantListNode extends DeclarationNode {\n    constructor(location, constants) {\n        super(location);\n        this.constants = constants;\n    }\n    getConstants() {\n        return this.constants;\n    }\n    accept(visitor) {\n        visitor.visitConstantList(this);\n    }\n}\n//# sourceMappingURL=constant.js.map","import { Node } from './node';\nimport { ExpressionNode } from './expression';\nvar SimpleExpressionTag;\n(function (SimpleExpressionTag) {\n    SimpleExpressionTag[SimpleExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(SimpleExpressionTag || (SimpleExpressionTag = {}));\nexport class SimpleExpressionNode extends ExpressionNode {\n    constructor(location) {\n        super(location);\n        this._simpleExpressionTag = SimpleExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitSimpleExpression(this);\n    }\n}\nexport var PrefixOperator;\n(function (PrefixOperator) {\n    PrefixOperator[PrefixOperator[\"Plus\"] = 0] = \"Plus\";\n    PrefixOperator[PrefixOperator[\"Minus\"] = 1] = \"Minus\";\n})(PrefixOperator || (PrefixOperator = {}));\nexport class UnaryTermNode extends SimpleExpressionNode {\n    constructor(location, op, term) {\n        super(location);\n        this.op = op;\n        this.term = term;\n    }\n    getOp() {\n        return this.op;\n    }\n    getTerm() {\n        return this.term;\n    }\n    accept(visitor) {\n        visitor.visitUnaryTermNode(this);\n    }\n}\nexport var InfixTermOperator;\n(function (InfixTermOperator) {\n    InfixTermOperator[InfixTermOperator[\"Plus\"] = 0] = \"Plus\";\n    InfixTermOperator[InfixTermOperator[\"Minus\"] = 1] = \"Minus\";\n    InfixTermOperator[InfixTermOperator[\"Or\"] = 2] = \"Or\";\n})(InfixTermOperator || (InfixTermOperator = {}));\nexport class TermChainNode extends SimpleExpressionNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitTermChain(this);\n    }\n}\nexport class RightTermNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightTerm(this);\n    }\n}\n//# sourceMappingURL=simple-expression.js.map","import { Node } from './node';\nimport { SimpleExpressionNode } from './simple-expression';\nvar TermTag;\n(function (TermTag) {\n    TermTag[TermTag[\"Tag\"] = 0] = \"Tag\";\n})(TermTag || (TermTag = {}));\nexport class TermNode extends SimpleExpressionNode {\n    constructor(location) {\n        super(location);\n        this._termTag = TermTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitTerm(this);\n    }\n}\nexport class FactorChainNode extends TermNode {\n    constructor(location, left, right) {\n        super(location);\n        this.left = left;\n        this.right = right;\n    }\n    getLeft() {\n        return this.left;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitFactorChain(this);\n    }\n}\nexport var InfixFactorOperator;\n(function (InfixFactorOperator) {\n    InfixFactorOperator[InfixFactorOperator[\"Times\"] = 0] = \"Times\";\n    InfixFactorOperator[InfixFactorOperator[\"Div\"] = 1] = \"Div\";\n    InfixFactorOperator[InfixFactorOperator[\"DivText\"] = 2] = \"DivText\";\n    InfixFactorOperator[InfixFactorOperator[\"ModText\"] = 3] = \"ModText\";\n    InfixFactorOperator[InfixFactorOperator[\"AndText\"] = 4] = \"AndText\";\n})(InfixFactorOperator || (InfixFactorOperator = {}));\nexport class RightFactorNode extends Node {\n    constructor(location, op, right) {\n        super(location);\n        this.op = op;\n        this.right = right;\n    }\n    getOp() {\n        return this.op;\n    }\n    getRight() {\n        return this.right;\n    }\n    accept(visitor) {\n        visitor.visitRightFactor(this);\n    }\n}\n//# sourceMappingURL=term.js.map","import { TermNode } from './term';\nvar FactorTag;\n(function (FactorTag) {\n    FactorTag[FactorTag[\"Tag\"] = 0] = \"Tag\";\n})(FactorTag || (FactorTag = {}));\nexport class FactorNode extends TermNode {\n    constructor(location) {\n        super(location);\n        this._factorTag = FactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitFactor(this);\n    }\n}\nexport var FactorPrefix;\n(function (FactorPrefix) {\n    FactorPrefix[FactorPrefix[\"Not\"] = 0] = \"Not\";\n})(FactorPrefix || (FactorPrefix = {}));\nexport class UnaryFactorNode extends FactorNode {\n    constructor(location, prefix, factor) {\n        super(location);\n        this.prefix = prefix;\n        this.factor = factor;\n    }\n    getPrefix() {\n        return this.prefix;\n    }\n    getFactor() {\n        return this.factor;\n    }\n    accept(visitor) {\n        visitor.visitUnaryFactor(this);\n    }\n}\nexport class ExpressionFactorNode extends FactorNode {\n    constructor(location, expresion) {\n        super(location);\n        this.expresion = expresion;\n    }\n    getExpression() {\n        return this.expresion;\n    }\n    accept(visitor) {\n        visitor.visitExpressionFactor(this);\n    }\n}\n//# sourceMappingURL=factor.js.map","import { FactorNode } from './factor';\nexport class OperandNode extends FactorNode {\n    constructor(location) {\n        super(location);\n    }\n    accept(visitor) {\n        visitor.visitOperand(this);\n    }\n}\nexport class NumberNode extends OperandNode {\n    constructor(location, value) {\n        super(location);\n        this.value = value;\n    }\n    getValue() {\n        return this.value;\n    }\n    accept(visitor) {\n        visitor.visitNumber(this);\n    }\n}\nvar IntegerNumberTag;\n(function (IntegerNumberTag) {\n    IntegerNumberTag[IntegerNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(IntegerNumberTag || (IntegerNumberTag = {}));\nexport class IntegerNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._integerNumberTag = IntegerNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitIntegerNumber(this);\n    }\n}\nvar RealNumberTag;\n(function (RealNumberTag) {\n    RealNumberTag[RealNumberTag[\"Tag\"] = 0] = \"Tag\";\n})(RealNumberTag || (RealNumberTag = {}));\nexport class RealNumberNode extends NumberNode {\n    constructor() {\n        super(...arguments);\n        this._realNumberTag = RealNumberTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRealNumber(this);\n    }\n}\nexport class ConstantCharacterNode extends OperandNode {\n    constructor(location, character) {\n        super(location);\n        this.character = character;\n    }\n    getCharacter() {\n        return this.character;\n    }\n    accept(visitor) {\n        visitor.visitConstantCharacter(this);\n    }\n}\nexport class TextNode extends OperandNode {\n    constructor(location, text) {\n        super(location);\n        this.text = text;\n    }\n    getText() {\n        return this.text;\n    }\n    accept(visitor) {\n        visitor.visitText(this);\n    }\n}\nexport var FixedMessagePattern;\n(function (FixedMessagePattern) {\n    FixedMessagePattern[FixedMessagePattern[\"Any\"] = 0] = \"Any\";\n    FixedMessagePattern[FixedMessagePattern[\"Finish\"] = 1] = \"Finish\";\n})(FixedMessagePattern || (FixedMessagePattern = {}));\nexport class InputReceiveTestNode extends OperandNode {\n    constructor(location, designator, pattern) {\n        super(location);\n        this.designator = designator;\n        this.pattern = pattern;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getPattern() {\n        return this.pattern;\n    }\n}\nvar ReceiveTestTag;\n(function (ReceiveTestTag) {\n    ReceiveTestTag[ReceiveTestTag[\"Tag\"] = 0] = \"Tag\";\n})(ReceiveTestTag || (ReceiveTestTag = {}));\nexport class ReceiveTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = ReceiveTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitReceiveTest(this);\n    }\n}\nvar InputTestTag;\n(function (InputTestTag) {\n    InputTestTag[InputTestTag[\"Tag\"] = 0] = \"Tag\";\n})(InputTestTag || (InputTestTag = {}));\nexport class InputTestNode extends InputReceiveTestNode {\n    constructor() {\n        super(...arguments);\n        this._tag = InputTestTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitInputTest(this);\n    }\n}\nexport class ExistsTestNode extends OperandNode {\n    constructor(location, designator) {\n        super(location);\n        this.designator = designator;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    accept(visitor) {\n        visitor.visitExistsTest(this);\n    }\n}\nexport class FunctionCallNode extends OperandNode {\n    constructor(location, name, args) {\n        super(location);\n        this.name = name;\n        this.args = args;\n    }\n    getName() {\n        return this.name;\n    }\n    getArguments() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitFunctionCall(this);\n    }\n}\n//# sourceMappingURL=operand.js.map","import { OperandNode } from './operand';\nvar DesignatorTag;\n(function (DesignatorTag) {\n    DesignatorTag[DesignatorTag[\"Tag\"] = 0] = \"Tag\";\n})(DesignatorTag || (DesignatorTag = {}));\nexport class DesignatorNode extends OperandNode {\n    constructor() {\n        super(...arguments);\n        this._tag = DesignatorTag.Tag;\n    }\n}\nexport class BasicDesignatorNode extends DesignatorNode {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitBasicDesignator(this);\n    }\n}\nexport class BasicExpressionDesignatorNode extends DesignatorNode {\n    constructor(location, name, expressions) {\n        super(location);\n        this.name = name;\n        this.expressions = expressions;\n    }\n    getName() {\n        return this.name;\n    }\n    getExpressions() {\n        return this.expressions;\n    }\n    accept(visitor) {\n        visitor.visitBasicExpressionDesignator(this);\n    }\n}\nexport class BaseTargetDesignatorNode extends DesignatorNode {\n    constructor(location, base, target) {\n        super(location);\n        this.base = base;\n        this.target = target;\n    }\n    getBase() {\n        return this.base;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitBaseTargetDesignator(this);\n    }\n}\nexport class DesignatorTypeNode extends DesignatorNode {\n    constructor(location, designator, type) {\n        super(location);\n        this.designator = designator;\n        this.type = type;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitDesignatorType(this);\n    }\n}\n//# sourceMappingURL=designator.js.map","import { Node } from './node';\nexport class InterfaceDeclarationNode extends Node {\n    constructor(location, name, cardinality) {\n        super(location);\n        this.name = name;\n        this.cardinality = cardinality;\n    }\n    getName() {\n        return this.name;\n    }\n    getCardinality() {\n        return this.cardinality;\n    }\n    accept(visitor) {\n        visitor.visitInterfaceDeclaration(this);\n    }\n}\nvar OfferedInterfaceTag;\n(function (OfferedInterfaceTag) {\n    OfferedInterfaceTag[OfferedInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(OfferedInterfaceTag || (OfferedInterfaceTag = {}));\nexport class OfferedInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OfferedInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOfferedInterface(this);\n    }\n}\nvar RequiredInterfaceTag;\n(function (RequiredInterfaceTag) {\n    RequiredInterfaceTag[RequiredInterfaceTag[\"Tag\"] = 0] = \"Tag\";\n})(RequiredInterfaceTag || (RequiredInterfaceTag = {}));\nexport class RequiredInterfaceNode extends InterfaceDeclarationNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RequiredInterfaceTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRequiredInterfface(this);\n    }\n}\n//# sourceMappingURL=interface-declaration.js.map","import { Node } from './node';\nexport class ImplementationNode extends Node {\n    constructor(location, name, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitImplementation(this);\n    }\n}\n//# sourceMappingURL=implementation.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class InterfaceNode extends DeclarationNode {\n    constructor(location, name, protocol) {\n        super(location);\n        this.name = name;\n        this.protocol = protocol;\n    }\n    getName() {\n        return this.name;\n    }\n    getProtocol() {\n        return this.protocol;\n    }\n    accept(visitor) {\n        visitor.visitInterface(this);\n    }\n}\nexport class ProtocolNode extends Node {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocol(this);\n    }\n}\nexport class ProtocolExpressionNode extends Node {\n    constructor(location, terms) {\n        super(location);\n        this.terms = terms;\n    }\n    getTerms() {\n        return this.terms;\n    }\n    accept(visitor) {\n        visitor.visitProtocolExpression(this);\n    }\n}\nexport class ProtocolTermNode extends Node {\n    constructor(location, factors) {\n        super(location);\n        this.factors = factors;\n    }\n    getFactors() {\n        return this.factors;\n    }\n    accept(visitor) {\n        visitor.visitProtocolTerm(this);\n    }\n}\n//# sourceMappingURL=interface.js.map","import { Node } from './node';\nvar ProtocolFactorTag;\n(function (ProtocolFactorTag) {\n    ProtocolFactorTag[ProtocolFactorTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorTag || (ProtocolFactorTag = {}));\nexport class ProtocolFactorNode extends Node {\n    constructor(location) {\n        super(location);\n        this._protocolFactorTag = ProtocolFactorTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactor(this);\n    }\n}\nexport var MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[MessageDirection[\"IN\"] = 0] = \"IN\";\n    MessageDirection[MessageDirection[\"OUT\"] = 1] = \"OUT\";\n})(MessageDirection || (MessageDirection = {}));\nexport class MessageDeclarationNode extends ProtocolFactorNode {\n    constructor(location, direction, name, params) {\n        super(location);\n        this.direction = direction;\n        this.name = name;\n        this.params = params;\n    }\n    getDirection() {\n        return this.direction;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitMessageDeclaration(this);\n    }\n}\nvar ProtocolFactorExpressionTag;\n(function (ProtocolFactorExpressionTag) {\n    ProtocolFactorExpressionTag[ProtocolFactorExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(ProtocolFactorExpressionTag || (ProtocolFactorExpressionTag = {}));\nexport class ProtocolFactorExpressionNode extends ProtocolFactorNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n        this._protocolFactorExpressionTag = ProtocolFactorExpressionTag.Tag;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitProtocolFactorExpression(this);\n    }\n}\nvar OptionalProtocolExpressionTag;\n(function (OptionalProtocolExpressionTag) {\n    OptionalProtocolExpressionTag[OptionalProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(OptionalProtocolExpressionTag || (OptionalProtocolExpressionTag = {}));\nexport class OptionalProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = OptionalProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitOptionalProtocolFactorExpression(this);\n    }\n}\nvar RepeatingProtocolExpressionTag;\n(function (RepeatingProtocolExpressionTag) {\n    RepeatingProtocolExpressionTag[RepeatingProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(RepeatingProtocolExpressionTag || (RepeatingProtocolExpressionTag = {}));\nexport class RepeatingProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = RepeatingProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitRepeatingProtocolFactorExpression(this);\n    }\n}\nvar GroupProtocolExpressionTag;\n(function (GroupProtocolExpressionTag) {\n    GroupProtocolExpressionTag[GroupProtocolExpressionTag[\"Tag\"] = 0] = \"Tag\";\n})(GroupProtocolExpressionTag || (GroupProtocolExpressionTag = {}));\nexport class GroupProtocolExpressionNode extends ProtocolFactorExpressionNode {\n    constructor() {\n        super(...arguments);\n        this._tag = GroupProtocolExpressionTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitGroupProtocolFactorExpression(this);\n    }\n}\n//# sourceMappingURL=protocol-factor.js.map","import { Node } from './node';\nexport class NameNode extends Node {\n    constructor(location, name) {\n        super(location);\n        this.name = name;\n    }\n    getName() {\n        return this.name;\n    }\n    accept(visitor) {\n        visitor.visitName(this);\n    }\n}\nexport class IndexedNameNode extends Node {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitIndexedName(this);\n    }\n}\n//# sourceMappingURL=name.js.map","import { Node } from './node';\nexport class ParameterNode extends Node {\n    constructor(location, names, type) {\n        super(location);\n        this.names = names;\n        this.type = type;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    accept(visitor) {\n        visitor.visitParameter(this);\n    }\n}\n//# sourceMappingURL=parameter.js.map","import { DeclarationNode } from './declaration';\nimport { Node } from './node';\nexport class ProcedureNode extends DeclarationNode {\n    constructor(location, name, params, type, declarations, statements) {\n        super(location);\n        this.name = name;\n        this.params = params;\n        this.type = type;\n        this.declarations = declarations;\n        this.statements = statements;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    getType() {\n        return this.type;\n    }\n    getDeclarations() {\n        return this.declarations;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitProcedure(this);\n    }\n}\nexport class ProcedureParameterNode extends Node {\n    constructor(location, mutable, parameter) {\n        super(location);\n        this.mutable = mutable;\n        this.parameter = parameter;\n    }\n    isMutable() {\n        return this.mutable;\n    }\n    getParameter() {\n        return this.parameter;\n    }\n    accept(visitor) {\n        visitor.visitProcedureParameter(this);\n    }\n}\n//# sourceMappingURL=procedure.js.map","import { Node } from './node';\nexport class ProgramNode extends Node {\n    constructor(location, components, interfaces) {\n        super(location);\n        this.components = components;\n        this.interfaces = interfaces;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    accept(visitor) {\n        visitor.visitProgram(this);\n    }\n}\n//# sourceMappingURL=program.js.map","import { Node } from './node';\nvar StatementTag;\n(function (StatementTag) {\n    StatementTag[StatementTag[\"Tag\"] = 0] = \"Tag\";\n})(StatementTag || (StatementTag = {}));\nexport class StatementNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._statementTag = StatementTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitStatement(this);\n    }\n}\nexport class ProcedureCallNode extends StatementNode {\n    constructor(location, name, params) {\n        super(location);\n        this.name = name;\n        this.params = params;\n    }\n    getName() {\n        return this.name;\n    }\n    getParams() {\n        return this.params;\n    }\n    accept(visitor) {\n        visitor.visitProcedureCall(this);\n    }\n}\nexport class AssignmentNode extends StatementNode {\n    constructor(location, designator, expression) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAssignment(this);\n    }\n}\nexport class NewNode extends StatementNode {\n    constructor(location, designator, args) {\n        super(location);\n        this.designator = designator;\n        this.args = args;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitNew(this);\n    }\n}\nexport class ConnectNode extends StatementNode {\n    constructor(location, what, to) {\n        super(location);\n        this.what = what;\n        this.to = to;\n    }\n    getWhat() {\n        return this.what;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitConnect(this);\n    }\n}\nexport class DisconnectNode extends StatementNode {\n    constructor(location, what) {\n        super(location);\n        this.what = what;\n    }\n    getWhat() {\n        return this.what;\n    }\n    accept(visitor) {\n        visitor.visitDisconnect(this);\n    }\n}\nexport class SendNode extends StatementNode {\n    constructor(location, from, target, args) {\n        super(location);\n        this.from = from;\n        this.target = target;\n        this.args = args;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTarget() {\n        return this.target;\n    }\n    getArgs() {\n        return this.args;\n    }\n    accept(visitor) {\n        visitor.visitSend(this);\n    }\n}\nexport class ReceiveNode extends StatementNode {\n    constructor(location, from, receiver, targets) {\n        super(location);\n        this.from = from;\n        this.receiver = receiver;\n        this.targets = targets;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getReceiver() {\n        return this.receiver;\n    }\n    getTargets() {\n        return this.targets;\n    }\n    accept(visitor) {\n        visitor.visitReceive(this);\n    }\n}\nexport class DeleteNode extends StatementNode {\n    constructor(location, target) {\n        super(location);\n        this.target = target;\n    }\n    getTarget() {\n        return this.target;\n    }\n    accept(visitor) {\n        visitor.visitDelete(this);\n    }\n}\nexport class MoveNode extends StatementNode {\n    constructor(location, from, to) {\n        super(location);\n        this.from = from;\n        this.to = to;\n    }\n    getFrom() {\n        return this.from;\n    }\n    getTo() {\n        return this.to;\n    }\n    accept(visitor) {\n        visitor.visitMove(this);\n    }\n}\nexport class AwaitNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitAwait(this);\n    }\n}\nexport class ReturnNode extends StatementNode {\n    constructor(location, expression) {\n        super(location);\n        this.expression = expression;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitReturn(this);\n    }\n}\nexport class IfNode extends StatementNode {\n    constructor(location, expression, then, elseIfs, elseNode) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n        this.elseIfs = elseIfs;\n        this.elseNode = elseNode;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    getElseIfs() {\n        return this.elseIfs;\n    }\n    getElse() {\n        return this.elseNode;\n    }\n    accept(visitor) {\n        visitor.visitIf(this);\n    }\n}\nexport class ElseIfNode extends StatementNode {\n    constructor(location, expression, then) {\n        super(location);\n        this.expression = expression;\n        this.then = then;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getThen() {\n        return this.then;\n    }\n    accept(visitor) {\n        visitor.visitElseIf(this);\n    }\n}\nexport class WhileNode extends StatementNode {\n    constructor(location, expression, body) {\n        super(location);\n        this.expression = expression;\n        this.body = body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitWhile(this);\n    }\n}\nexport class RepeatNode extends StatementNode {\n    constructor(location, body, expression) {\n        super(location);\n        this.body = body;\n        this.expression = expression;\n    }\n    getBody() {\n        return this.body;\n    }\n    getExpresssion() {\n        return this.expression;\n    }\n    accept(visitor) {\n        visitor.visitRepeat(this);\n    }\n}\nexport class ForNode extends StatementNode {\n    constructor(location, designator, expression, to, by, statements) {\n        super(location);\n        this.designator = designator;\n        this.expression = expression;\n        this.to = to;\n        this.by = by;\n        this.statements = statements;\n    }\n    getDesignator() {\n        return this.designator;\n    }\n    getExpression() {\n        return this.expression;\n    }\n    getTo() {\n        return this.to;\n    }\n    getBy() {\n        return this.by;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitFor(this);\n    }\n}\nexport class ForeachNode extends StatementNode {\n    constructor(location, designators, of, body) {\n        super(location);\n        this.designators = designators;\n        this.of = of;\n        this.body = body;\n    }\n    getDesignators() {\n        return this.designators;\n    }\n    getOf() {\n        return this.of;\n    }\n    getBody() {\n        return this.body;\n    }\n    accept(visitor) {\n        visitor.visitForeach(this);\n    }\n}\nexport class StatementBlockNode extends StatementNode {\n    constructor(location, statements) {\n        super(location);\n        this.statements = statements;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementBlock(this);\n    }\n}\n//# sourceMappingURL=statement.js.map","import { Node } from './node';\nvar TypeTag;\n(function (TypeTag) {\n    TypeTag[TypeTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeTag || (TypeTag = {}));\nexport class TypeNode extends Node {\n    constructor() {\n        super(...arguments);\n        this._tag = TypeTag.Tag;\n    }\n    accept(visitor) {\n        visitor.visitType(this);\n    }\n}\nexport class BasicTypeNode extends TypeNode {\n    constructor(location, identifier) {\n        super(location);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n    accept(visitor) {\n        visitor.visitBasicType(this);\n    }\n}\nexport class AnyTypeNode extends TypeNode {\n    constructor(location, offered, required) {\n        super(location);\n        this.offered = offered;\n        this.required = required;\n    }\n    getOffered() {\n        return this.offered;\n    }\n    getRequired() {\n        return this.required;\n    }\n    accept(visitor) {\n        visitor.visitAnyType(this);\n    }\n}\n//# sourceMappingURL=type.js.map","import { Node } from './node';\nexport class StatementSequenceNode extends Node {\n    constructor(location, attributes, statements) {\n        super(location);\n        this.attributes = attributes;\n        this.statements = statements;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getStatements() {\n        return this.statements;\n    }\n    accept(visitor) {\n        visitor.visitStatementSequence(this);\n    }\n}\n//# sourceMappingURL=statement-sequence.js.map","export var IdentifierKeywords;\n(function (IdentifierKeywords) {\n    IdentifierKeywords[\"New\"] = \"NEW\";\n    IdentifierKeywords[\"Conncet\"] = \"CONNECT\";\n    IdentifierKeywords[\"Disconnect\"] = \"DISCONNECT\";\n    IdentifierKeywords[\"Delete\"] = \"DELETE\";\n    IdentifierKeywords[\"Move\"] = \"MOVE\";\n    IdentifierKeywords[\"Await\"] = \"AWAIT\";\n    IdentifierKeywords[\"Input\"] = \"INPUT\";\n    IdentifierKeywords[\"Exists\"] = \"EXISTS\";\n})(IdentifierKeywords || (IdentifierKeywords = {}));\n//# sourceMappingURL=keywords.js.map","import { Node } from './node';\nimport { DeclarationNode } from './declaration';\nexport class VariableNode extends Node {\n    constructor(location, names, type, attributes) {\n        super(location);\n        this.names = names;\n        this.type = type;\n        this.attributes = attributes;\n    }\n    getNames() {\n        return this.names;\n    }\n    getType() {\n        return this.type;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    accept(visitor) {\n        visitor.visitVariable(this);\n    }\n}\nexport class VariableListNode extends DeclarationNode {\n    constructor(location, variables) {\n        super(location);\n        this.variables = variables;\n    }\n    getVariables() {\n        return this.variables;\n    }\n    accept(visitor) {\n        visitor.visitVariableList(this);\n    }\n}\n//# sourceMappingURL=variable.js.map","import { ComponentNode } from './component';\nimport { ProcedureCallNode, AssignmentNode, NewNode, ConnectNode, DisconnectNode, SendNode, ReceiveNode, DeleteNode, MoveNode, AwaitNode, ReturnNode, IfNode, WhileNode, RepeatNode, ForNode, ForeachNode, StatementBlockNode, ElseIfNode, } from './statement';\nimport { InterfaceNode } from './interface';\nimport { AttributedExpressionNode, UnaryExpressionNode, BinaryExpressionNode, OffersRequiresExpressionNode, TypeCheckExpressionNode, } from './expression';\nimport { BasicTypeNode, AnyTypeNode } from './type';\nimport { ProcedureNode } from './procedure';\nimport { VariableListNode } from './variable';\nimport { BasicDesignatorNode, BasicExpressionDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, DesignatorNode, } from './designator';\nimport { FunctionCallNode, NumberNode, ConstantCharacterNode, TextNode, InputTestNode, ReceiveTestNode, ExistsTestNode, OperandNode, RealNumberNode, IntegerNumberNode, } from './operand';\nimport { UnaryFactorNode, FactorNode } from './factor';\nimport { TermNode, FactorChainNode, RightFactorNode } from './term';\nimport { TermChainNode, UnaryTermNode, SimpleExpressionNode } from './simple-expression';\nimport { OfferedInterfaceNode, RequiredInterfaceNode } from './interface-declaration';\nimport { MessageDeclarationNode, ProtocolFactorExpressionNode, GroupProtocolExpressionNode, RepeatingProtocolExpressionNode, OptionalProtocolExpressionNode, } from './protocol-factor';\nimport { ConstantListNode } from './constant';\nexport class Visitor {\n    visitProtocolFactor(node) {\n        if (node instanceof MessageDeclarationNode) {\n            this.visitMessageDeclaration(node);\n            return;\n        }\n        if (node instanceof ProtocolFactorExpressionNode) {\n            this.visitProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMessageDeclaration(_node) { }\n    visitProtocolFactorExpression(node) {\n        if (node instanceof OptionalProtocolExpressionNode) {\n            this.visitOptionalProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof RepeatingProtocolExpressionNode) {\n            this.visitRepeatingProtocolFactorExpression(node);\n            return;\n        }\n        if (node instanceof GroupProtocolExpressionNode) {\n            this.visitGroupProtocolFactorExpression(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOptionalProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitGroupProtocolFactorExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeatingProtocolFactorExpression(_node) { }\n    visitType(node) {\n        if (node instanceof BasicTypeNode) {\n            this.visitBasicType(node);\n            return;\n        }\n        if (node instanceof AnyTypeNode) {\n            this.visitAnyType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicType(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAnyType(_node) { }\n    visitDesignator(node) {\n        if (node instanceof BasicDesignatorNode) {\n            this.visitBasicDesignator(node);\n            return;\n        }\n        if (node instanceof BasicExpressionDesignatorNode) {\n            this.visitBasicExpressionDesignator(node);\n            return;\n        }\n        if (node instanceof BaseTargetDesignatorNode) {\n            this.visitBaseTargetDesignator(node);\n            return;\n        }\n        if (node instanceof DesignatorTypeNode) {\n            this.visitDesignatorType(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBasicExpressionDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBaseTargetDesignator(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDesignatorType(_node) { }\n    visitInterfaceDeclaration(node) {\n        if (node instanceof OfferedInterfaceNode) {\n            this.visitOfferedInterface(node);\n            return;\n        }\n        if (node instanceof RequiredInterfaceNode) {\n            this.visitRequiredInterfface(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOfferedInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRequiredInterfface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIndexedName(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitCardinality(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProgram(_node) { }\n    visitDeclaration(node) {\n        if (node instanceof ComponentNode) {\n            this.visitComponent(node);\n            return;\n        }\n        if (node instanceof InterfaceNode) {\n            this.visitInterface(node);\n            return;\n        }\n        if (node instanceof ConstantListNode) {\n            this.visitConstantList(node);\n            return;\n        }\n        if (node instanceof VariableListNode) {\n            this.visitVariableList(node);\n            return;\n        }\n        if (node instanceof ProcedureNode) {\n            this.visitProcedure(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponent(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInterface(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariableList(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedure(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitComponentBody(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitImplementation(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocol(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProtocolTerm(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAttribute(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementSequence(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitParameter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstant(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitVariable(_node) { }\n    visitStatement(node) {\n        if (node instanceof ProcedureCallNode) {\n            this.visitProcedureCall(node);\n            return;\n        }\n        if (node instanceof AssignmentNode) {\n            this.visitAssignment(node);\n            return;\n        }\n        if (node instanceof NewNode) {\n            this.visitNew(node);\n            return;\n        }\n        if (node instanceof ConnectNode) {\n            this.visitConnect(node);\n            return;\n        }\n        if (node instanceof DisconnectNode) {\n            this.visitDisconnect(node);\n            return;\n        }\n        if (node instanceof SendNode) {\n            this.visitSend(node);\n            return;\n        }\n        if (node instanceof ReceiveNode) {\n            this.visitReceive(node);\n            return;\n        }\n        if (node instanceof DeleteNode) {\n            this.visitDelete(node);\n            return;\n        }\n        if (node instanceof MoveNode) {\n            this.visitMove(node);\n            return;\n        }\n        if (node instanceof AwaitNode) {\n            this.visitAwait(node);\n            return;\n        }\n        if (node instanceof ReturnNode) {\n            this.visitReturn(node);\n            return;\n        }\n        if (node instanceof IfNode) {\n            this.visitIf(node);\n            return;\n        }\n        if (node instanceof ElseIfNode) {\n            this.visitElseIf(node);\n            return;\n        }\n        if (node instanceof WhileNode) {\n            this.visitWhile(node);\n            return;\n        }\n        if (node instanceof RepeatNode) {\n            this.visitRepeat(node);\n            return;\n        }\n        if (node instanceof ForNode) {\n            this.visitFor(node);\n            return;\n        }\n        if (node instanceof ForeachNode) {\n            this.visitForeach(node);\n            return;\n        }\n        if (node instanceof StatementBlockNode) {\n            this.visitStatementBlock(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitProcedureCall(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAssignment(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitNew(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDisconnect(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitSend(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceive(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitDelete(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitMove(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitAwait(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReturn(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitElseIf(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitWhile(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRepeat(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitForeach(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitStatementBlock(_node) { }\n    visitExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof AttributedExpressionNode) {\n            this.visitAttributedExpression(node);\n            return;\n        }\n    }\n    visitAttributedExpression(node) {\n        if (node instanceof SimpleExpressionNode) {\n            this.visitSimpleExpression(node);\n            return;\n        }\n        if (node instanceof UnaryExpressionNode) {\n            this.visitUnaryExpression(node);\n            return;\n        }\n        if (node instanceof BinaryExpressionNode) {\n            this.visitBinaryExpression(node);\n            return;\n        }\n        if (node instanceof OffersRequiresExpressionNode) {\n            this.visitOffersRequiresExpression(node);\n            return;\n        }\n        if (node instanceof TypeCheckExpressionNode) {\n            this.visitTypeCheck(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitBinaryExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitOffersRequiresExpression(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTypeCheck(_node) { }\n    visitSimpleExpression(node) {\n        if (node instanceof UnaryTermNode) {\n            this.visitUnaryTermNode(node);\n            return;\n        }\n        if (node instanceof TermChainNode) {\n            this.visitTermChain(node);\n            return;\n        }\n        if (node instanceof TermNode) {\n            this.visitTerm(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryTermNode(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitTermChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightTerm(_node) { }\n    visitTerm(node) {\n        if (node instanceof FactorNode) {\n            this.visitFactor(node);\n            return;\n        }\n        if (node instanceof FactorChainNode) {\n            this.visitFactorChain(node);\n            return;\n        }\n        if (node instanceof RightFactorNode) {\n            this.visitRightFactor(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFactorChain(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRightFactor(_node) { }\n    visitFactor(node) {\n        if (node instanceof UnaryFactorNode) {\n            this.visitUnaryFactor(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof OperandNode) {\n            this.visitOperand(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitUnaryFactor(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExpressionFactor(_node) { }\n    visitOperand(node) {\n        if (node instanceof NumberNode) {\n            this.visitNumber(node);\n            return;\n        }\n        if (node instanceof ConstantCharacterNode) {\n            this.visitConstantCharacter(node);\n            return;\n        }\n        if (node instanceof TextNode) {\n            this.visitText(node);\n            return;\n        }\n        if (node instanceof ReceiveTestNode) {\n            this.visitReceiveTest(node);\n            return;\n        }\n        if (node instanceof InputTestNode) {\n            this.visitInputTest(node);\n            return;\n        }\n        if (node instanceof ExistsTestNode) {\n            this.visitExistsTest(node);\n            return;\n        }\n        if (node instanceof FunctionCallNode) {\n            this.visitFunctionCall(node);\n            return;\n        }\n        if (node instanceof DesignatorNode) {\n            this.visitDesignator(node);\n            return;\n        }\n    }\n    visitNumber(node) {\n        if (node instanceof IntegerNumberNode) {\n            this.visitIntegerNumber(node);\n            return;\n        }\n        if (node instanceof RealNumberNode) {\n            this.visitRealNumber(node);\n            return;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitIntegerNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitRealNumber(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitConstantCharacter(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitText(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitReceiveTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitInputTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitExistsTest(_node) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    visitFunctionCall(_node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ProgramNode, ComponentNode, OfferedInterfaceNode, RequiredInterfaceNode, ComponentBodyNode, ImplementationNode, InterfaceNode, NameNode, StatementSequenceNode, AttributeNode, ProcedureCallNode, TextNode, ProtocolNode, ProtocolExpressionNode, ProtocolTermNode, MessageDeclarationNode, MessageDirection, ParameterNode, GroupProtocolExpressionNode, CardinalityNode, OptionalProtocolExpressionNode, RepeatingProtocolExpressionNode, BasicTypeNode, ConstantListNode, VariableListNode, ProcedureNode, ConstantNode, ConstantExpressionNode, VariableNode, IndexedNameNode, ProcedureParameterNode, AnyTypeNode, DesignatorNode, BasicExpressionDesignatorNode, BasicDesignatorNode, DesignatorTypeNode, BaseTargetDesignatorNode, NewNode, ConnectNode, DisconnectNode, DeleteNode, AwaitNode, MoveNode, SendNode, ReceiveNode, AssignmentNode, IfNode, ForeachNode, StatementBlockNode, ReturnNode, WhileNode, RepeatNode, ForNode, ElseIfNode, ConstantCharacterNode, ExistsTestNode, InputTestNode, FunctionCallNode, FixedMessagePattern, ReceiveTestNode, UnaryFactorNode, FactorPrefix, ExpressionFactorNode, UnaryExpressionNode, UnaryTermNode, InfixFactorOperator, FactorChainNode, RightFactorNode, RightTermNode, InfixTermOperator, PrefixOperator, LogicalOperator, BinaryExpressionNode, TermChainNode, OffersRequiresExpressionNode, OffersRequiresOperator, TypeCheckExpressionNode, RealNumberNode, IntegerNumberNode, } from '@composita/ast';\nimport { FixToken, IdentifierToken, TextToken, Tag, IntegerNumberToken, FloatNumberToken, HexNumberToken, } from '@composita/tokens';\nimport { SourceLocation } from '@composita/source-location';\nimport { NonEmptyArray } from '@composita/ts-utility-types';\nimport { CompilerDiagnostic } from '@composita/diagnosis';\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\nimport { IdentifierKeywords } from './keywords';\nexport class Parser {\n    constructor(diagnosis, lexer) {\n        this.diagnosis = diagnosis;\n        this.lexer = lexer;\n    }\n    hasTag(tag, n = 1) {\n        const token = this.lexer.peek(n);\n        return this.isTaggedFixToken(token, tag);\n    }\n    isTaggedFixToken(token, tag) {\n        return token instanceof FixToken && token.getTag() === tag;\n    }\n    hasIdentifier(identifier) {\n        const token = this.lexer.peek(1);\n        return token instanceof IdentifierToken && token.getIdentifier() === identifier;\n    }\n    isComponent() {\n        return this.hasTag(Tag.Component);\n    }\n    isInterface() {\n        return this.hasTag(Tag.Interface);\n    }\n    isEOT() {\n        return this.hasTag(Tag.EOT);\n    }\n    error(msg) {\n        const range = this.lexer.peek(1).getLocation().range;\n        this.diagnosis.log(new CompilerDiagnostic(range, DiagnosticSeverity.Error, msg));\n        throw new Error(`[${range.start.line},${range.start.character}:${range.end.line},${range.end.character}]: ${msg}`);\n    }\n    loop(predicate, body) {\n        while (predicate() && !this.isEOT()) {\n            body();\n        }\n    }\n    expectConsumeFixToken(tag) {\n        if (!this.tryConsumeFixToken(tag)) {\n            const msg = `Expected FixToken with Tag ${tag}`;\n            this.error(msg);\n        }\n    }\n    tryConsumeFixToken(tag) {\n        if (!this.hasTag(tag)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    expectConsumeIdentifierToken(identifier) {\n        if (!this.tryConsumeIdentifierToken(identifier)) {\n            const msg = `Expected IdentifierToken with Identifier ${identifier}`;\n            this.error(msg);\n        }\n    }\n    tryParse(parser) {\n        try {\n            this.diagnosis.saveState();\n            this.lexer.saveState();\n            const variable = parser();\n            this.lexer.popSaveState();\n            return variable;\n        }\n        catch (error) {\n            this.diagnosis.restoreState();\n            this.lexer.restoreState();\n            return undefined;\n        }\n    }\n    tryConsumeIdentifierToken(identifier) {\n        if (!this.hasIdentifier(identifier)) {\n            return false;\n        }\n        this.lexer.next();\n        return true;\n    }\n    parseName() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new NameNode(next.getLocation(), next.getIdentifier());\n        }\n        const msg = 'Failed to parse identifier name';\n        return this.error(msg);\n    }\n    parseIndexedName() {\n        const next = this.lexer.peek(1);\n        if (!(next instanceof IdentifierToken)) {\n            return this.error('Failed to parse indexed name.');\n        }\n        this.lexer.next();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const params = this.parseParameterList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new IndexedNameNode(SourceLocation.merge(next.getLocation(), end), next.getIdentifier(), params);\n        }\n        return new IndexedNameNode(next.getLocation(), next.getIdentifier(), new Array());\n    }\n    parseCardinality() {\n        if (!this.hasTag(Tag.OpenSquareBracket)) {\n            return undefined;\n        }\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.OpenSquareBracket);\n        let next = this.lexer.next();\n        if (!(next instanceof IntegerNumberToken)) {\n            return this.error('Expected number token.');\n        }\n        const min = next.getNumber();\n        let max = min;\n        if (this.tryConsumeFixToken(Tag.Ellipsis)) {\n            next = this.lexer.peek(1);\n            if (next instanceof IntegerNumberToken) {\n                this.lexer.next();\n                max = next.getNumber();\n            }\n            else if (this.hasTag(Tag.Asterisk)) {\n                this.lexer.next();\n                max = Infinity;\n            }\n            else {\n                this.error('Expected number or \"*\".');\n            }\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseSquareBracket);\n        return new CardinalityNode(SourceLocation.merge(start, end), min, max);\n    }\n    parseInterfaceDeclaration(InterfaceDeclaration) {\n        const name = this.parseName();\n        const cardinality = this.parseCardinality();\n        const location = cardinality === undefined\n            ? name.getLocation()\n            : SourceLocation.merge(name.getLocation(), cardinality.getLocation());\n        return new InterfaceDeclaration(location, name, cardinality);\n    }\n    parseOfferedInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(OfferedInterfaceNode);\n    }\n    parseRequiredInterfaceDeclaration() {\n        return this.parseInterfaceDeclaration(RequiredInterfaceNode);\n    }\n    parseOffers() {\n        const offered = new Array();\n        if (this.tryConsumeFixToken(Tag.Offers)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n        }\n        return offered;\n    }\n    parseRequires() {\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.Requires)) {\n            required.push(...this.parseRequiredInterfaceDeclarationList());\n        }\n        return required;\n    }\n    parseFunctionCall() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const args = new Array();\n        if (!this.hasTag(Tag.CloseParentheses)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new FunctionCallNode(SourceLocation.merge(name.getLocation(), end), name, args);\n    }\n    parseMessagePattern() {\n        if (this.tryConsumeFixToken(Tag.Any)) {\n            return FixedMessagePattern.Any;\n        }\n        if (this.tryConsumeFixToken(Tag.Finish)) {\n            return FixedMessagePattern.Finish;\n        }\n        return this.parseName();\n    }\n    tryParseExpression() {\n        return this.tryParse(this.parseExpression.bind(this));\n    }\n    parseReceiveTestExpression(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const end = this.lexer.peek(1).getLocation();\n        const pattern = this.parseMessagePattern();\n        return new ReceiveTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseInputTestExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Input);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        if (!this.hasTag(Tag.Comma)) {\n            if (designator instanceof BasicDesignatorNode) {\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new InputTestNode(SourceLocation.merge(start, end), undefined, designator.getName());\n            }\n            this.error('Failed parsing input test node.');\n        }\n        this.expectConsumeFixToken(Tag.Comma);\n        const pattern = this.parseMessagePattern();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new InputTestNode(SourceLocation.merge(start, end), designator, pattern);\n    }\n    parseExistsExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Exists);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ExistsTestNode(SourceLocation.merge(start, end), designator);\n    }\n    parseOperand() {\n        const token = this.lexer.peek(1);\n        if (token instanceof TextToken) {\n            this.lexer.next();\n            const text = token.getText();\n            if (text.length === 1) {\n                return new ConstantCharacterNode(token.getLocation(), text);\n            }\n            return new TextNode(token.getLocation(), text);\n        }\n        if (token instanceof IntegerNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof HexNumberToken) {\n            this.lexer.next();\n            return new IntegerNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (token instanceof FloatNumberToken) {\n            this.lexer.next();\n            return new RealNumberNode(token.getLocation(), token.getNumber());\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Input)) {\n            return this.parseInputTestExpression();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Exists)) {\n            return this.parseExistsExpression();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveTestExpression(designator);\n        }\n        if (designator === undefined) {\n            return this.parseFunctionCall();\n        }\n        // we could still have a function call here, let this the checker handle.\n        return designator;\n    }\n    parseFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.tryConsumeFixToken(Tag.Tilde)) {\n            const node = this.parseFactor();\n            return new UnaryFactorNode(SourceLocation.merge(start, node.getLocation()), FactorPrefix.Not, node);\n        }\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const expression = this.parseExpression();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new ExpressionFactorNode(SourceLocation.merge(start, end), expression);\n        }\n        return this.parseOperand();\n    }\n    isFactorInfix() {\n        return (this.hasTag(Tag.Asterisk) ||\n            this.hasTag(Tag.Slash) ||\n            this.hasTag(Tag.Div) ||\n            this.hasTag(Tag.Mod) ||\n            this.hasTag(Tag.And));\n    }\n    parseFactorInfix() {\n        if (this.tryConsumeFixToken(Tag.Asterisk)) {\n            return InfixFactorOperator.Times;\n        }\n        if (this.tryConsumeFixToken(Tag.Slash)) {\n            return InfixFactorOperator.Div;\n        }\n        if (this.tryConsumeFixToken(Tag.Div)) {\n            return InfixFactorOperator.DivText;\n        }\n        if (this.tryConsumeFixToken(Tag.Mod)) {\n            return InfixFactorOperator.ModText;\n        }\n        if (this.tryConsumeFixToken(Tag.And)) {\n            return InfixFactorOperator.AndText;\n        }\n        return this.error('Failed to parse factor infix.');\n    }\n    parseRightFactor() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseFactorInfix();\n        const rightFactor = this.parseFactor();\n        return new RightFactorNode(SourceLocation.merge(start, rightFactor.getLocation()), op, rightFactor);\n    }\n    parseTerm() {\n        const factor = this.parseFactor();\n        if (!this.isFactorInfix()) {\n            return factor;\n        }\n        const rightFactors = this.parseListWithPredicate(this.parseRightFactor.bind(this), this.isFactorInfix.bind(this));\n        return new FactorChainNode(SourceLocation.merge(factor.getLocation(), rightFactors[rightFactors.length - 1].getLocation()), factor, rightFactors);\n    }\n    isTermInfix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus) || this.hasTag(Tag.Or);\n    }\n    parseTermInfix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return InfixTermOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return InfixTermOperator.Minus;\n        }\n        if (this.tryConsumeFixToken(Tag.Or)) {\n            return InfixTermOperator.Or;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseRightTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseTermInfix();\n        const rightTerm = this.parseTerm();\n        return new RightTermNode(SourceLocation.merge(start, rightTerm.getLocation()), op, rightTerm);\n    }\n    isTermPrefix() {\n        return this.hasTag(Tag.Plus) || this.hasTag(Tag.Minus);\n    }\n    parseUnaryPrefix() {\n        if (this.tryConsumeFixToken(Tag.Plus)) {\n            return PrefixOperator.Plus;\n        }\n        if (this.tryConsumeFixToken(Tag.Minus)) {\n            return PrefixOperator.Minus;\n        }\n        return this.error('Failed to parse prefix operator.');\n    }\n    parseUnaryTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const op = this.parseUnaryPrefix();\n        const term = this.parseTerm();\n        return new UnaryTermNode(SourceLocation.merge(start, term.getLocation()), op, term);\n    }\n    parseSimpleExpression() {\n        const left = this.isTermPrefix() ? this.parseUnaryTerm() : this.parseTerm();\n        if (!this.isTermInfix()) {\n            return left;\n        }\n        const rightTerms = this.parseListWithPredicate(this.parseRightTerm.bind(this), this.isTermInfix.bind(this));\n        return new TermChainNode(SourceLocation.merge(left.getLocation(), rightTerms[rightTerms.length - 1].getLocation()), left, rightTerms);\n    }\n    isBinaryExpressionOperator() {\n        return (this.hasTag(Tag.Equal) ||\n            this.hasTag(Tag.NumberSign) ||\n            this.hasTag(Tag.Less) ||\n            this.hasTag(Tag.LessEqual) ||\n            this.hasTag(Tag.Greater) ||\n            this.hasTag(Tag.GreaterEqual));\n    }\n    parseBinaryExpressionOperator() {\n        if (this.tryConsumeFixToken(Tag.Equal)) {\n            return LogicalOperator.Equal;\n        }\n        if (this.tryConsumeFixToken(Tag.NumberSign)) {\n            return LogicalOperator.NotEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Less)) {\n            return LogicalOperator.Less;\n        }\n        if (this.tryConsumeFixToken(Tag.LessEqual)) {\n            return LogicalOperator.LessEqual;\n        }\n        if (this.tryConsumeFixToken(Tag.Greater)) {\n            return LogicalOperator.More;\n        }\n        if (this.tryConsumeFixToken(Tag.GreaterEqual)) {\n            return LogicalOperator.MoreEqual;\n        }\n        return this.error('Failed to parse term infix.');\n    }\n    parseBinaryExpression(start, attributes, left) {\n        const op = this.parseBinaryExpressionOperator();\n        const right = this.parseSimpleExpression();\n        return new BinaryExpressionNode(SourceLocation.merge(start, right.getLocation()), attributes, left, op, right);\n    }\n    parseExpression() {\n        const attributes = this.parseAttributeList();\n        const simpleExpression = this.parseSimpleExpression();\n        if (simpleExpression instanceof DesignatorNode) {\n            const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n            if (this.tryConsumeFixToken(Tag.Offers)) {\n                const offeredList = this.parseOfferedInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, offeredList[offeredList.length - 1].getLocation()), attributes, OffersRequiresOperator.Offers, offeredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Requires)) {\n                const requiredList = this.parseRequiredInterfaceDeclarationList();\n                return new OffersRequiresExpressionNode(SourceLocation.merge(start, requiredList[requiredList.length - 1].getLocation()), attributes, OffersRequiresOperator.Requires, requiredList);\n            }\n            if (this.tryConsumeFixToken(Tag.Is)) {\n                const type = this.parseType();\n                return new TypeCheckExpressionNode(SourceLocation.merge(start, type.getLocation()), attributes, simpleExpression, type);\n            }\n            if (this.isBinaryExpressionOperator()) {\n                return this.parseBinaryExpression(start, attributes, simpleExpression);\n            }\n            return simpleExpression;\n        }\n        const start = attributes.length === 0 ? simpleExpression.getLocation() : attributes[0].getLocation();\n        if (!this.isBinaryExpressionOperator()) {\n            return new UnaryExpressionNode(SourceLocation.merge(start, simpleExpression.getLocation()), attributes, simpleExpression);\n        }\n        return this.parseBinaryExpression(start, attributes, simpleExpression);\n    }\n    parseProcedureCall() {\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ProcedureCallNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n    }\n    parseStatementSequenceBlock(tag) {\n        let statements = undefined;\n        if (this.hasTag(tag)) {\n            const beginStart = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(tag);\n            statements = this.parseStatementSequence(beginStart);\n        }\n        return statements;\n    }\n    parseBasicDesignator() {\n        const name = this.parseName();\n        if (this.tryConsumeFixToken(Tag.OpenSquareBracket)) {\n            const expressions = this.parseExpressionList();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseSquareBracket);\n            return new BasicExpressionDesignatorNode(SourceLocation.merge(name.getLocation(), end), name, expressions);\n        }\n        return new BasicDesignatorNode(name.getLocation(), name);\n    }\n    parseDesignator() {\n        const designator = this.parseBasicDesignator();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            // if ANY we assume type otherwise designator.\n            // see original CCParser implementation\n            if (this.hasTag(Tag.Any)) {\n                const type = this.parseType();\n                const end = this.lexer.peek(1).getLocation();\n                this.expectConsumeFixToken(Tag.CloseParentheses);\n                return new DesignatorTypeNode(SourceLocation.merge(designator.getLocation(), end), designator, type);\n            }\n            const target = this.parseDesignator();\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return new BaseTargetDesignatorNode(SourceLocation.merge(designator.getLocation(), end), designator, target);\n        }\n        return designator;\n    }\n    tryParseDesignator() {\n        return this.tryParse(this.parseDesignator.bind(this));\n    }\n    parseStatementSequence(start) {\n        const attributes = this.parseAttributeList();\n        const statements = this.parseStatementList();\n        const end = statements[statements.length - 1].getLocation();\n        return new StatementSequenceNode(SourceLocation.merge(start, end), attributes, statements);\n    }\n    parseNewStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.New);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const args = new Array();\n        if (this.tryConsumeFixToken(Tag.Comma)) {\n            args.push(...this.parseExpressionList());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new NewNode(SourceLocation.merge(start, end), designator, args);\n    }\n    parseDeleteStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Delete);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DeleteNode(SourceLocation.merge(start, end), designator);\n    }\n    parseConnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Conncet);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new ConnectNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseDisconnectStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Disconnect);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new DisconnectNode(SourceLocation.merge(start, end), designator);\n    }\n    parseMoveStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Move);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Comma);\n        const target = this.parseDesignator();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new MoveNode(SourceLocation.merge(start, end), designator, target);\n    }\n    parseAwaitStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeIdentifierToken(IdentifierKeywords.Await);\n        this.expectConsumeFixToken(Tag.OpenParentheses);\n        const expression = this.parseExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.CloseParentheses);\n        return new AwaitNode(SourceLocation.merge(start, end), expression);\n    }\n    parseSendStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.ExclamationMark);\n        const name = this.parseName();\n        const expressions = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            expressions.push(...this.parseExpressionList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new SendNode(SourceLocation.merge(start, end), designator, name, expressions);\n    }\n    parseReceiveStatement(designator) {\n        const start = designator?.getLocation() ?? this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.QuestionMark);\n        const name = this.parseName();\n        const designators = new Array();\n        let end = name.getLocation();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            designators.push(...this.parseDesignatorList());\n            end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new ReceiveNode(SourceLocation.merge(start, end), designator, name, designators);\n    }\n    parseAssignmentStatement(designator) {\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const expression = this.parseExpression();\n        return new AssignmentNode(SourceLocation.merge(designator.getLocation(), expression.getLocation()), designator, expression);\n    }\n    parseReturnStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Return);\n        const expression = this.tryParseExpression();\n        return new ReturnNode(SourceLocation.merge(start, expression?.getLocation() ?? start), expression);\n    }\n    parseIfStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.If);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Then);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const elsIfs = new Array();\n        this.loop(() => this.hasTag(Tag.Elsif), () => {\n            const start = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(Tag.Elsif);\n            const expression = this.parseExpression();\n            this.expectConsumeFixToken(Tag.Then);\n            const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n            elsIfs.push(new ElseIfNode(SourceLocation.merge(start, sequence.getLocation()), expression, sequence));\n        });\n        let elseSequence = undefined;\n        if (this.tryConsumeFixToken(Tag.Else)) {\n            elseSequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new IfNode(SourceLocation.merge(start, end), expression, sequence, elsIfs, elseSequence);\n    }\n    parseWhileStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.While);\n        const expression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new WhileNode(SourceLocation.merge(start, end), expression, sequence);\n    }\n    parseRepeatStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Repeat);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        this.expectConsumeFixToken(Tag.Until);\n        const expression = this.parseExpression();\n        return new RepeatNode(SourceLocation.merge(start, expression.getLocation()), sequence, expression);\n    }\n    parseForStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.For);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.ColonEqual);\n        const assignExpression = this.parseExpression();\n        this.expectConsumeFixToken(Tag.To);\n        const expression = this.parseExpression();\n        let stride = undefined;\n        if (this.tryConsumeFixToken(Tag.By)) {\n            stride = this.parseConstantExpression();\n        }\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForNode(SourceLocation.merge(start, end), designator, assignExpression, expression, stride, sequence);\n    }\n    parseForeachStatement() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Foreach);\n        const designators = this.parseDesignatorList();\n        this.expectConsumeFixToken(Tag.Of);\n        const designator = this.parseDesignator();\n        this.expectConsumeFixToken(Tag.Do);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new ForeachNode(SourceLocation.merge(start, end), designators, designator, sequence);\n    }\n    parseStatementBlock() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Begin);\n        const sequence = this.parseStatementSequence(this.lexer.peek(1).getLocation());\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.End);\n        return new StatementBlockNode(SourceLocation.merge(start, end), sequence);\n    }\n    parseStatement() {\n        if (this.hasIdentifier(IdentifierKeywords.New)) {\n            return this.parseNewStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Delete)) {\n            return this.parseDeleteStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Conncet)) {\n            return this.parseConnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Disconnect)) {\n            return this.parseDisconnectStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Move)) {\n            return this.parseMoveStatement();\n        }\n        if (this.hasIdentifier(IdentifierKeywords.Await)) {\n            return this.parseAwaitStatement();\n        }\n        if (this.hasTag(Tag.Return)) {\n            return this.parseReturnStatement();\n        }\n        if (this.hasTag(Tag.If)) {\n            return this.parseIfStatement();\n        }\n        if (this.hasTag(Tag.While)) {\n            return this.parseWhileStatement();\n        }\n        if (this.hasTag(Tag.Repeat)) {\n            return this.parseRepeatStatement();\n        }\n        if (this.hasTag(Tag.For)) {\n            return this.parseForStatement();\n        }\n        if (this.hasTag(Tag.Foreach)) {\n            return this.parseForeachStatement();\n        }\n        if (this.hasTag(Tag.Begin)) {\n            return this.parseStatementBlock();\n        }\n        const designator = this.tryParseDesignator();\n        if (this.hasTag(Tag.ExclamationMark)) {\n            return this.parseSendStatement(designator);\n        }\n        if (this.hasTag(Tag.QuestionMark)) {\n            return this.parseReceiveStatement(designator);\n        }\n        if (designator === undefined) {\n            return this.parseProcedureCall();\n        }\n        if (this.hasTag(Tag.ColonEqual)) {\n            return this.parseAssignmentStatement(designator);\n        }\n        if (designator instanceof BasicDesignatorNode) {\n            return new ProcedureCallNode(designator.getLocation(), designator.getName(), new Array());\n        }\n        if (designator instanceof BaseTargetDesignatorNode) {\n            const base = designator.getBase();\n            if (base instanceof BasicDesignatorNode) {\n                return new ProcedureCallNode(designator.getLocation(), base.getName(), new Array(designator.getTarget()));\n            }\n        }\n        return this.error('Failed to parse statement. Unknown statement.');\n    }\n    parseConstantExpression() {\n        const expression = this.parseExpression();\n        return new ConstantExpressionNode(expression.getLocation(), expression);\n    }\n    parseConstant() {\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Equal);\n        const expression = this.parseConstantExpression();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new ConstantNode(SourceLocation.merge(name.getLocation(), end), name, expression);\n    }\n    tryParseConstant() {\n        return this.tryParse(this.parseConstant.bind(this));\n    }\n    parseConstantList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Constant);\n        const constants = new NonEmptyArray(this.parseConstant());\n        let parsedConstant = true;\n        this.loop(() => parsedConstant, () => {\n            const constant = this.tryParseConstant();\n            if (constant === undefined) {\n                parsedConstant = false;\n                return;\n            }\n            constants.push(constant);\n        });\n        return new ConstantListNode(SourceLocation.merge(start, constants[constants.length - 1].getLocation()), constants);\n    }\n    parseVariable() {\n        const start = this.lexer.peek(1).getLocation();\n        const names = this.parseIndexedIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        const attributes = this.parseAttributeList();\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return new VariableNode(SourceLocation.merge(start, end), names, type, attributes);\n    }\n    tryParseVariable() {\n        return this.tryParse(this.parseVariable.bind(this));\n    }\n    parseVariableList() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Variable);\n        const variables = new NonEmptyArray(this.parseVariable());\n        let parsedVariable = true;\n        this.loop(() => parsedVariable, () => {\n            const variable = this.tryParseVariable();\n            if (variable === undefined) {\n                parsedVariable = false;\n                return;\n            }\n            variables.push(variable);\n        });\n        return new VariableListNode(SourceLocation.merge(start, variables[variables.length - 1].getLocation()), variables);\n    }\n    parseProcedure() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Procedure);\n        const name = this.parseName();\n        const params = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            if (!this.hasTag(Tag.CloseParentheses)) {\n                params.push(...this.parseProcedureParameterList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        const type = this.tryConsumeFixToken(Tag.Colon) ? this.parseType() : undefined;\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = new Array();\n        let beginBlock = undefined;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (beginBlock === undefined) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                return;\n            }\n            breakLoop = true;\n        });\n        const end = this.consumeEnd(name);\n        return new ProcedureNode(SourceLocation.merge(start, end), name, params, type, declarations, beginBlock);\n    }\n    parseDeclaration() {\n        if (this.hasTag(Tag.Component)) {\n            return this.parseComponent();\n        }\n        if (this.hasTag(Tag.Interface)) {\n            return this.parseInterface();\n        }\n        if (this.hasTag(Tag.Constant)) {\n            return this.parseConstantList();\n        }\n        if (this.hasTag(Tag.Variable)) {\n            return this.parseVariableList();\n        }\n        if (this.hasTag(Tag.Procedure)) {\n            return this.parseProcedure();\n        }\n        return undefined;\n    }\n    parseComponentBody() {\n        const start = this.lexer.peek(1).getLocation();\n        let beginBlock = undefined;\n        let activityBlock = undefined;\n        let finallyBlock = undefined;\n        const declarations = new Array();\n        const implementations = new Array();\n        let end = start;\n        let breakLoop = false;\n        this.loop(() => !this.hasTag(Tag.End) && !breakLoop, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration !== undefined) {\n                declarations.push(declaration);\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                implementations.push(this.parseImplementation());\n                return;\n            }\n            if (beginBlock !== undefined && this.hasTag(Tag.Begin)) {\n                this.error('Cannot have more than one begin per component.');\n            }\n            if (beginBlock === undefined && this.hasTag(Tag.Begin)) {\n                beginBlock = this.parseStatementSequenceBlock(Tag.Begin);\n                if (beginBlock !== undefined) {\n                    end = beginBlock.getLocation();\n                }\n                return;\n            }\n            if (activityBlock !== undefined && this.hasTag(Tag.Activity)) {\n                this.error('Cannot have more than one activity per component.');\n            }\n            if (activityBlock === undefined && this.hasTag(Tag.Activity)) {\n                activityBlock = this.parseStatementSequenceBlock(Tag.Activity);\n                if (activityBlock !== undefined) {\n                    end = activityBlock.getLocation();\n                }\n                return;\n            }\n            if (finallyBlock !== undefined && this.hasTag(Tag.Finally)) {\n                this.error('Cannot have more than one finally per component.');\n            }\n            if (finallyBlock === undefined && this.hasTag(Tag.Finally)) {\n                finallyBlock = this.parseStatementSequenceBlock(Tag.Finally);\n                if (finallyBlock !== undefined) {\n                    end = finallyBlock.getLocation();\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Component)) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    declarations.push(component);\n                }\n                return;\n            }\n            if (this.hasTag(Tag.Implementation)) {\n                const implementation = this.parseImplementation();\n                if (implementation !== undefined) {\n                    implementations.push(implementation);\n                }\n                return;\n            }\n            breakLoop = true;\n        });\n        return new ComponentBodyNode(SourceLocation.merge(start, end), declarations, implementations, beginBlock, activityBlock, finallyBlock);\n    }\n    consumeEnd(name) {\n        this.expectConsumeFixToken(Tag.End);\n        const endName = this.parseName();\n        if (endName.getName() !== name.getName()) {\n            this.error('Name missmatch.');\n        }\n        const end = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        return end;\n    }\n    parseComponent() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Component);\n        const name = this.parseName();\n        const offers = this.parseOffers();\n        const requires = this.parseRequires();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const body = this.parseComponentBody();\n        const end = this.consumeEnd(name);\n        return new ComponentNode(SourceLocation.merge(start, end), name, offers, requires, body);\n    }\n    parseImplementation() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Implementation);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const declarations = this.parseDeclarationList();\n        const statements = this.parseStatementSequenceBlock(Tag.Begin);\n        const end = this.consumeEnd(name);\n        return new ImplementationNode(SourceLocation.merge(start, end), name, declarations, statements);\n    }\n    parseListWithPredicate(parseFunction, pred) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => pred(), () => {\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseList(parseFunction, separator) {\n        const list = new NonEmptyArray(parseFunction());\n        this.loop(() => this.hasTag(separator), () => {\n            this.expectConsumeFixToken(separator);\n            list.push(parseFunction());\n        });\n        return list;\n    }\n    parseIdentifierList() {\n        return this.parseList(this.parseName.bind(this), Tag.Comma);\n    }\n    parseParameterList() {\n        return this.parseList(this.parseParameter.bind(this), Tag.Semicolon);\n    }\n    parseProcedureParameterList() {\n        return this.parseList(this.parseProcedureParameter.bind(this), Tag.Semicolon);\n    }\n    parseIndexedIdentifierList() {\n        return this.parseList(this.parseIndexedName.bind(this), Tag.Comma);\n    }\n    parseExpressionList() {\n        return this.parseList(this.parseExpression.bind(this), Tag.Comma);\n    }\n    parseDesignatorList() {\n        return this.parseList(this.parseDesignator.bind(this), Tag.Comma);\n    }\n    parseOfferedInterfaceDeclarationList() {\n        return this.parseList(this.parseOfferedInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseRequiredInterfaceDeclarationList() {\n        return this.parseList(this.parseRequiredInterfaceDeclaration.bind(this), Tag.Comma);\n    }\n    parseStatementList() {\n        return this.parseList(this.parseStatement.bind(this), Tag.Semicolon);\n    }\n    parseAttributeList() {\n        if (!this.hasTag(Tag.OpenBrace)) {\n            return new Array();\n        }\n        this.expectConsumeFixToken(Tag.OpenBrace);\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.CloseBrace);\n        return names.map((name) => new AttributeNode(name.getLocation(), name));\n    }\n    parseDeclarationList() {\n        const declarations = new Array();\n        let foundDeclaration = true;\n        this.loop(() => foundDeclaration, () => {\n            const declaration = this.parseDeclaration();\n            if (declaration === undefined) {\n                foundDeclaration = false;\n                return;\n            }\n            declarations.push(declaration);\n        });\n        return declarations;\n    }\n    parseType() {\n        const next = this.lexer.peek(1);\n        if (next instanceof IdentifierToken) {\n            this.lexer.next();\n            return new BasicTypeNode(next.getLocation(), next.getIdentifier());\n        }\n        this.expectConsumeFixToken(Tag.Any);\n        const offered = new Array();\n        const required = new Array();\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            offered.push(...this.parseOfferedInterfaceDeclarationList());\n            if (this.tryConsumeFixToken(Tag.Pipe)) {\n                required.push(...this.parseRequiredInterfaceDeclarationList());\n            }\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n        }\n        return new AnyTypeNode(next.getLocation(), offered, required);\n    }\n    parseParameter() {\n        const names = this.parseIdentifierList();\n        this.expectConsumeFixToken(Tag.Colon);\n        const type = this.parseType();\n        return new ParameterNode(SourceLocation.merge(names[0].getLocation(), type.getLocation()), names, type);\n    }\n    parseProcedureParameter() {\n        const mutable = this.hasTag(Tag.Variable);\n        const start = this.lexer.peek(1).getLocation();\n        if (mutable) {\n            this.expectConsumeFixToken(Tag.Variable);\n        }\n        const param = this.parseParameter();\n        return new ProcedureParameterNode(SourceLocation.merge(start, param.getLocation()), mutable, param);\n    }\n    parseMessageParameters() {\n        if (this.tryConsumeFixToken(Tag.OpenParentheses)) {\n            const params = this.parseParameterList();\n            this.expectConsumeFixToken(Tag.CloseParentheses);\n            return params;\n        }\n        return new Array();\n    }\n    parseMessageDeclaration() {\n        const start = this.lexer.peek(1).getLocation();\n        let direction = undefined;\n        if (this.tryConsumeFixToken(Tag.In)) {\n            direction = MessageDirection.IN;\n        }\n        if (this.tryConsumeFixToken(Tag.Out)) {\n            direction = MessageDirection.OUT;\n        }\n        if (direction === undefined) {\n            return this.error('Message declarations must have a direction.');\n        }\n        const name = this.parseName();\n        const params = this.parseMessageParameters();\n        return new MessageDeclarationNode(start, direction, name, params);\n    }\n    parseProtocolTermExpression(TermExpression, startTag, endTag) {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(startTag);\n        const expression = this.parseProtocolExpression();\n        if (expression !== undefined) {\n            const end = this.lexer.peek(1).getLocation();\n            this.expectConsumeFixToken(endTag);\n            return new TermExpression(SourceLocation.merge(start, end), expression);\n        }\n        return this.error('Failed to parse protocol term expression.');\n    }\n    parseProtocolTerm() {\n        const start = this.lexer.peek(1).getLocation();\n        const factors = new Array();\n        this.loop(() => this.hasTag(Tag.In) ||\n            this.hasTag(Tag.Out) ||\n            this.hasTag(Tag.OpenSquareBracket) ||\n            this.hasTag(Tag.OpenParentheses) ||\n            this.hasTag(Tag.OpenBrace), () => {\n            if (this.hasTag(Tag.In) || this.hasTag(Tag.Out)) {\n                factors.push(this.parseMessageDeclaration());\n                return;\n            }\n            if (this.hasTag(Tag.OpenSquareBracket)) {\n                const factor = this.parseProtocolTermExpression(OptionalProtocolExpressionNode, Tag.OpenSquareBracket, Tag.CloseSquareBracket);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenParentheses)) {\n                const factor = this.parseProtocolTermExpression(GroupProtocolExpressionNode, Tag.OpenParentheses, Tag.CloseParentheses);\n                factors.push(factor);\n                return;\n            }\n            if (this.hasTag(Tag.OpenBrace)) {\n                const factor = this.parseProtocolTermExpression(RepeatingProtocolExpressionNode, Tag.OpenBrace, Tag.CloseBrace);\n                factors.push(factor);\n                return;\n            }\n        });\n        const termFactors = NonEmptyArray.fromArray(factors);\n        if (termFactors === undefined) {\n            return this.error('At least one term factor needed.');\n        }\n        return new ProtocolTermNode(start, termFactors);\n    }\n    parseProtocolExpression() {\n        const start = this.lexer.peek(1).getLocation();\n        if (this.hasTag(Tag.End)) {\n            return undefined;\n        }\n        const terms = new NonEmptyArray(this.parseProtocolTerm());\n        this.loop(() => this.hasTag(Tag.Pipe), () => {\n            this.expectConsumeFixToken(Tag.Pipe);\n            terms.push(this.parseProtocolTerm());\n        });\n        return new ProtocolExpressionNode(start, terms);\n    }\n    parseProtocol() {\n        const start = this.lexer.peek(1).getLocation();\n        const expression = this.parseProtocolExpression();\n        return new ProtocolNode(expression === undefined ? start : SourceLocation.merge(start, expression.getLocation()), expression);\n    }\n    parseInterface() {\n        const start = this.lexer.peek(1).getLocation();\n        this.expectConsumeFixToken(Tag.Interface);\n        const name = this.parseName();\n        this.expectConsumeFixToken(Tag.Semicolon);\n        const protocol = this.parseProtocol();\n        const end = this.consumeEnd(name);\n        return new InterfaceNode(SourceLocation.merge(start, end), name, protocol);\n    }\n    parse() {\n        const start = this.lexer.peek(1).getLocation();\n        const components = new Array();\n        const interfaces = new Array();\n        let breakLoop = false;\n        this.loop(() => !breakLoop, () => {\n            if (this.isComponent()) {\n                const component = this.parseComponent();\n                if (component !== undefined) {\n                    components.push(component);\n                }\n                return;\n            }\n            if (this.isInterface()) {\n                const interfaceDeclaration = this.parseInterface();\n                if (interfaceDeclaration !== undefined) {\n                    interfaces.push(interfaceDeclaration);\n                }\n                return;\n            }\n            this.error('Invalid top level node.');\n            breakLoop = true;\n        });\n        const end = this.lexer.peek(1).getLocation();\n        return new ProgramNode(SourceLocation.merge(start, end), components, interfaces);\n    }\n}\n//# sourceMappingURL=parser.js.map","var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(SymbolTag || (SymbolTag = {}));\nexport class CompilationSymbol {\n    constructor() {\n        this._symbolTag = SymbolTag.Tag;\n    }\n}\n//# sourceMappingURL=compilation-symbols.js.map","import { CompilationSymbol } from './compilation-symbols';\nvar GlobalScopeSymbolTag;\n(function (GlobalScopeSymbolTag) {\n    GlobalScopeSymbolTag[GlobalScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GlobalScopeSymbolTag || (GlobalScopeSymbolTag = {}));\nexport class GlobalScopeSymbol extends CompilationSymbol {\n    constructor() {\n        super(...arguments);\n        this._globalScopeSymbolTag = GlobalScopeSymbolTag.Tag;\n    }\n}\nexport class ScopedSymbol extends CompilationSymbol {\n    constructor(scope) {\n        super();\n        this.scope = scope;\n    }\n    getScope() {\n        return this.scope;\n    }\n}\nexport class ProgramScopeSymbol extends ScopedSymbol {\n    constructor(scope, name) {\n        super(scope);\n        this.name = name;\n    }\n    getProgramName() {\n        return this.name;\n    }\n}\nexport class NamedScopeSymbol extends ScopedSymbol {\n    constructor(scope, identifier) {\n        super(scope);\n        this.identifier = identifier;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n}\nvar BlockScopeSymbolTag;\n(function (BlockScopeSymbolTag) {\n    BlockScopeSymbolTag[BlockScopeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BlockScopeSymbolTag || (BlockScopeSymbolTag = {}));\nexport class BlockScopeSymbol extends ScopedSymbol {\n    constructor() {\n        super(...arguments);\n        this._blockScopeSymbolTag = BlockScopeSymbolTag.Tag;\n    }\n}\n//# sourceMappingURL=scope-symbols.js.map","import { NamedScopeSymbol } from './scope-symbols';\nvar TypeSymbolTag;\n(function (TypeSymbolTag) {\n    TypeSymbolTag[TypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(TypeSymbolTag || (TypeSymbolTag = {}));\nexport class TypeSymbol extends NamedScopeSymbol {\n    constructor() {\n        super(...arguments);\n        this._typeSymbolTag = TypeSymbolTag.Tag;\n    }\n}\nvar BuiltInTypeSymbolTag;\n(function (BuiltInTypeSymbolTag) {\n    BuiltInTypeSymbolTag[BuiltInTypeSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(BuiltInTypeSymbolTag || (BuiltInTypeSymbolTag = {}));\nexport class BuiltInTypeSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._builtInTypeSymbol = BuiltInTypeSymbolTag.Tag;\n    }\n}\nvar InterfaceSymbolTag;\n(function (InterfaceSymbolTag) {\n    InterfaceSymbolTag[InterfaceSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(InterfaceSymbolTag || (InterfaceSymbolTag = {}));\nexport class InterfaceSymbol extends TypeSymbol {\n    constructor() {\n        super(...arguments);\n        this._interfaceSymbolTag = InterfaceSymbolTag.Tag;\n    }\n}\nvar ComponentSymbolTag;\n(function (ComponentSymbolTag) {\n    ComponentSymbolTag[ComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(ComponentSymbolTag || (ComponentSymbolTag = {}));\nexport class ComponentSymbol extends TypeSymbol {\n    constructor(scope, identifier, genericType) {\n        super(scope, identifier);\n        this.genericType = genericType;\n        this._componentSymbolTag = ComponentSymbolTag.Tag;\n    }\n    getGenericType() {\n        return this.genericType;\n    }\n}\nvar GenericComponentSymbolTag;\n(function (GenericComponentSymbolTag) {\n    GenericComponentSymbolTag[GenericComponentSymbolTag[\"Tag\"] = 0] = \"Tag\";\n})(GenericComponentSymbolTag || (GenericComponentSymbolTag = {}));\nexport class GenericComponentSymbol extends ComponentSymbol {\n    constructor(scope, genericType) {\n        super(scope, '@@@__ANY__GENERIC_COMPONENT__@@@', genericType);\n        this._genericComponentSymbolTag = GenericComponentSymbolTag.Tag;\n    }\n}\nexport class MessageSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters) {\n        super(scope, identifier);\n        this.parameters = parameters;\n    }\n    getParameters() {\n        return this.parameters;\n    }\n}\n//# sourceMappingURL=type-symbols.js.map","import { ComponentSymbol, InterfaceSymbol, BuiltInTypeSymbol } from './type-symbols';\nimport { GlobalScopeSymbol } from './scope-symbols';\nexport class SymbolTable {\n    constructor() {\n        // varia\n        this.globalScope = new GlobalScopeSymbol();\n        this.voidType = new BuiltInTypeSymbol(this.globalScope, '@@@__VOID__@@@');\n        this.anyRequiredInterfaceType = new InterfaceSymbol(this.globalScope, '@@@__ANY_REQUIRED_INTERFACE__@@@');\n        // mappings symbol -> node\n        this.symbolToDeclaration = new Map();\n        this.symbolToImplementation = new Map();\n        // mappings node -> symbol\n        this.expressionToType = new Map();\n        this.typeToType = new Map();\n        this.designatorToSymbol = new Map();\n        this.callToSymbol = new Map();\n        this.sendReceiveToSymbol = new Map();\n        // types\n        this.types = new Array();\n        this.builtins = new Array();\n        this.components = new Array();\n        this.interfaces = new Array();\n        this.messages = new Array();\n        // lookups\n        this.procedures = new Array();\n        this.impplementations = new Array();\n        this.constants = new Array();\n        this.variables = new Array();\n        this.collectionVariables = new Array();\n    }\n    getGlobalScope() {\n        return this.globalScope;\n    }\n    getVoidType() {\n        return this.voidType;\n    }\n    getAnyRequiredInterfaceType() {\n        return this.anyRequiredInterfaceType;\n    }\n    getComponents() {\n        return this.components;\n    }\n    getInterfaces() {\n        return this.interfaces;\n    }\n    getMessages(scope) {\n        return this.messages.filter((message) => message.getScope() === scope);\n    }\n    getConstants() {\n        return this.constants;\n    }\n    getSystemProcedures() {\n        return this.procedures.filter((procedure) => procedure.getScope() === this.globalScope);\n    }\n    getProcedures(scope) {\n        return this.procedures.filter((procedure) => procedure.getScope() === scope);\n    }\n    getImplementations(scope) {\n        return this.impplementations.filter((implementation) => implementation.getScope() === scope);\n    }\n    getVariables(scope) {\n        return this.variables.filter((variable) => variable.getScope() === scope);\n    }\n    getCollectionVariables(scope) {\n        return this.collectionVariables.filter((variable) => variable.getScope() === scope);\n    }\n    registerBuiltIns(builtin) {\n        this.builtins.push(builtin);\n        this.types.push(builtin);\n    }\n    registerComponent(component) {\n        this.components.push(component);\n        this.types.push(component);\n    }\n    registerInterface(interfaceSymbol) {\n        this.interfaces.push(interfaceSymbol);\n        this.types.push(interfaceSymbol);\n    }\n    registerMessage(message) {\n        this.messages.push(message);\n        this.types.push(message);\n    }\n    registerProcedure(procedure) {\n        this.procedures.push(procedure);\n    }\n    registerImplementation(implementation) {\n        this.impplementations.push(implementation);\n    }\n    registerConstant(constant) {\n        this.constants.push(constant);\n    }\n    registerVariable(variable) {\n        this.variables.push(variable);\n    }\n    registerCollectionVariable(variable) {\n        this.collectionVariables.push(variable);\n    }\n    // link symbol <-> node\n    linkImplementationNode(symbol, node) {\n        this.symbolToImplementation.set(symbol, node);\n    }\n    findImplementationNode(symbol) {\n        return this.symbolToImplementation.get(symbol);\n    }\n    linkDeclarationNode(symbol, node) {\n        this.symbolToDeclaration.set(symbol, node);\n    }\n    findDeclarationNode(symbol) {\n        return this.symbolToDeclaration.get(symbol);\n    }\n    // fix types\n    fixCallNode(node, procedure) {\n        this.callToSymbol.set(node, procedure);\n    }\n    getCallProcedure(node) {\n        const result = this.callToSymbol.get(node);\n        if (result === undefined) {\n            throw new Error('Failed call node lookup.');\n        }\n        return result;\n    }\n    fixMessage(node, message) {\n        this.sendReceiveToSymbol.set(node, message);\n    }\n    getMessageForSendReceive(node) {\n        const result = this.sendReceiveToSymbol.get(node);\n        if (result === undefined) {\n            throw new Error('Failed message node lookup.');\n        }\n        return result;\n    }\n    fixExpressionNode(expression, type) {\n        this.expressionToType.set(expression, type);\n    }\n    findExpressionType(node) {\n        return this.expressionToType.get(node);\n    }\n    fixTypeNode(typeNode, type) {\n        this.typeToType.set(typeNode, type);\n    }\n    findTypeSymbol(type) {\n        return this.typeToType.get(type);\n    }\n    fixDesignatorNode(node, symbol) {\n        this.designatorToSymbol.set(node, symbol);\n    }\n    findDesignatorSymbol(node) {\n        return this.designatorToSymbol.get(node);\n    }\n    static componentSatisfiesGeneric(component, generic) {\n        if (generic.getOffered().length === 0 && generic.getRequired().length === 0) {\n            // a truly generic type. component can be anything.\n            return true;\n        }\n        return generic.canBeSubstitutedBy(component.getGenericType());\n    }\n    findConstant(identifier) {\n        return this.constants.filter((constant) => constant.getIdentifier() === identifier);\n    }\n    getConstant(identifier) {\n        const results = this.findConstant(identifier);\n        if (results.length !== 1) {\n            throw new Error(`Failed constant lookup for ${identifier}.`);\n        }\n        return results[0];\n    }\n    findBuiltIn(name) {\n        return this.builtins.filter((builtin) => builtin.getIdentifier() === name);\n    }\n    getBuiltIn(name) {\n        const results = this.findBuiltIn(name);\n        if (results.length !== 1) {\n            throw new Error(`Failed builtin lookup for ${name}.`);\n        }\n        return results[0];\n    }\n    findProcedure(identifier, scope, params, returnType, searchGlobalScope) {\n        const searchFunction = (procedure, searchScope) => {\n            return (procedure.getIdentifier() === identifier &&\n                procedure.getParameters().length === params.length &&\n                procedure.getParameters().filter((p, i) => this.isAssignable(p, params[i])).length === params.length &&\n                (returnType === undefined || procedure.getReturnType() === returnType) &&\n                procedure.getScope() === searchScope);\n        };\n        return this.findInComponent(this.procedures, searchFunction.bind(this), scope, searchGlobalScope, false);\n    }\n    isAssignable(paramA, paramB) {\n        if (paramA instanceof ComponentSymbol && paramB instanceof ComponentSymbol) {\n            return paramA.getGenericType().canBeSubstitutedBy(paramB.getGenericType());\n        }\n        return paramA === paramB;\n    }\n    findMessage(identifier, scope, params, searchGlobalScope) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.getIdentifier() === identifier &&\n                symbol.getParameters().length === params.length &&\n                symbol.getParameters().filter((p, i) => this.isAssignable(p, params[i])).length === params.length &&\n                symbol.getScope() === searchScope);\n        };\n        return this.findInComponent(this.messages, searchFunction.bind(this), scope, searchGlobalScope, false);\n    }\n    findInComponent(data, predicate, scope, searchGlobalScope, searchParents) {\n        if (!searchGlobalScope && scope instanceof GlobalScopeSymbol) {\n            return new Array();\n        }\n        const results = data.filter((element) => predicate(element, scope));\n        if (results.length > 0) {\n            return results;\n        }\n        if (scope instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!searchGlobalScope && scope.getScope() instanceof GlobalScopeSymbol) {\n            return results;\n        }\n        if (!searchParents && (scope instanceof ComponentSymbol || scope instanceof InterfaceSymbol)) {\n            if (searchGlobalScope) {\n                return this.findInComponent(data, predicate, this.globalScope, searchGlobalScope, searchParents);\n            }\n            return results;\n        }\n        return this.findInComponent(data, predicate, scope.getScope(), searchGlobalScope, searchParents);\n    }\n    findNameInScope(data, identifier, scope, searchGlobalScope, searchParents) {\n        const searchFunction = (element, searchScope) => element.getIdentifier() === identifier && element.getScope() === searchScope;\n        return this.findInComponent(data, searchFunction.bind(this), scope, searchGlobalScope, searchParents);\n    }\n    findVariable(identifier, scope, searchGlobalScope) {\n        const result = this.findNameInScope(this.variables.filter((variable) => variable.isMutable()), identifier, scope, searchGlobalScope, false);\n        if (result.length !== 0) {\n            return result;\n        }\n        return this.findNameInScope(this.variables.filter((variable) => !variable.isMutable()), identifier, scope, searchGlobalScope, true);\n    }\n    findCollectionVariable(identifier, scope, params, searchGlobalScope, searchParents) {\n        const searchFunction = (symbol, searchScope) => {\n            return (symbol.getIdentifier() === identifier &&\n                (params === undefined ||\n                    (symbol.getParameters().length === params.length &&\n                        symbol.getParameters().filter((p, i) => this.isAssignable(p, params[i])).length ===\n                            params.length)) &&\n                symbol.getScope() === searchScope);\n        };\n        return this.findInComponent(this.collectionVariables, searchFunction.bind(this), scope, searchGlobalScope, searchParents);\n    }\n    findComponent(identifier, scope, searchGlobalScope, searchParents) {\n        return this.findNameInScope(this.components, identifier, scope, searchGlobalScope, searchParents);\n    }\n    findInterface(identifier, scope, searchGlobalScope, searchParents) {\n        return this.findNameInScope(this.interfaces, identifier, scope, searchGlobalScope, searchParents);\n    }\n    findType(identifier, scope, searchGlobalScope, searchParents) {\n        const result = this.findNameInScope(this.types, identifier, scope, searchGlobalScope, searchParents);\n        if (result.length === 0) {\n            return this.constants\n                .filter((constant) => constant.getIdentifier() === identifier)\n                .map((constant) => constant.getType());\n        }\n        return result;\n    }\n    findImplementation(identifier, scope, searchGlobalScope) {\n        const searchFunction = (symbol, searchScope) => {\n            return symbol.getInterface().getIdentifier() === identifier && symbol.getScope() === searchScope;\n        };\n        return this.findInComponent(this.impplementations, searchFunction.bind(this), scope, searchGlobalScope, false);\n    }\n}\n//# sourceMappingURL=symboltable.js.map","import { CompilationSymbol } from './compilation-symbols';\nexport class CardinalitySymbol extends CompilationSymbol {\n    constructor(min, max = min) {\n        super();\n        this.min = min;\n        this.max = max;\n        if (min < 1) {\n            throw new Error('cardinality must be greater 0');\n        }\n        if (max < min) {\n            throw new Error(`min ${min} must be greater than max ${max}`);\n        }\n    }\n    getMin() {\n        return this.min;\n    }\n    getMax() {\n        return this.max;\n    }\n    hasMax() {\n        return this.max === Infinity;\n    }\n}\n//# sourceMappingURL=cardinality-symbols.js.map","import { CompilationSymbol } from './compilation-symbols';\nexport class ConstantSymbol extends CompilationSymbol {\n    constructor(identifier, type) {\n        super();\n        this.identifier = identifier;\n        this.type = type;\n    }\n    getIdentifier() {\n        return this.identifier;\n    }\n    getType() {\n        return this.type;\n    }\n}\n//# sourceMappingURL=constant-symbols.js.map","import { CompilationSymbol } from './compilation-symbols';\nexport class InterfaceDeclarationSymbol extends CompilationSymbol {\n    constructor(interfaceSymbol, cardinality) {\n        super();\n        this.interfaceSymbol = interfaceSymbol;\n        this.cardinality = cardinality;\n    }\n    getInterface() {\n        return this.interfaceSymbol;\n    }\n    getCardinality() {\n        return this.cardinality;\n    }\n}\nexport class GenericSymbol extends CompilationSymbol {\n    constructor(offered, required) {\n        super();\n        this.offered = offered;\n        this.required = required;\n        GenericSymbol.validate(this.offered, 'Offered interface defined multiple times.');\n        GenericSymbol.validate(this.required, 'Required interface defined multiple times.');\n    }\n    static validate(data, msg) {\n        const uniqueNames = new Array(...new Set(data.map((offer) => offer.getInterface().getIdentifier())));\n        if (uniqueNames.length !== data.length) {\n            // TODO better error message\n            throw new Error(msg);\n        }\n    }\n    static matchInterfaceDeclarations(genericAInterfaces, genericBInterfaces, minCompare, maxCompare) {\n        return (genericAInterfaces.filter((genericAInterface) => genericBInterfaces.find((genericBInterface) => genericBInterface.getInterface() === genericAInterface.getInterface() &&\n            minCompare(genericAInterface.getCardinality().getMin(), genericBInterface.getCardinality().getMin()) &&\n            maxCompare(genericAInterface.getCardinality().getMax(), genericBInterface.getCardinality().getMax())) !== undefined).length === genericAInterfaces.length);\n    }\n    canBeSubstitutedBy(other) {\n        return (GenericSymbol.matchInterfaceDeclarations(this.offered, other.offered, (a, b) => a >= b, (a, b) => a >= b) &&\n            GenericSymbol.matchInterfaceDeclarations(this.required, other.required, (a, b) => a <= b, (a, b) => a <= b));\n    }\n    canSubstitute(other) {\n        return other.canBeSubstitutedBy(this);\n    }\n    getOffered() {\n        return this.offered;\n    }\n    getRequired() {\n        return this.required;\n    }\n}\n//# sourceMappingURL=generic-symbols.js.map","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import { ScopedSymbol } from './scope-symbols';\nexport class ImplementationSymbol extends ScopedSymbol {\n    constructor(scope, interfaceSymbol) {\n        super(scope);\n        this.interfaceSymbol = interfaceSymbol;\n    }\n    getScope() {\n        return super.getScope();\n    }\n    getInterface() {\n        return this.interfaceSymbol;\n    }\n}\n//# sourceMappingURL=implementation-symbols.js.map","import { TypeSymbol } from './type-symbols';\nexport class ProcedureSymbol extends TypeSymbol {\n    constructor(scope, identifier, parameters, returnType) {\n        super(scope, identifier);\n        this.parameters = parameters;\n        this.returnType = returnType;\n    }\n    getParameters() {\n        return this.parameters;\n    }\n    getReturnType() {\n        return this.returnType;\n    }\n}\n//# sourceMappingURL=procedure-symbols.js.map","import { NamedScopeSymbol } from './scope-symbols';\nexport class VariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, mutable, type) {\n        super(scope, identifier);\n        this.mutable = mutable;\n        this.type = type;\n    }\n    isMutable() {\n        return this.mutable;\n    }\n    getType() {\n        return this.type;\n    }\n}\nexport class CollectionVariableSymbol extends NamedScopeSymbol {\n    constructor(scope, identifier, type, parameters) {\n        super(scope, identifier);\n        this.type = type;\n        this.parameters = parameters;\n    }\n    getType() {\n        return this.type;\n    }\n    getParameters() {\n        return this.parameters;\n    }\n}\n//# sourceMappingURL=variable-symbols.js.map","import { Visitor } from '@composita/ast';\nimport { ComponentSymbol, GenericSymbol } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { Checker } from './checker';\n// register components, single layer\nexport class ComponentRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const componentSymbol = new ComponentSymbol(this.scope, name, new GenericSymbol(node\n            .getOffers()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope)), node\n            .getRequires()\n            .map((node) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, node, this.scope))));\n        try {\n            Checker.getComponent(this.symbolTable, this.scope, name, false, false);\n            throw new Error(`Duplicate component ${name} detected,`);\n        }\n        catch (error) {\n            // all good\n        }\n        this.symbolTable.registerComponent(componentSymbol);\n        this.symbolTable.linkDeclarationNode(componentSymbol, node);\n    }\n}\n//# sourceMappingURL=register-component.js.map","import { Visitor } from '@composita/ast';\nimport { InterfaceSymbol } from '@composita/symbols';\nimport { Checker } from './checker';\nexport class InterfaceRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaceSymbol = new InterfaceSymbol(this.scope, name);\n        try {\n            Checker.getInterface(this.symbolTable, this.scope, name, false, false);\n            throw new Error(`Duplicate interface ${name} detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        this.symbolTable.registerInterface(interfaceSymbol);\n        this.symbolTable.linkDeclarationNode(interfaceSymbol, node);\n    }\n}\n//# sourceMappingURL=register-interface.js.map","import { Visitor } from '@composita/ast';\nimport { GenericComponentSymbol, GenericSymbol } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nexport class FixTypeNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitBasicType(node) {\n        const types = this.symbolTable.findType(node.getIdentifier(), this.scope, true, true);\n        if (types.length < 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, no type found.`);\n        }\n        if (types.length > 1) {\n            throw new Error(`Failed to find type for basic type: ${node.getIdentifier()}, multiple definitions found.`);\n        }\n        this.symbolTable.fixTypeNode(node, types[0]);\n    }\n    visitAnyType(node) {\n        const symbol = new GenericComponentSymbol(this.scope, new GenericSymbol(node\n            .getOffered()\n            .map((offered) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, offered, this.scope)), node\n            .getRequired()\n            .map((required) => SymbolConstruction.createInterfaceDeclarationSymbol(this.symbolTable, required, this.scope))));\n        this.symbolTable.fixTypeNode(node, symbol);\n    }\n}\n//# sourceMappingURL=fix-type-node.js.map","import { Visitor, } from '@composita/ast';\nimport { MessageSymbol } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class MessageRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(this);\n    }\n    visitProtocolTerm(node) {\n        node.getFactors().forEach((factor) => factor.accept(this));\n    }\n    visitMessageDeclaration(node) {\n        const name = node.getName().getName();\n        const paramSymbols = node.getParams().flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const type = this.symbolTable.findTypeSymbol(param.getType());\n            if (type === undefined) {\n                throw new Error(`Type lookup for message '${name}' param failed.`);\n            }\n            return param.getNames().map(() => type);\n        });\n        this.symbolTable.registerMessage(new MessageSymbol(this.scope, name, paramSymbols));\n    }\n    visitOptionalProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitGroupProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitRepeatingProtocolFactorExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitProtocolExpression(node) {\n        node.getTerms().forEach((term) => term.accept(this));\n    }\n}\n//# sourceMappingURL=register-messages.js.map","import { Visitor } from '@composita/ast';\nimport { ProcedureSymbol, VariableSymbol } from '@composita/symbols';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { Checker } from './checker';\n// register all procedures, single layer\nexport class ProcedureRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProcedure(node) {\n        const name = node.getName().getName();\n        const params = Checker.convertParamTypes(this.symbolTable, this.scope, node.getParams().map((param) => param.getParameter()));\n        let returnType = this.symbolTable.getVoidType();\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n            const foundType = this.symbolTable.findTypeSymbol(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure return type for ${name}.`);\n            }\n            returnType = foundType;\n        }\n        try {\n            Checker.getProcedureFromNode(node, this.symbolTable, this.scope, false);\n            throw new Error('Duplicate procedure detected.');\n        }\n        catch (error) {\n            // all good\n        }\n        const procedure = new ProcedureSymbol(this.scope, name, params, returnType);\n        node.getParams().forEach((param) => {\n            const innerParam = param.getParameter();\n            innerParam\n                .getNames()\n                .forEach((name) => this.symbolTable.registerVariable(new VariableSymbol(procedure, name.getName(), param.isMutable(), Checker.getTypeType(this.symbolTable, innerParam.getType()))));\n        });\n        this.symbolTable.registerProcedure(procedure);\n    }\n}\n//# sourceMappingURL=register-procedure.js.map","import { Visitor } from '@composita/ast';\nimport { ImplementationSymbol } from '@composita/symbols';\nimport { Checker } from './checker';\n// implementations, single layer\nexport class ImplementationRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        const interfaceSymbols = this.scope\n            .getGenericType()\n            .getOffered()\n            .filter((symbol) => symbol.getInterface().getIdentifier() === name)\n            .map((symbol) => symbol.getInterface());\n        if (interfaceSymbols.length !== 1) {\n            throw new Error(`Could not find interface for '${name}' implementation.`);\n        }\n        try {\n            Checker.getImplementation(this.symbolTable, this.scope, name, false);\n            throw new Error(`Duplicate '${name}' implementation detected.`);\n        }\n        catch (error) {\n            // all good\n        }\n        const implementationSymbol = new ImplementationSymbol(this.scope, interfaceSymbols[0]);\n        this.symbolTable.registerImplementation(implementationSymbol);\n        this.symbolTable.linkImplementationNode(implementationSymbol, node);\n    }\n}\n//# sourceMappingURL=register-implementation.js.map","import { Visitor, BasicDesignatorNode, LogicalOperator, PrefixOperator, FactorPrefix, } from '@composita/ast';\nimport { BuiltInTypeSymbol } from '@composita/symbols';\nimport { Checker } from './checker';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class FixExpressionNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    findType(node) {\n        const symbol = this.symbolTable.findExpressionType(node);\n        if (symbol === undefined) {\n            throw new Error(`Failed expression type lookup.`);\n        }\n        return symbol;\n    }\n    visitConstantExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n        try {\n            this.symbolTable.fixExpressionNode(node, this.findType(node.getExpression()));\n        }\n        catch (error) {\n            node.getExpression().accept(this);\n            throw new Error(error);\n        }\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        const leftType = this.findType(node.getLeft());\n        const rightType = this.findType(node.getRight());\n        try {\n            this.checkChainMatch(leftType, rightType);\n        }\n        catch (error) {\n            console.log(node);\n            throw new Error(error.message);\n        }\n        if (!(leftType instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot compare non number values.`);\n        }\n        const typeIdentifier = leftType.getIdentifier();\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n            case LogicalOperator.NotEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'BOOLEAN' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n            case LogicalOperator.Less:\n            case LogicalOperator.LessEqual:\n            case LogicalOperator.More:\n            case LogicalOperator.MoreEqual:\n                if (typeIdentifier !== 'REAL' &&\n                    typeIdentifier !== 'INTEGER' &&\n                    typeIdentifier !== 'CHARACTER' &&\n                    typeIdentifier !== 'TEXT') {\n                    throw new Error(`Cannot compare non number values.`);\n                }\n                break;\n        }\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n    }\n    visitOffersRequiresExpression(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n    }\n    visitTypeCheck(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        const type = this.findType(node.getTerm());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary + - op to non builtin type.`);\n        }\n        const typeIdentifier = type.getIdentifier();\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n            case PrefixOperator.Plus:\n                if (typeIdentifier !== 'REAL' && typeIdentifier !== 'INTEGER') {\n                    throw new Error(`Cannot apply + - to non numbers types.`);\n                }\n                break;\n        }\n        this.symbolTable.fixExpressionNode(node, this.findType(node.getTerm()));\n    }\n    checkChainMatch(left, ...right) {\n        const unique = new Array(...new Set(right));\n        if (unique.length < 1) {\n            throw new Error(`Failed right factor type lookup.`);\n        }\n        if (unique.length > 1) {\n            throw new Error(`Ambiguous right factor type lookup.`);\n        }\n        if (unique[0] !== left) {\n            throw new Error(`Factor type missmatch. Left: ${left.getIdentifier()}, Right: ${unique[0].getIdentifier()}`);\n        }\n    }\n    visitTermChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((term) => term.accept(this));\n        const type = this.findType(node.getLeft());\n        this.checkChainMatch(type, ...node.getRight().map((right) => this.findType(right.getRight())));\n        this.symbolTable.fixExpressionNode(node, type);\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n    }\n    visitFactorChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((factor) => factor.accept(this));\n        const type = this.findType(node.getLeft());\n        this.checkChainMatch(type, ...node.getRight().map((right) => this.findType(right.getRight())));\n        this.symbolTable.fixExpressionNode(node, type);\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        const type = this.findType(node.getFactor());\n        if (!(type instanceof BuiltInTypeSymbol)) {\n            throw new Error(`Cannot apply unary not op to non builtin type.`);\n        }\n        const typeIdentifier = type.getIdentifier();\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                if (typeIdentifier !== 'BOOLEAN') {\n                    throw new Error(`Cannot apply not op to non boolean types.`);\n                }\n                break;\n        }\n        this.symbolTable.fixExpressionNode(node, this.findType(node.getFactor()));\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n        this.symbolTable.fixExpressionNode(node, this.findType(node.getExpression()));\n    }\n    visitIntegerNumber(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('INTEGER'));\n    }\n    visitRealNumber(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('REAL'));\n    }\n    visitConstantCharacter(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('CHARACTER'));\n    }\n    visitText(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('TEXT'));\n    }\n    visitReceiveTest(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitInputTest(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitExistsTest(node) {\n        this.symbolTable.fixExpressionNode(node, this.symbolTable.getBuiltIn('BOOLEAN'));\n        node.getDesignator()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitFunctionCall(node) {\n        node.getArguments().forEach((expression) => expression.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope)));\n        const params = node.getArguments().map((expression) => this.findType(expression));\n        const procedure = Checker.getProcedure(node.getName().getName(), this.symbolTable, this.scope, params, undefined, true);\n        this.symbolTable.fixExpressionNode(node, procedure.getReturnType());\n        this.symbolTable.fixCallNode(node, procedure);\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            const variable = Checker.getVariable(this.symbolTable, this.scope, name, true);\n            this.symbolTable.fixExpressionNode(node, variable.getType());\n            this.symbolTable.fixDesignatorNode(node, variable);\n            return;\n        }\n        catch (error) {\n            // let's try something else\n        }\n        try {\n            const constant = Checker.getConstant(this.symbolTable, name);\n            this.symbolTable.fixExpressionNode(node, constant.getType());\n            // TODO change to constant, after fixing the symbol table\n            this.symbolTable.fixDesignatorNode(node, constant.getType());\n            return;\n        }\n        catch (error) {\n            // let's try somethign else...\n        }\n        try {\n            const interfaceSymbol = Checker.getInterface(this.symbolTable, this.scope, name, true, true);\n            this.symbolTable.fixExpressionNode(node, interfaceSymbol);\n            this.symbolTable.fixDesignatorNode(node, interfaceSymbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        try {\n            const component = Checker.getComponent(this.symbolTable, this.scope, name, true, false);\n            this.symbolTable.fixExpressionNode(node, component);\n            this.symbolTable.fixDesignatorNode(node, component);\n            return;\n        }\n        catch (error) {\n            // give it another go...\n        }\n        try {\n            const variable = Checker.getCollectionVariable(this.symbolTable, this.scope, name);\n            this.symbolTable.fixExpressionNode(node, variable.getType());\n            this.symbolTable.fixDesignatorNode(node, variable);\n            return;\n        }\n        catch (error) {\n            // one last try...\n        }\n        try {\n            const param = Checker.getProcedureParam(this.symbolTable, this.scope, name);\n            this.symbolTable.fixExpressionNode(node, param.getType());\n            this.symbolTable.fixDesignatorNode(node, param);\n            return;\n        }\n        catch (error) {\n            // giving up now..\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBasicExpressionDesignator(node) {\n        const name = node.getName().getName();\n        try {\n            const variable = Checker.getCollectionVariable(this.symbolTable, this.scope, name);\n            this.symbolTable.fixExpressionNode(node, variable.getType());\n            this.symbolTable.fixDesignatorNode(node, variable);\n            return;\n        }\n        catch (error) {\n            // one last try...\n        }\n        try {\n            const interfaceSymbol = Checker.getInterface(this.symbolTable, this.scope, name, true, true);\n            this.symbolTable.fixExpressionNode(node, interfaceSymbol);\n            this.symbolTable.fixDesignatorNode(node, interfaceSymbol);\n            return;\n        }\n        catch (error) {\n            // it must be something different...\n        }\n        throw new Error(`Failed designator type lookup for '${name}'.`);\n    }\n    visitBaseTargetDesignator(node) {\n        const base = node.getBase();\n        const target = node.getTarget();\n        target.accept(this);\n        if (base instanceof BasicDesignatorNode) {\n            // potential function call\n            const name = base.getName().getName();\n            try {\n                const procedure = Checker.getProcedure(name, this.symbolTable, this.scope, new Array(this.findType(target)), undefined, true);\n                this.symbolTable.fixExpressionNode(base, procedure);\n                this.symbolTable.fixDesignatorNode(node, procedure);\n                this.symbolTable.fixExpressionNode(node, procedure.getReturnType());\n                return;\n            }\n            catch (error) {\n                // it was not a procedure...\n            }\n        }\n        base.accept(this);\n        const baseType = this.findType(base);\n        this.symbolTable.fixExpressionNode(node, baseType);\n        this.symbolTable.fixDesignatorNode(node, baseType);\n    }\n    visitDesignatorType(node) {\n        node.getDesignator().accept(this);\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n    }\n}\n//# sourceMappingURL=fix-expression-node.js.map","import { Visitor } from '@composita/ast';\nimport { VariableSymbol } from '@composita/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nexport class ConstantListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitConstant(node) {\n        const name = node.getName().getName();\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        const expressionSymbol = this.symbolTable.findExpressionType(node.getExpression().getExpression());\n        if (expressionSymbol === undefined) {\n            throw new Error(`${name}: Unknown expression type.`);\n        }\n        this.symbolTable.registerVariable(new VariableSymbol(this.scope, name, false, expressionSymbol));\n    }\n    visitConstantList(node) {\n        node.getConstants().forEach((constant) => constant.accept(this));\n    }\n}\n//# sourceMappingURL=register-constant-list.js.map","import { Visitor } from '@composita/ast';\nimport { VariableSymbol, CollectionVariableSymbol, BuiltInTypeSymbol, } from '@composita/symbols';\nimport { Checker } from './checker';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nexport class VariableListRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitVariable(node) {\n        node.getType().accept(new FixTypeNodeVisitor(this.symbolTable, this.scope));\n        const type = this.symbolTable.findTypeSymbol(node.getType());\n        if (type === undefined) {\n            throw new Error(`${node.getNames()[0].getName()}: Unknown type.`);\n        }\n        node.getNames().forEach((name) => {\n            const identifier = name.getName();\n            if (type instanceof BuiltInTypeSymbol && type.getIdentifier() === 'TEXT') {\n                this.symbolTable.registerCollectionVariable(new CollectionVariableSymbol(this.scope, identifier, type, new Array(this.symbolTable.getBuiltIn('INTEGER'))));\n                return;\n            }\n            if (name.getParams().length === 0) {\n                this.symbolTable.registerVariable(new VariableSymbol(this.scope, identifier, true, type));\n                return;\n            }\n            this.symbolTable.registerCollectionVariable(new CollectionVariableSymbol(this.scope, identifier, type, Checker.convertParamTypes(this.symbolTable, this.scope, name.getParams())));\n        });\n    }\n    visitVariableList(node) {\n        node.getVariables().forEach((variable) => variable.accept(this));\n    }\n}\n//# sourceMappingURL=register-variable-list.js.map","import { Visitor, ComponentNode, InterfaceNode, ProcedureNode, VariableListNode, ConstantListNode, } from '@composita/ast';\nimport { ComponentSymbol } from '@composita/symbols';\nimport { ComponentRegisterVisitor } from './register-component';\nimport { InterfaceRegisterVisitor } from './register-interface';\nimport { MessageRegisterVisitor } from './register-messages';\nimport { ProcedureRegisterVisitor } from './register-procedure';\nimport { ImplementationRegisterVisitor } from './register-implementation';\nimport { Checker } from './checker';\nimport { ConstantListRegisterVisitor } from './register-constant-list';\nimport { VariableListRegisterVisitor } from './register-variable-list';\nexport class TypeRegisterVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    visitProgram(node) {\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new InterfaceRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new ComponentRegisterVisitor(this.symbolTable, this.scope)));\n        node.getInterfaces().forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n        node.getComponents().forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, this.scope)));\n    }\n    visitComponent(node) {\n        const name = node.getName().getName();\n        const components = this.symbolTable.findComponent(name, this.scope, false, false);\n        if (components.length !== 1) {\n            throw new Error(`Failed lookup for component ${name}.`);\n        }\n        node.getBody()?.accept(new TypeRegisterVisitor(this.symbolTable, components[0]));\n    }\n    visitInterface(node) {\n        const name = node.getName().getName();\n        const interfaces = this.symbolTable.findInterface(name, this.scope, false, false);\n        if (interfaces.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        node.getProtocol().accept(new MessageRegisterVisitor(this.symbolTable, interfaces[0]));\n    }\n    visitProtocol(node) {\n        node.getExpression()?.accept(new MessageRegisterVisitor(this.symbolTable, this.scope));\n    }\n    visitProcedure(node) {\n        const procedure = Checker.getProcedureFromNode(node, this.symbolTable, this.scope, false);\n        this.registerLayer(node.getDeclarations(), procedure);\n    }\n    registerLayer(declarations, currentScope, processAddtionalLayer, processAddtionalSubLayer) {\n        const components = declarations\n            .filter((declaration) => declaration instanceof ComponentNode)\n            .map((declaration) => declaration);\n        const interfaces = declarations\n            .filter((declaration) => declaration instanceof InterfaceNode)\n            .map((declaration) => declaration);\n        const procedures = declarations\n            .filter((declaration) => declaration instanceof ProcedureNode)\n            .map((declaration) => declaration);\n        const variables = declarations\n            .filter((declaration) => declaration instanceof VariableListNode)\n            .map((declaration) => declaration);\n        const constants = declarations\n            .filter((declaration) => declaration instanceof ConstantListNode)\n            .map((declaration) => declaration);\n        interfaces.forEach((declaration) => declaration.accept(new InterfaceRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((declaration) => declaration.accept(new ComponentRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((declaration) => declaration.accept(new ProcedureRegisterVisitor(this.symbolTable, currentScope)));\n        variables.forEach((declaration) => declaration.accept(new VariableListRegisterVisitor(this.symbolTable, currentScope)));\n        constants.forEach((declaration) => declaration.accept(new ConstantListRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalLayer !== undefined) {\n            processAddtionalLayer();\n        }\n        interfaces.forEach((interfaceNode) => interfaceNode.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        components.forEach((component) => component.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        procedures.forEach((procedure) => procedure.accept(new TypeRegisterVisitor(this.symbolTable, currentScope)));\n        if (processAddtionalSubLayer !== undefined) {\n            processAddtionalSubLayer(new TypeRegisterVisitor(this.symbolTable, currentScope));\n        }\n    }\n    visitImplementation(node) {\n        const name = node.getName().getName();\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Implementation must be in a component scope!');\n        }\n        const implementations = this.symbolTable.findImplementation(name, this.scope, false);\n        if (implementations.length !== 1) {\n            throw new Error(`Failed to lookup interface ${name}.`);\n        }\n        this.registerLayer(node.getDeclarations(), implementations[0]);\n    }\n    visitComponentBody(node) {\n        if (!(this.scope instanceof ComponentSymbol)) {\n            throw new Error('Component body must be a component scope!');\n        }\n        const localScope = this.scope;\n        this.registerLayer(node.getDeclarations(), localScope, () => {\n            node.getImplementations().forEach((implementation) => implementation.accept(new ImplementationRegisterVisitor(this.symbolTable, localScope)));\n        }, (visitor) => {\n            node.getImplementations().forEach((implementation) => implementation.accept(visitor));\n        });\n    }\n}\n//# sourceMappingURL=register-types.js.map","import { ProcedureSymbol, BuiltInTypeSymbol, ConstantSymbol, InterfaceDeclarationSymbol, CardinalitySymbol, VariableSymbol, } from '@composita/symbols';\nimport { TypeRegisterVisitor } from './register-types';\nexport class SymbolConstruction {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n        const bool_t = new BuiltInTypeSymbol(this.symbolTable.getGlobalScope(), 'BOOLEAN');\n        const char_t = new BuiltInTypeSymbol(this.symbolTable.getGlobalScope(), 'CHARACTER');\n        const text_t = new BuiltInTypeSymbol(this.symbolTable.getGlobalScope(), 'TEXT');\n        const int_t = new BuiltInTypeSymbol(this.symbolTable.getGlobalScope(), 'INTEGER');\n        const real_t = new BuiltInTypeSymbol(this.symbolTable.getGlobalScope(), 'REAL');\n        this.builtInTypes = new Array(bool_t, char_t, text_t, int_t, real_t);\n        this.constants = new Map([\n            ['TRUE', bool_t],\n            ['FALSE', bool_t],\n            ['PI', real_t],\n        ]);\n        this.variables = new Map([['TIME', int_t]]);\n        this.systemProcedures = new Array(\n        // propper procedures\n        ['ASSERT', [this.symbolTable.getVoidType(), new Array(bool_t)]], ['ASSERT', [this.symbolTable.getVoidType(), new Array(bool_t, int_t)]], ['HALT', [this.symbolTable.getVoidType(), new Array(int_t)]], ['INC', [this.symbolTable.getVoidType(), new Array(int_t)]], ['INC', [this.symbolTable.getVoidType(), new Array(int_t, int_t)]], ['DEC', [this.symbolTable.getVoidType(), new Array(int_t)]], ['DEC', [this.symbolTable.getVoidType(), new Array(int_t, int_t)]], ['PASSIVATE', [this.symbolTable.getVoidType(), new Array(int_t)]], ['WRITE', [this.symbolTable.getVoidType(), new Array(text_t)]], ['WRITE', [this.symbolTable.getVoidType(), new Array(int_t)]], ['WRITE', [this.symbolTable.getVoidType(), new Array(real_t)]], ['WRITE', [this.symbolTable.getVoidType(), new Array(char_t)]], ['WRITEHEX', [this.symbolTable.getVoidType(), new Array(int_t)]], ['WRITELINE', [this.symbolTable.getVoidType(), new Array()]], \n        // function procedures\n        ['COUNT', [int_t, new Array(this.symbolTable.getAnyRequiredInterfaceType())]], ['LENGTH', [int_t, new Array(text_t)]], ['SQRT', [real_t, new Array(real_t)]], ['SIN', [real_t, new Array(real_t)]], ['COS', [real_t, new Array(real_t)]], ['TAN', [real_t, new Array(real_t)]], ['ARCSIN', [real_t, new Array(real_t)]], ['ARCCOS', [real_t, new Array(real_t)]], ['ARCTAN', [real_t, new Array(real_t)]], ['RANDOM', [int_t, new Array(int_t, int_t)]], ['MIN', [real_t, new Array(real_t)]], ['MIN', [int_t, new Array(int_t)]], ['MAX', [real_t, new Array(real_t)]], ['MAX', [int_t, new Array(int_t)]], \n        // type conversion\n        ['CHARACTER', [char_t, new Array(int_t)]], ['INTEGER', [int_t, new Array(real_t)]], ['REAL', [real_t, new Array(int_t)]], ['TEXT', [text_t, new Array(char_t)]]);\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolConstruction(symbolTable, scope);\n        construction.register(program);\n    }\n    register(program) {\n        this.registerBuiltIns();\n        program.accept(new TypeRegisterVisitor(this.symbolTable, this.programScope));\n    }\n    registerBuiltIns() {\n        this.registerBuiltInTypes();\n        this.registerBuiltInProcedures();\n        this.registerBuiltInConstants();\n        this.registerBuiltInVariables();\n    }\n    registerBuiltInTypes() {\n        this.builtInTypes.forEach((value) => this.symbolTable.registerBuiltIns(value));\n    }\n    registerBuiltInProcedures() {\n        this.systemProcedures.forEach((value) => {\n            const procedure = new ProcedureSymbol(this.symbolTable.getGlobalScope(), value[0], value[1][1], value[1][0]);\n            this.symbolTable.registerProcedure(procedure);\n        });\n    }\n    registerBuiltInConstants() {\n        this.constants.forEach((value, key) => this.symbolTable.registerConstant(new ConstantSymbol(key, value)));\n    }\n    registerBuiltInVariables() {\n        this.variables.forEach((value, key) => this.symbolTable.registerVariable(new VariableSymbol(this.symbolTable.getGlobalScope(), key, false, value)));\n    }\n    static createInterfaceDeclarationSymbol(symbolTable, node, scope) {\n        const name = node.getName().getName();\n        const interfaces = symbolTable.findInterface(name, scope, true, true);\n        if (interfaces.length === 0) {\n            throw new Error(`Interface ${name} not defined.`);\n        }\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} multiple times defined.`);\n        }\n        const cardinality = node.getCardinality();\n        return new InterfaceDeclarationSymbol(interfaces[0], new CardinalitySymbol(cardinality?.getMin() ?? 1, cardinality?.getMax()));\n    }\n}\n//# sourceMappingURL=symbol-construction.js.map","import { Visitor, BasicDesignatorNode, BasicExpressionDesignatorNode, } from '@composita/ast';\nimport { BlockScopeSymbol, VariableSymbol, } from '@composita/symbols';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nimport { Checker } from './checker';\nexport class FixStatementNodeVisitor extends Visitor {\n    constructor(symbolTable, scope) {\n        super();\n        this.symbolTable = symbolTable;\n        this.scope = scope;\n    }\n    findCollectionVariable(node) {\n        if (node instanceof BasicExpressionDesignatorNode || node instanceof BasicDesignatorNode) {\n            const name = node.getName().getName();\n            const symbol = this.symbolTable.findCollectionVariable(name, this.scope, undefined, false, true);\n            if (symbol.length > 1) {\n                throw new Error(`Found ${name} multiple times.`);\n            }\n            if (symbol.length < 1) {\n                throw new Error(`Failed to find ${name}.`);\n            }\n            return symbol[0];\n        }\n        // TODO\n        throw new Error('Not implemented yet.');\n    }\n    visitProgram(node) {\n        node.getComponents().forEach((component) => component.accept(this));\n    }\n    visitComponent(node) {\n        const component = Checker.getComponent(this.symbolTable, this.scope, node.getName().getName(), true, true);\n        node.getBody()?.accept(new FixStatementNodeVisitor(this.symbolTable, component));\n    }\n    visitComponentBody(node) {\n        node.getDeclarations().forEach((declaration) => declaration.accept(this));\n        node.getImplementations().forEach((implementation) => implementation.accept(this));\n        node.getBeginBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getActivityBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n        node.getFinallyBlock()?.accept(new FixStatementNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitImplementation(node) {\n        const implementation = Checker.getImplementation(this.symbolTable, this.scope, node.getName().getName(), true);\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, implementation)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, implementation));\n    }\n    visitProcedure(node) {\n        const procedure = Checker.getProcedureFromNode(node, this.symbolTable, this.scope, true);\n        node.getDeclarations().forEach((declaration) => declaration.accept(new FixStatementNodeVisitor(this.symbolTable, procedure)));\n        node.getStatements()?.accept(new FixStatementNodeVisitor(this.symbolTable, procedure));\n    }\n    visitStatementSequence(node) {\n        node.getStatements().forEach((statement) => statement.accept(new FixStatementNodeVisitor(this.symbolTable, new BlockScopeSymbol(this.scope))));\n    }\n    visitProcedureCall(node) {\n        const params = node.getParams().map((param) => {\n            param.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n            const expression = this.symbolTable.findExpressionType(param);\n            if (expression === undefined) {\n                throw new Error('Unkown expression type.');\n            }\n            return expression;\n        });\n        const procedure = Checker.getProcedure(node.getName().getName(), this.symbolTable, this.scope, params, undefined, true);\n        this.symbolTable.fixCallNode(node, procedure);\n    }\n    visitAssignment(node) {\n        // TODO check if designator is mutable\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitNew(node) {\n        // TODO check if valid\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getArgs().forEach((argument) => argument.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope)));\n    }\n    visitConnect(node) {\n        // TODO check if connection is even possible\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitDisconnect(node) {\n        // TODO validity check\n        node.getWhat().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitSend(node) {\n        this.symbolTable.fixMessage(node, Checker.getMessage(node.getFrom(), node.getTarget().getName(), node.getArgs(), this.symbolTable, this.scope));\n    }\n    visitReceive(node) {\n        this.symbolTable.fixMessage(node, Checker.getMessage(node.getFrom(), node.getReceiver().getName(), node.getTargets(), this.symbolTable, this.scope));\n    }\n    visitDelete(node) {\n        node.getTarget().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitMove(node) {\n        node.getFrom().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitAwait(node) {\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(new FixExpressionNodeVisitor(this.symbolTable, this.scope));\n    }\n    visitIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n        node.getElseIfs().forEach((elseif) => elseif.accept(new FixStatementNodeVisitor(this.symbolTable, newScope)));\n        node.getElse()?.accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitElseIf(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getThen().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitWhile(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitRepeat(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpresssion().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBody().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n    }\n    visitFor(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getExpression().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const designator = node.getDesignator();\n        if (!(designator instanceof BasicDesignatorNode)) {\n            throw new Error('Only basic designators currently supported.');\n        }\n        node.getDesignator().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getTo().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getBy()?.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        node.getStatements().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitForeach(node) {\n        const newScope = new BlockScopeSymbol(this.scope);\n        node.getOf().accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        const variable = this.findCollectionVariable(node.getOf());\n        if (variable.getParameters().length < node.getDesignators().length) {\n            throw new Error('Foreach designator match error.');\n        }\n        node.getDesignators().forEach((designator, index) => {\n            if (!(designator instanceof BasicDesignatorNode)) {\n                throw new Error('Only basic designators supported.');\n            }\n            this.symbolTable.registerVariable(new VariableSymbol(this.scope, designator.getName().getName(), true, variable.getParameters()[index]));\n            designator.accept(new FixExpressionNodeVisitor(this.symbolTable, newScope));\n        });\n        node.getBody().accept(new FixStatementNodeVisitor(this.symbolTable, newScope));\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n}\n//# sourceMappingURL=fix-statement-node.js.map","import { VariableListRegisterVisitor } from './register-variable-list';\nimport { FixStatementNodeVisitor } from './fix-statement-node';\nexport class SymbolFix {\n    constructor(symbolTable, programScope) {\n        this.symbolTable = symbolTable;\n        this.programScope = programScope;\n    }\n    static run(symbolTable, program, scope) {\n        const construction = new SymbolFix(symbolTable, scope);\n        construction.fix(program);\n    }\n    fix(node) {\n        node.accept(new FixStatementNodeVisitor(this.symbolTable, this.programScope));\n        node.accept(new VariableListRegisterVisitor(this.symbolTable, this.programScope));\n    }\n}\n//# sourceMappingURL=symbol-fix.js.map","import { SymbolTable, ProgramScopeSymbol, ComponentSymbol, ProcedureSymbol, InterfaceSymbol, ImplementationSymbol, NamedScopeSymbol, GlobalScopeSymbol, } from '@composita/symbols';\nimport { SymbolConstruction } from './symbol-construction';\nimport { SymbolFix } from './symbol-fix';\nimport { FixTypeNodeVisitor } from './fix-type-node';\nimport { FixExpressionNodeVisitor } from './fix-expression-node';\nexport class Checker {\n    static checkNotConstantSymbol(name, symbolTable) {\n        try {\n            symbolTable.getConstant(name);\n        }\n        catch (errror) {\n            // all good.\n        }\n    }\n    static getComponent(symbolTable, scope, name, searchGlobalScope, searchParents) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const components = symbolTable.findComponent(name, scope, searchGlobalScope, searchParents);\n        if (components.length > 1) {\n            throw new Error(`Component ${name} defined ${components.length} times in the same scope.`);\n        }\n        if (components.length < 1) {\n            throw new Error(`No component ${name} found.`);\n        }\n        return components[0];\n    }\n    static getInterface(symbolTable, scope, name, searchGlobalScope, searchParents) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const interfaces = symbolTable.findInterface(name, scope, searchGlobalScope, searchParents);\n        if (interfaces.length > 1) {\n            throw new Error(`Interface ${name} defined ${interfaces.length} times in the same scope.`);\n        }\n        if (interfaces.length < 1) {\n            throw new Error(`No interface ${name} found.`);\n        }\n        return interfaces[0];\n    }\n    static getImplementation(symbolTable, scope, name, searchGlobalScope) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        if (!(scope instanceof ComponentSymbol)) {\n            throw new Error(`Failed to locate ${name}, must be inside a component.`);\n        }\n        const implementations = symbolTable.findImplementation(name, scope, searchGlobalScope);\n        if (implementations.length > 1) {\n            throw new Error(`Implementaiton ${name} defined ${implementations.length} times in the same scope.`);\n        }\n        if (implementations.length < 1) {\n            throw new Error(`No implementation ${name} found.`);\n        }\n        return implementations[0];\n    }\n    static getConstant(symbolTable, name) {\n        const constant = symbolTable.findConstant(name);\n        if (constant.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (constant.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return constant[0];\n    }\n    static getVariable(symbolTable, scope, name, globalScope) {\n        const symbol = symbolTable.findVariable(name, scope, globalScope);\n        if (symbol.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (symbol.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return symbol[0];\n    }\n    static getCollectionVariable(symbolTable, scope, name) {\n        const symbol = symbolTable.findCollectionVariable(name, scope, undefined, false, true);\n        if (symbol.length > 1) {\n            throw new Error(`Found ${name} multiple times.`);\n        }\n        if (symbol.length < 1) {\n            throw new Error(`Failed to find ${name}.`);\n        }\n        return symbol[0];\n    }\n    static getProcedureParam(symbolTable, scope, name) {\n        while (!(scope instanceof ProcedureSymbol) && scope instanceof NamedScopeSymbol) {\n            // go up to procedure.\n            scope = scope.getScope();\n        }\n        if (!(scope instanceof ProcedureSymbol)) {\n            throw new Error(`${name} is not a procedure parameter.`);\n        }\n        const symbol = this.getVariable(symbolTable, scope, name, false);\n        if (!(symbol.getScope() instanceof ProcedureSymbol)) {\n            throw new Error(`Found ${name} outside procedure param.`);\n        }\n        return symbol;\n    }\n    static getProcedure(name, symbolTable, scope, params, returnType, searchGlobalScope) {\n        this.checkNotConstantSymbol(name, symbolTable);\n        const procedures = symbolTable.findProcedure(name, scope, params, returnType, searchGlobalScope);\n        if (procedures.length > 1) {\n            throw new Error(`Procedure ${name} defined ${procedures.length} times in the same scope.`);\n        }\n        if (procedures.length < 1) {\n            throw new Error(`No procedure ${name} found.`);\n        }\n        return procedures[0];\n    }\n    static getProcedureFromNode(node, symbolTable, scope, searchGlobalScope) {\n        const name = node.getName().getName();\n        this.checkNotConstantSymbol(name, symbolTable);\n        let returnType = symbolTable.getVoidType();\n        const returnTypeNode = node.getType();\n        if (returnTypeNode !== undefined) {\n            returnTypeNode.accept(new FixTypeNodeVisitor(symbolTable, scope));\n            const foundType = symbolTable.findTypeSymbol(returnTypeNode);\n            if (foundType === undefined) {\n                throw new Error(`Failed to find procedure ${name} return type.`);\n            }\n            returnType = foundType;\n        }\n        const paramTypes = Checker.convertParamTypes(symbolTable, scope, node.getParams().map((param) => param.getParameter()));\n        return this.getProcedure(name, symbolTable, scope, paramTypes, returnType, searchGlobalScope);\n    }\n    static getTypeType(symbolTable, node) {\n        const type = symbolTable.findTypeSymbol(node);\n        if (type === undefined) {\n            throw new Error(`Type node type lookup failed.`);\n        }\n        return type;\n    }\n    static convertParamTypes(symbolTable, scope, params) {\n        return params.flatMap((param) => {\n            param.getType().accept(new FixTypeNodeVisitor(symbolTable, scope));\n            const type = this.getTypeType(symbolTable, param.getType());\n            return param.getNames().map(() => type);\n        });\n    }\n    static getMessageInImplentation(name, symbolTable, scope, args) {\n        while (!(scope instanceof ImplementationSymbol)) {\n            if (scope instanceof GlobalScopeSymbol) {\n                throw new Error(`Failed message lookup for ${name}.`);\n            }\n            scope = scope.getScope();\n        }\n        const messages = symbolTable.findMessage(name, scope.getInterface(), args, false);\n        if (messages.length > 1) {\n            throw new Error(`Ambiguous message lookup for ${name}.`);\n        }\n        if (messages.length < 1) {\n            throw new Error(`Message lookup failed for ${name}.`);\n        }\n        return messages[0];\n    }\n    static getMessage(interfaceTarget, name, args, symbolTable, scope) {\n        const argTypes = args.map((argument) => {\n            argument.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n            const type = symbolTable.findExpressionType(argument);\n            if (type === undefined) {\n                throw new Error('Failed argument type lookup.');\n            }\n            return type;\n        });\n        interfaceTarget?.accept(new FixExpressionNodeVisitor(symbolTable, scope));\n        if (interfaceTarget !== undefined) {\n            const type = symbolTable.findExpressionType(interfaceTarget);\n            const messages = new Array();\n            if (type instanceof ComponentSymbol) {\n                messages.push(...type\n                    .getGenericType()\n                    .getOffered()\n                    .map((offer) => offer.getInterface())\n                    .flatMap((potentialInterface) => symbolTable.findMessage(name, potentialInterface, argTypes, false)));\n            }\n            else if (type instanceof InterfaceSymbol) {\n                messages.push(...symbolTable.findMessage(name, type, argTypes, false));\n            }\n            else {\n                throw new Error(`Failed interface lookup for ${name}.`);\n            }\n            if (messages.length > 1) {\n                throw new Error(`Ambigious message lookup for ${name}.`);\n            }\n            if (messages.length < 1) {\n                console.log(type);\n                console.log(argTypes);\n                throw new Error(`Message lookup failed for ${name}.`);\n            }\n            return messages[0];\n        }\n        return this.getMessageInImplentation(name, symbolTable, scope, argTypes);\n    }\n    check(uri, ast) {\n        const symbolTable = new SymbolTable();\n        const programScope = new ProgramScopeSymbol(symbolTable.getGlobalScope(), uri);\n        SymbolConstruction.run(symbolTable, ast, programScope);\n        SymbolFix.run(symbolTable, ast, programScope);\n        return symbolTable;\n    }\n}\n//# sourceMappingURL=checker.js.map","import { Instruction, OpCode, SystemCallValue, IntegerValue, TextValue, CharacterValue, BooleanValue, JumpOffset, Label, FloatValue, } from '@composita/il';\nexport class ILAssembler {\n    constructor() {\n        this.targets = new Map();\n        this.code = new Array();\n    }\n    complete() {\n        this.fixLabels();\n        return this.code;\n    }\n    createLabel() {\n        return new Label();\n    }\n    setLabel(label) {\n        this.targets.set(label, this.code.length);\n    }\n    fixLabels() {\n        this.code = this.code.map((instruction, source) => {\n            const operands = instruction.getOperands();\n            if (operands.length === 1 && operands[0] instanceof Label) {\n                const target = this.targets.get(operands[0]);\n                if (target === undefined) {\n                    throw new Error('Unknown label.');\n                }\n                const delta = target - source - 1; // -1 since we're alredy on the next instruction.\n                return new Instruction(instruction.getOpCode(), new JumpOffset(delta));\n            }\n            return instruction;\n        });\n    }\n    emitLoadInteger(n) {\n        this.emit(OpCode.LoadConstantInteger, new IntegerValue(n));\n    }\n    emitLoadFloat(n) {\n        this.emit(OpCode.LoadConstantFloat, new FloatValue(n));\n    }\n    emitLoadCharacter(n) {\n        this.emit(OpCode.LoadConstantCharacter, new CharacterValue(n));\n    }\n    emitLoadText(n) {\n        this.emit(OpCode.LoadConstantText, new TextValue(n));\n    }\n    emitLoadBoolean(n) {\n        this.emit(OpCode.LoadConstantBoolean, new BooleanValue(n));\n    }\n    emitSysCall(...operands) {\n        this.emit(OpCode.SysCall, ...operands.map((operand) => new SystemCallValue(operand)));\n    }\n    emit(opCde, ...operands) {\n        this.code.push(new Instruction(opCde, ...operands));\n    }\n}\n//# sourceMappingURL=il-assembler.js.map","import { Visitor, LogicalOperator, PrefixOperator, InfixTermOperator, FactorPrefix, InfixFactorOperator, NameNode, } from '@composita/ast';\nimport { OpCode, SystemCall } from '@composita/il';\nimport { ComponentSymbol, ProcedureSymbol, BuiltInTypeSymbol, VariableSymbol, InterfaceSymbol, CollectionVariableSymbol, } from '@composita/symbols';\nimport { ILAssembler } from './il-assembler';\nexport class CodeGeneratorVisitor extends Visitor {\n    constructor(symbols, scope, metadata) {\n        super();\n        this.symbols = symbols;\n        this.scope = scope;\n        this.metadata = metadata;\n        this.assembler = new ILAssembler();\n    }\n    getInstructions() {\n        return this.assembler.complete();\n    }\n    visitBasicDesignator(node) {\n        const name = node.getName().getName();\n        const symbol = this.symbols.findDesignatorSymbol(node);\n        if (symbol instanceof BuiltInTypeSymbol && symbol.getScope() === this.symbols.getGlobalScope()) {\n            switch (name) {\n                case 'FALSE':\n                    this.assembler.emitLoadBoolean(false);\n                    return;\n                case 'TRUE':\n                    this.assembler.emitLoadBoolean(true);\n                    return;\n                case 'PI':\n                    this.assembler.emitLoadFloat(Math.PI);\n                    return;\n            }\n        }\n        if (symbol instanceof VariableSymbol) {\n            const scope = symbol.getScope();\n            if (scope instanceof ComponentSymbol) {\n                // TODO, optimize\n                const descriptor = this.metadata.findComponent(scope);\n                const index = this.metadata.findVariable(symbol);\n                this.assembler.emit(OpCode.LoadVariable, descriptor.loadField(index));\n                return;\n            }\n            throw Error(`Global variables not yet supported.`);\n        }\n        if (symbol instanceof InterfaceSymbol) {\n            // TODO\n            console.log(`InterfaceSymbol not yet supported.`);\n            return;\n        }\n        if (symbol instanceof CollectionVariableSymbol) {\n            // TODO\n            console.log(`CollectionVariableSymbol not yet supported.`);\n            return;\n        }\n        console.dir(symbol, { depth: null });\n        throw Error(`Unsupported BasicDesignatorNode ${name}`);\n        // TODO\n    }\n    visitBaseTargetDesignator(node) {\n        const symbol = this.symbols.findDesignatorSymbol(node);\n        if (symbol === undefined) {\n            throw new Error(`Failed base target designator node lookup.`);\n        }\n        node.getTarget().accept(this);\n        if (symbol instanceof ProcedureSymbol) {\n            this.handleCall(symbol);\n            return;\n        }\n        node.getBase().accept(this);\n        // TODO\n    }\n    visitAttribute(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OpCode.AcquireShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OpCode.AcquireExclusive);\n                break;\n        }\n    }\n    handleLockRelease(node) {\n        switch (node.getName().getName()) {\n            case 'SHARED':\n                this.assembler.emit(OpCode.ReleaseShared);\n                break;\n            case 'EXCLUSIVE':\n                this.assembler.emit(OpCode.ReleaseExclusive);\n                break;\n        }\n    }\n    visitStatementSequence(node) {\n        node.getAttributes().forEach((attribute) => attribute.accept(this));\n        node.getStatements().forEach((statement) => statement.accept(this));\n        node.getAttributes().forEach((attribute) => this.handleLockRelease(attribute));\n    }\n    handleSystemCall(procedure) {\n        const name = procedure.getIdentifier();\n        if (procedure.getScope() !== this.symbols.getGlobalScope()) {\n            return false;\n        }\n        if (procedure.getParameters().length === 0) {\n            switch (name) {\n                case 'WRITELINE':\n                    this.assembler.emitSysCall(SystemCall.WriteLine);\n                    return true;\n            }\n        }\n        if (procedure.getParameters().length === 1) {\n            switch (name) {\n                case 'ASSERT':\n                    this.assembler.emitSysCall(SystemCall.Assert1);\n                    return true;\n                case 'HALT':\n                    this.assembler.emitSysCall(SystemCall.Halt);\n                    return true;\n                case 'INC':\n                    this.assembler.emitSysCall(SystemCall.Inc1);\n                    return true;\n                case 'DEC':\n                    this.assembler.emitSysCall(SystemCall.Inc2);\n                    return true;\n                case 'PASSIVATE':\n                    this.assembler.emitSysCall(SystemCall.Passivate);\n                    return true;\n                case 'WRITE':\n                    this.assembler.emitSysCall(SystemCall.Write);\n                    return true;\n                case 'WRITEHEX':\n                    this.assembler.emitSysCall(SystemCall.WriteHex);\n                    return true;\n                case 'COUNT':\n                    this.assembler.emitSysCall(SystemCall.Count);\n                    return true;\n                case 'LENGTH':\n                    this.assembler.emitSysCall(SystemCall.Length);\n                    return true;\n                case 'SQRT':\n                    this.assembler.emitSysCall(SystemCall.Sqrt);\n                    return true;\n                case 'SIN':\n                    this.assembler.emitSysCall(SystemCall.Sin);\n                    return true;\n                case 'COS':\n                    this.assembler.emitSysCall(SystemCall.Cos);\n                    return true;\n                case 'TAN':\n                    this.assembler.emitSysCall(SystemCall.Tan);\n                    return true;\n                case 'ARCSIN':\n                    this.assembler.emitSysCall(SystemCall.ArcSin);\n                    return true;\n                case 'ARCCOS':\n                    this.assembler.emitSysCall(SystemCall.ArcCos);\n                    return true;\n                case 'ARCTAN':\n                    this.assembler.emitSysCall(SystemCall.ArcTan);\n                    return true;\n                case 'MIN':\n                    this.assembler.emitSysCall(SystemCall.Min);\n                    return true;\n                case 'MAX':\n                    this.assembler.emitSysCall(SystemCall.Max);\n                    return true;\n                case 'CHARACTER':\n                    this.assembler.emitSysCall(SystemCall.ToCharacter);\n                    return true;\n                case 'INTEGER':\n                    this.assembler.emitSysCall(SystemCall.ToInteger);\n                    return true;\n                case 'REAL':\n                    this.assembler.emitSysCall(SystemCall.ToReal);\n                    return true;\n                case 'TEXT':\n                    this.assembler.emitSysCall(SystemCall.ToText);\n                    return true;\n            }\n        }\n        if (procedure.getParameters().length === 2) {\n            switch (name) {\n                case 'ASSERT':\n                    this.assembler.emitSysCall(SystemCall.Assert2);\n                    return true;\n                case 'INC':\n                    this.assembler.emitSysCall(SystemCall.Inc2);\n                    return true;\n                case 'DEC':\n                    this.assembler.emitSysCall(SystemCall.Dec2);\n                    return true;\n                case 'RANDOM':\n                    this.assembler.emitSysCall(SystemCall.Random);\n                    return true;\n            }\n        }\n        return false;\n    }\n    handleCall(procedure) {\n        if (this.handleSystemCall(procedure)) {\n            return;\n        }\n        this.assembler.emit(OpCode.ProcedureCall, this.metadata.findProcedure(procedure));\n    }\n    visitProcedureCall(node) {\n        node.getParams().forEach((param) => {\n            param.accept(this);\n        });\n        this.handleCall(this.symbols.getCallProcedure(node));\n    }\n    visitAssignment(node) {\n        node.getDesignator().accept(this);\n        node.getExpression().accept(this);\n        this.assembler.emit(OpCode.StoreVariable);\n    }\n    visitNew(node) {\n        node.getDesignator().accept(this);\n        node.getArgs().forEach((arg) => arg.accept(this));\n        this.assembler.emit(OpCode.New);\n    }\n    visitConnect(node) {\n        node.getWhat().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OpCode.Connect);\n    }\n    visitDisconnect(node) {\n        node.getWhat().accept(this);\n        this.assembler.emit(OpCode.Disconnect);\n    }\n    visitSend(node) {\n        // TODO\n        node.getArgs().forEach((arg) => arg.accept(this));\n        node.getFrom()?.accept(this) ?? this.assembler.emit(OpCode.LoadThis);\n        this.assembler.emit(OpCode.Send);\n    }\n    visitReceive(node) {\n        // TODO\n        node.getTargets().forEach((arg) => arg.accept(this));\n        node.getFrom()?.accept(this) ?? this.assembler.emit(OpCode.LoadThis);\n        this.assembler.emit(OpCode.Receive);\n    }\n    visitDelete(node) {\n        node.getTarget().accept(this);\n        this.assembler.emit(OpCode.Delete);\n    }\n    visitMove(node) {\n        node.getFrom().accept(this);\n        node.getTo().accept(this);\n        this.assembler.emit(OpCode.Move);\n    }\n    visitAwait(node) {\n        const startAwait = this.assembler.createLabel();\n        const endAwait = this.assembler.createLabel();\n        this.assembler.setLabel(startAwait);\n        node.getExpression().accept(this);\n        this.assembler.emit(OpCode.BranchFalse, endAwait);\n        this.assembler.emit(OpCode.Branch, startAwait);\n        this.assembler.setLabel(endAwait);\n    }\n    visitReturn(node) {\n        node.getExpression()?.accept(this);\n        this.assembler.emit(OpCode.Return);\n    }\n    visitIf(node) {\n        const endIfLabel = this.assembler.createLabel();\n        const elseIfLabels = node.getElseIfs().map(() => this.assembler.createLabel());\n        const elseLabel = this.assembler.createLabel();\n        node.getExpression().accept(this);\n        if (node.getElseIfs().length > 0) {\n            this.assembler.emit(OpCode.BranchFalse, elseIfLabels[0]);\n            node.getThen().accept(this);\n            node.getElseIfs().forEach((elseIf, i) => {\n                this.assembler.emit(OpCode.Branch, endIfLabel);\n                this.assembler.setLabel(elseIfLabels[i]);\n                elseIf.getExpression().accept(this);\n                this.assembler.emit(OpCode.BranchFalse, i + 1 < node.getElseIfs().length\n                    ? elseIfLabels[i + 1]\n                    : node.getElse() !== undefined\n                        ? elseLabel\n                        : endIfLabel);\n                elseIf.getThen().accept(this);\n            });\n        }\n        if (node.getElse() !== undefined) {\n            this.assembler.emit(OpCode.BranchFalse, elseLabel);\n            node.getThen().accept(this);\n            this.assembler.emit(OpCode.Branch, endIfLabel);\n            this.assembler.setLabel(elseLabel);\n            node.getElse()?.accept(this);\n        }\n        if (node.getElseIfs().length === 0 && node.getElse() === undefined) {\n            this.assembler.emit(OpCode.BranchFalse, endIfLabel);\n            node.getThen().accept(this);\n        }\n        this.assembler.setLabel(endIfLabel);\n    }\n    visitWhile(node) {\n        const conditionLabel = this.assembler.createLabel();\n        const endWhile = this.assembler.createLabel();\n        this.assembler.setLabel(conditionLabel);\n        node.getExpresssion().accept(this);\n        this.assembler.emit(OpCode.BranchFalse, endWhile);\n        node.getBody().accept(this);\n        this.assembler.emit(OpCode.Branch, conditionLabel);\n        this.assembler.setLabel(endWhile);\n    }\n    visitRepeat(node) {\n        const repeatStart = this.assembler.createLabel();\n        const repeatEnd = this.assembler.createLabel();\n        this.assembler.setLabel(repeatStart);\n        node.getBody().accept(this);\n        node.getExpresssion().accept(this);\n        this.assembler.emit(OpCode.BranchFalse, repeatEnd);\n        this.assembler.emit(OpCode.Branch, repeatStart);\n        this.assembler.setLabel(repeatEnd);\n    }\n    visitFor(node) {\n        // TODO\n        node.getDesignator().accept(this);\n        node.getExpression().accept(this);\n        node.getTo().accept(this);\n        node.getBy()?.accept(this);\n        node.getStatements().accept(this);\n    }\n    visitForeach(node) {\n        // TODO\n        node.getDesignators().forEach((designator) => designator.accept(this));\n        node.getOf().accept(this);\n        node.getBody().accept(this);\n    }\n    visitStatementBlock(node) {\n        node.getStatements().accept(this);\n    }\n    // EXPRESSIONS:\n    visitUnaryExpression(node) {\n        node.getExpression().accept(this);\n    }\n    visitBinaryExpression(node) {\n        node.getLeft().accept(this);\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case LogicalOperator.Equal:\n                this.assembler.emit(OpCode.Equal);\n                break;\n            case LogicalOperator.Less:\n                this.assembler.emit(OpCode.Less);\n                break;\n            case LogicalOperator.LessEqual:\n                this.assembler.emit(OpCode.LessEqual);\n                break;\n            case LogicalOperator.More:\n                this.assembler.emit(OpCode.Greater);\n                break;\n            case LogicalOperator.MoreEqual:\n                this.assembler.emit(OpCode.GreaterEqual);\n                break;\n            case LogicalOperator.NotEqual:\n                this.assembler.emit(OpCode.NotEqual);\n                break;\n        }\n    }\n    // TODO\n    //visitOffersRequiresExpression(_node: OffersRequiresExpressionNode): void {\n    //}\n    visitTypeCheck(node) {\n        node.getDesignator().accept(this);\n        node.getType().accept(this);\n        this.assembler.emit(OpCode.IsType);\n    }\n    visitUnaryTermNode(node) {\n        node.getTerm().accept(this);\n        switch (node.getOp()) {\n            case PrefixOperator.Minus:\n                this.assembler.emit(OpCode.Negate);\n        }\n    }\n    visitTermChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightTerm(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixTermOperator.Minus:\n                this.assembler.emit(OpCode.Subtract);\n                break;\n            case InfixTermOperator.Or:\n                this.assembler.emit(OpCode.LogicOr);\n                break;\n            case InfixTermOperator.Plus:\n                this.assembler.emit(OpCode.Add);\n                break;\n        }\n    }\n    visitFactorChain(node) {\n        node.getLeft().accept(this);\n        node.getRight().forEach((right) => right.accept(this));\n    }\n    visitRightFactor(node) {\n        node.getRight().accept(this);\n        switch (node.getOp()) {\n            case InfixFactorOperator.AndText:\n                this.assembler.emit(OpCode.Add);\n                break;\n            case InfixFactorOperator.Div:\n            case InfixFactorOperator.DivText:\n                this.assembler.emit(OpCode.Divide);\n                break;\n            case InfixFactorOperator.Times:\n                this.assembler.emit(OpCode.Multiply);\n                break;\n            case InfixFactorOperator.ModText:\n                this.assembler.emit(OpCode.Modulo);\n                break;\n        }\n    }\n    visitUnaryFactor(node) {\n        node.getFactor().accept(this);\n        switch (node.getPrefix()) {\n            case FactorPrefix.Not:\n                this.assembler.emit(OpCode.Not);\n        }\n    }\n    visitExpressionFactor(node) {\n        node.getExpression().accept(this);\n    }\n    visitIntegerNumber(node) {\n        this.assembler.emitLoadInteger(node.getValue());\n    }\n    visitRealNumber(node) {\n        this.assembler.emitLoadFloat(node.getValue());\n    }\n    visitConstantCharacter(node) {\n        this.assembler.emitLoadCharacter(node.getCharacter());\n    }\n    visitText(node) {\n        this.assembler.emitLoadText(node.getText());\n    }\n    visitReceiveTest(node) {\n        node.getDesignator()?.accept(this);\n        const pattern = node.getPattern();\n        // TODO\n        if (pattern instanceof NameNode) {\n            //this.symbols.findMessage(pattern.getName(), this.)\n        }\n        this.assembler.emit(OpCode.CheckReceive);\n    }\n    // TODO\n    //visitInputTest(node: InputTestNode): void {\n    //    this.assembler.emit(OpCode.CheckInput);\n    //}\n    //visitExistsTest(node: ExistsTestNode): void {\n    //}\n    visitFunctionCall(node) {\n        node.getArguments().forEach((arg) => arg.accept(this));\n        this.handleCall(this.symbols.getCallProcedure(node));\n    }\n}\nexport class ComponentGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitComponentBody(node) {\n        const descriptor = this.metadata.findComponent(this.symbol);\n        let visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getBeginBlock()?.accept(visitor);\n        descriptor\n            .getBeginCode()\n            .getInstructions()\n            .push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getActivityBlock()?.accept(visitor);\n        descriptor\n            .getActivityCode()\n            .getInstructions()\n            .push(...visitor.getInstructions());\n        visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getFinallyBlock()?.accept(visitor);\n        descriptor\n            .getFinallyCode()\n            .getInstructions()\n            .push(...visitor.getInstructions());\n    }\n}\nexport class ProcedureGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitProcedure(node) {\n        const visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getStatements()?.accept(visitor);\n    }\n}\nexport class ImplementationGeneratorVisitor extends Visitor {\n    constructor(symbol, metadata, symbols) {\n        super();\n        this.symbol = symbol;\n        this.metadata = metadata;\n        this.symbols = symbols;\n    }\n    visitImplementation(node) {\n        const visitor = new CodeGeneratorVisitor(this.symbols, this.symbol, this.metadata);\n        node.getStatements()?.accept(visitor);\n    }\n}\n//# sourceMappingURL=code-generator.js.map","import { ComponentDescriptor } from '@composita/il';\nexport class Metadata {\n    constructor() {\n        this.componentMapping = new Map();\n        this.implementationMapping = new Map();\n        this.procedureMapping = new Map();\n        this.variableToIndex = new Map();\n        this.globalDescriptor = new ComponentDescriptor('@@__GLOBAL_COMPONENT__@@');\n    }\n    getGlobalComponent() {\n        return this.globalDescriptor;\n    }\n    pushComponent(symbol, descriptor) {\n        this.componentMapping.set(symbol, descriptor);\n    }\n    findComponent(symbol) {\n        const result = this.componentMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushImplementation(symbol, descriptor) {\n        this.implementationMapping.set(symbol, descriptor);\n    }\n    findImplementation(symbol) {\n        const result = this.implementationMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushProcedure(symbol, descriptor) {\n        this.procedureMapping.set(symbol, descriptor);\n    }\n    findProcedure(symbol) {\n        const result = this.procedureMapping.get(symbol);\n        if (result === undefined) {\n            throw new Error('Unkknown Symbol <-> Component Mapping.');\n        }\n        return result;\n    }\n    pushVariable(symbol, index) {\n        this.variableToIndex.set(symbol, index);\n    }\n    findVariable(symbol) {\n        const result = this.variableToIndex.get(symbol);\n        if (result === undefined) {\n            console.dir(symbol, { depth: null });\n            console.dir(this.variableToIndex, { depth: null });\n            throw new Error('Unkknown Variable <-> Index Mapping.');\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=metadata.js.map","import { IL, ComponentDescriptor, ImplementationDescriptor, ProcedureDescriptor, VariableDescriptor, CollectionVariableDescriptor, } from '@composita/il';\nimport { ProgramScopeSymbol, CollectionVariableSymbol } from '@composita/symbols';\nimport { ComponentGeneratorVisitor } from './code-generator';\nimport { Metadata } from './metadata';\nimport { ComponentNode } from '@composita/ast';\nexport class Generator {\n    generate(symbols) {\n        const il = new IL();\n        const metadata = this.generateMetadata(symbols);\n        symbols.getComponents().forEach((component) => this.generateComponent(component, symbols, il, metadata));\n        return il;\n    }\n    generateMetadata(symbols) {\n        const metadata = new Metadata();\n        symbols\n            .getSystemProcedures()\n            .forEach((procedure) => metadata.pushProcedure(procedure, new ProcedureDescriptor(procedure.getIdentifier(), metadata.getGlobalComponent(), new Array(procedure.getParameters().length))));\n        symbols.getComponents().forEach((component) => {\n            const descriptor = new ComponentDescriptor(component.getIdentifier());\n            metadata.pushComponent(component, descriptor);\n            symbols.getVariables(component).forEach((variable) => {\n                const name = variable.getIdentifier();\n                const varDescriptor = variable instanceof CollectionVariableSymbol\n                    ? new CollectionVariableDescriptor(name)\n                    : new VariableDescriptor(name);\n                const index = descriptor.pushField(varDescriptor);\n                metadata.pushVariable(variable, index);\n            });\n            symbols\n                .getImplementations(component)\n                .forEach((implementation) => metadata.pushImplementation(implementation, new ImplementationDescriptor(implementation.getInterface().getIdentifier(), descriptor)));\n            symbols\n                .getProcedures(component)\n                .forEach((procedure) => metadata.pushProcedure(procedure, new ProcedureDescriptor(procedure.getIdentifier(), descriptor, new Array(procedure.getParameters().length))));\n        });\n        return metadata;\n    }\n    generateComponent(component, symbols, il, metadata) {\n        const node = symbols.findDeclarationNode(component);\n        if (node === undefined || !(node instanceof ComponentNode)) {\n            throw new Error(`Failed node lookup for component ${component.getIdentifier()}`);\n        }\n        node.getBody()?.accept(new ComponentGeneratorVisitor(component, metadata, symbols));\n        const descriptor = metadata.findComponent(component);\n        il.pushComponent(descriptor);\n        if (this.isEntryPoint(component)) {\n            il.pushEntry(descriptor);\n        }\n    }\n    isEntryPoint(component) {\n        if (!(component.getScope() instanceof ProgramScopeSymbol)) {\n            return false;\n        }\n        const required = component.getGenericType().getRequired();\n        return (required.length === 0 ||\n            required\n                .map((required) => this.isSystemInterface(required.getInterface().getIdentifier()))\n                .reduce((prev, current) => prev && current, true));\n    }\n    isSystemInterface(name) {\n        switch (name) {\n            case 'SystemTime':\n            case 'FileSystem':\n            case 'GraphicView':\n                return true;\n            default:\n                return false;\n        }\n    }\n}\n//# sourceMappingURL=generator.js.map","import { Lexer } from '@composita/lexer';\nimport { Parser } from '@composita/parser';\nimport { CompilerDiagnosis } from '@composita/diagnosis';\nimport { Checker } from '@composita/checker';\nimport { Generator } from '@composita/generator';\nexport class Compiler {\n    async compile(uri, code) {\n        const diagnosis = new CompilerDiagnosis();\n        const lexer = new Lexer(diagnosis, uri, code);\n        const parser = new Parser(diagnosis, lexer);\n        const ast = parser.parse();\n        if (diagnosis.hasErrors()) {\n            diagnosis.print(console.log);\n            throw new Error('Error during Lexing and/or Parsing. See console.log.');\n        }\n        const checker = new Checker();\n        const symbols = checker.check(uri, ast);\n        const generator = new Generator();\n        return generator.generate(symbols);\n    }\n}\n//# sourceMappingURL=compiler.js.map","import { System } from '@composita/system';\n\n// inspired from https://stackoverflow.com/questions/53818157/using-webpack-worker-loader-with-typescript-causes-cannot-find-module-error\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-restricted-globals */\nconst ctx: Worker = self as any;\n\nlet isRunning = false;\n\nfunction capture(...msgs: Array<string>): void {\n    msgs.forEach((msg) => {\n        if (msg !== undefined) {\n            ctx.postMessage({ output: msg, running: isRunning });\n        }\n    });\n}\n\nfunction updater(update: boolean): void {\n    isRunning = update;\n    ctx.postMessage({ output: '', running: isRunning });\n}\n\nfunction postError(msg: string): void {\n    isRunning = false;\n    ctx.postMessage({ output: `\\n!!! ${msg} !!!\\n\\n`, running: isRunning });\n}\n\nconst system = new System(capture.bind(ctx), updater.bind(ctx));\n\nctx.onmessage = async (event) => {\n    if (event.data.fn === 'run') {\n        try {\n            updater(true);\n            await system.run(event.data.uri, event.data.code);\n        } catch (err) {\n            postError(err.message);\n        }\n    }\n\n    if (event.data.fn === 'stop') {\n        try {\n            await system.stop();\n        } catch (err) {\n            postError(err.message);\n        }\n    }\n};\n\nexport default ctx;\n","import { Compiler } from '@composita/compiler';\nimport { Runtime } from '@composita/runtime';\nexport class System {\n    constructor(out, runningUpdate) {\n        this.out = out;\n        this.runningUpdate = runningUpdate;\n        this.compiler = new Compiler();\n    }\n    async run(uri, code) {\n        Runtime.getInstance().reset();\n        Runtime.getInstance().changeOutput(this.out);\n        Runtime.getInstance().isRunningUpdate(this.runningUpdate);\n        const il = await this.compiler.compile(uri, code);\n        await Runtime.getInstance().execute(il);\n    }\n    async stop() {\n        Runtime.getInstance().reset();\n    }\n}\n//# sourceMappingURL=system.js.map"],"sourceRoot":""}